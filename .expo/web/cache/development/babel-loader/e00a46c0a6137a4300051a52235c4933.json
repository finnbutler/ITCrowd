{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/finnbeardmore/Documents/GitHub/ITCrowd/js/test.js\";\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nvar URL = \"https://itcrowdproject.uqcloud.net/?PET_PHOTO\";\n\nvar Test = function Test() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  useEffect(function () {\n    fetch(URL).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json.PID);\n    }).catch(function (error) {\n      return alert(error);\n    }).finally(setLoading(false));\n  });\n  return React.createElement(SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }) : React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(_ref, index) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 37\n        }\n      }, item.PID);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/finnbeardmore/Documents/GitHub/ITCrowd/js/test.js"],"names":["React","useEffect","useState","SafeAreaView","URL","Test","isLoading","setLoading","data","setData","fetch","then","response","json","PID","catch","error","alert","finally","index","id","item"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;;AAEA,SAASC,YAAT,QAA6B,gCAA7B;AAEA,IAAMC,GAAG,GAAG,+CAAZ;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,kBAAgCH,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOI,SAAP;AAAA,MAAkBC,UAAlB;;AACA,mBAAwBL,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,KAAK,CAACN,GAAD,CAAL,CACGO,IADH,CACQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACE,IAAD;AAAA,aAAUJ,OAAO,CAACI,IAAI,CAACC,GAAN,CAAjB;AAAA,KAFR,EAGGC,KAHH,CAGS,UAACC,KAAD;AAAA,aAAWC,KAAK,CAACD,KAAD,CAAhB;AAAA,KAHT,EAIGE,OAJH,CAIWX,UAAU,CAAC,KAAD,CAJrB;AAKD,GANQ,CAAT;AAOA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,SAAS,GACR,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAGR,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEE,IADR;AAEE,IAAA,YAAY,EAAE,4BAASW,KAAT;AAAA,UAAGC,EAAH,QAAGA,EAAH;AAAA,aAAmBA,EAAnB;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aAAc,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAI,CAACP,GAAZ,CAAd;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AAaD,CAxBD;;AAyBA,eAAeT,IAAf","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { ActivityIndicator, FlatList, Text, View } from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\n\nconst URL = \"https://itcrowdproject.uqcloud.net/?PET_PHOTO\";\nconst Test = () => {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(URL)\n      .then((response) => response.json())\n      .then((json) => setData(json.PID))\n      .catch((error) => alert(error))\n      .finally(setLoading(false));\n  });\n  return (\n    <SafeAreaView>\n      {isLoading ? (\n        <ActivityIndicator />\n      ) : (\n        <FlatList\n          data={data}\n          keyExtractor={({ id }, index) => id}\n          renderItem={({ item }) => <Text>{item.PID}</Text>}\n        />\n      )}\n    </SafeAreaView>\n  );\n};\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}