{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\haram\\\\OneDrive\\\\Desktop\\\\Itcrowd\\\\ITCrowd.github.io\\\\js\\\\start_quiz.js\";\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NativeBaseProvider, extendTheme, Input, Button, Box, Center, Stack, Heading, Flex } from \"native-base\";\nimport { useFonts, PaytoneOne_400Regular } from \"@expo-google-fonts/paytone-one\";\nimport { useState } from \"react\";\nimport AppLoading from \"expo-app-loading\";\nimport { Roboto_400Regular } from \"@expo-google-fonts/roboto\";\nimport Firebase from \"../config/firebase\";\nimport \"firebase/auth\";\nimport background from \"../assets/login_background.jpg\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useNavigation } from '@react-navigation/native';\n\nfunction saveData1(data) {\n  alert(data);\n  var petName = data;\n}\n\nfunction saveData2(data) {\n  alert(data);\n  var petName = data;\n}\n\nfunction nextQuestion(currentPoint) {\n  return questions[currentPoint];\n}\n\nfunction CardComponent() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data2 = _useState4[0],\n      setData2 = _useState4[1];\n\n  var leadsRef = Firebase.database().ref(\"8/data/0\");\n  var randomInt = Math.floor(Math.random() * 10);\n  var randomInt2 = Math.floor(Math.random() * 10);\n  var questions = [\"What's better species?\", \"What's a cooler name?\", \"Old soul or young at heart?\", \"Do you like to listen to one song, or mix them together? \", \"What's your favourite colour, (ps. ours is #2423fe)? \", \"Would you rather a small party or a medium disco? Just asking for a friend? \", \"Men or Women?\", \"Vaxed or Unvaxed, or anti-vaxer? Haha, we're joking. \", \"Caring for someone living with a disability, or not?\", \"Do you like when the claws come out?\", \"What's a better breed?\", \"Do you want more pets?\", \"At home or away?\"];\n  var listOfValues = [\"Species\", \"Name\", \"Age\", \"BreedIsMixed\", \"ColourPrimary\", \"Size\", \"Sex\", \"IsShotsCurrent\", \"IsSpecialNeeds\", \"IsDeclawed\", \"BreedPrimary\", \"IsSpayedorNeutered\", \"IsHouseTrained\"];\n  var currentPos = 10;\n  var valueDB = listOfValues[currentPos];\n  var currentItem1 = \"8/data/\" + randomInt + \"/\" + valueDB;\n  var currentItem2 = \"8/data/\" + randomInt2 + \"/\" + valueDB;\n  var item1 = Firebase.database().ref(currentItem1);\n  var item2 = Firebase.database().ref(currentItem2);\n  item1.on(\"value\", function (snapshot) {\n    snapshot.val();\n    var Name1 = snapshot.val();\n    var count = 0;\n\n    if (Name1 == 0 && data == \"\") {\n      setData(\"No Way!\");\n      count++;\n    }\n\n    if (Name1 == 1 && data == \"\") {\n      setData(\"Yes!\");\n      count++;\n    }\n\n    if (data == \"\" && count == 0) {\n      setData(Name1);\n    }\n  });\n  item2.on(\"value\", function (snapshot) {\n    snapshot.val();\n    var Name1 = snapshot.val();\n\n    if (Name1 == 0) {\n      setData2(\"No Way!\");\n    }\n\n    if (Name1 == 1) {\n      setData2(\"Yes!\");\n    }\n\n    if (data2 == \"\") {\n      setData2(Name1);\n    }\n  });\n  leadsRef.on(\"value\", function (snapshot) {\n    snapshot.forEach(function (childSnapshot) {\n      var childData = childSnapshot.val();\n    });\n  });\n  return React.createElement(Box, {\n    rounded: \"lg\",\n    width: \"60%\",\n    height: \"300px\",\n    shadow: 1,\n    _light: {\n      backgroundColor: \"gray.50\"\n    },\n    _dark: {\n      backgroundColor: \"gray.700\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack, {\n    p: \"4\",\n    space: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, React.createElement(Heading, {\n    size: \"md\",\n    ml: \"-1\",\n    color: \"#545871\",\n    fontFamily: \"PaytoneOne_400Regular\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"Question 1\"), React.createElement(Text, {\n    style: {\n      color: \"#545871\",\n      fontSize: 15,\n      fontFamily: \"PaytoneOne_400Regular\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, questions[currentPos]), React.createElement(Flex, {\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: data,\n    size: \"sm\",\n    margin: 1,\n    p: 4,\n    onPress: function onPress() {\n      return saveData1(data);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontFamily: \"Roboto_400Regular\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, data)), React.createElement(Button, {\n    size: \"sm\",\n    margin: 1,\n    p: 4,\n    colorScheme: \"secondary\",\n    onPress: function onPress() {\n      return saveData2(data2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontFamily: \"Roboto_400Regular\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, data2)))));\n}\n\nexport default function StartQuizScreen() {\n  var numberOfUsers = 15;\n  var randomIndex = Math.floor(Math.random() * numberOfUsers);\n  var navigation = useNavigation();\n\n  var _useState5 = useState(\"Basic\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mode = _useState6[0],\n      setMode = _useState6[1];\n\n  var _useFonts = useFonts({\n    Roboto_400Regular: Roboto_400Regular,\n    PaytoneOne_400Regular: PaytoneOne_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 2),\n      fontsLoaded = _useFonts2[0],\n      error = _useFonts2[1];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return React.createElement(NativeBaseProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: \"25%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, React.createElement(CardComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  })));\n}\n;","map":{"version":3,"sources":["C:/Users/haram/OneDrive/Desktop/Itcrowd/ITCrowd.github.io/js/start_quiz.js"],"names":["React","NativeBaseProvider","extendTheme","Input","Button","Box","Center","Stack","Heading","Flex","useFonts","PaytoneOne_400Regular","useState","AppLoading","Roboto_400Regular","Firebase","background","NavigationContainer","useNavigation","saveData1","data","alert","petName","saveData2","nextQuestion","currentPoint","questions","CardComponent","setData","data2","setData2","leadsRef","database","ref","randomInt","Math","floor","random","randomInt2","listOfValues","currentPos","valueDB","currentItem1","currentItem2","item1","item2","on","snapshot","val","Name1","count","forEach","childSnapshot","childData","backgroundColor","color","fontSize","fontFamily","textAlign","StartQuizScreen","numberOfUsers","randomIndex","navigation","mode","setMode","fontsLoaded","error","marginLeft","marginRight","marginTop"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n    Text,\r\n    View,\r\n    Image,\r\n    ImageBackground,\r\n    TouchableOpacity\r\n} from \"react-native\";\r\nimport { NativeBaseProvider, extendTheme, Input, Button, Box, Center, Stack, Heading, Flex } from \"native-base\";\r\nimport {\r\n    useFonts,\r\n    PaytoneOne_400Regular,\r\n} from \"@expo-google-fonts/paytone-one\";\r\nimport { useState } from \"react\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport { Roboto_400Regular } from \"@expo-google-fonts/roboto\";\r\nimport Firebase from \"../config/firebase\";\r\nimport \"firebase/auth\";\r\nimport background from \"../assets/login_background.jpg\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nfunction saveData1(data) {\r\n    alert(data);\r\n    const petName = data;\r\n}\r\nfunction saveData2(data) {\r\n    alert(data);\r\n    const petName = data;\r\n}\r\nfunction nextQuestion(currentPoint) {\r\n    return questions[currentPoint];\r\n}\r\nfunction CardComponent() {\r\n    const [data, setData] = useState(\"\");\r\n    const [data2, setData2] = useState(\"\");\r\n    var leadsRef = Firebase.database().ref(\"8/data/0\");\r\n    var randomInt = Math.floor(Math.random() * 10);\r\n    var randomInt2 = Math.floor(Math.random() * 10);\r\n    var questions = [\r\n        \"What's better species?\",\r\n        \"What's a cooler name?\",\r\n        \"Old soul or young at heart?\",\r\n        \"Do you like to listen to one song, or mix them together? \",\r\n        \"What's your favourite colour, (ps. ours is #2423fe)? \",\r\n        \"Would you rather a small party or a medium disco? Just asking for a friend? \",\r\n        \"Men or Women?\",\r\n        \"Vaxed or Unvaxed, or anti-vaxer? Haha, we're joking. \",\r\n        \"Caring for someone living with a disability, or not?\",\r\n        \"Do you like when the claws come out?\",\r\n        \"What's a better breed?\",\r\n        \"Do you want more pets?\",\r\n        \"At home or away?\",\r\n    ];\r\n    var listOfValues = [\r\n        \"Species\",\r\n        \"Name\",\r\n        \"Age\",\r\n        \"BreedIsMixed\",\r\n        \"ColourPrimary\",\r\n        \"Size\",\r\n        \"Sex\",\r\n        \"IsShotsCurrent\",\r\n        \"IsSpecialNeeds\",\r\n        \"IsDeclawed\",\r\n        \"BreedPrimary\",\r\n        \"IsSpayedorNeutered\",\r\n        \"IsHouseTrained\",\r\n    ];\r\n    var currentPos = 10;\r\n    var valueDB = listOfValues[currentPos];\r\n    var currentItem1 = \"8/data/\" + randomInt + \"/\" + valueDB;\r\n    var currentItem2 = \"8/data/\" + randomInt2 + \"/\" + valueDB;\r\n    var item1 = Firebase.database().ref(currentItem1);\r\n    var item2 = Firebase.database().ref(currentItem2);\r\n    item1.on(\"value\", function (snapshot) {\r\n        snapshot.val();\r\n        // alert(snapshot.val());\r\n        const Name1 = snapshot.val();\r\n        var count = 0;\r\n        if (Name1 == 0 && data == \"\") {\r\n            setData(\"No Way!\");\r\n            count++;\r\n        }\r\n        if (Name1 == 1 && data == \"\") {\r\n            setData(\"Yes!\");\r\n            count++;\r\n        }\r\n        if (data == \"\" && count == 0) {\r\n            setData(Name1);\r\n        }\r\n        //alert(Name1);\r\n    });\r\n    //alert(data);\r\n\r\n    item2.on(\"value\", function (snapshot) {\r\n        snapshot.val();\r\n        //alert(snapshot.val());\r\n        const Name1 = snapshot.val();\r\n        if (Name1 == 0) {\r\n            setData2(\"No Way!\");\r\n        }\r\n        if (Name1 == 1) {\r\n            setData2(\"Yes!\");\r\n        }\r\n        if (data2 == \"\") {\r\n            setData2(Name1);\r\n        }\r\n        //alert(Name1);\r\n    });\r\n\r\n    leadsRef.on(\"value\", function (snapshot) {\r\n        snapshot.forEach(function (childSnapshot) {\r\n            var childData = childSnapshot.val();\r\n            //  alert(childData);\r\n        });\r\n    });\r\n    return (\r\n        <Box\r\n            rounded=\"lg\"\r\n            width=\"60%\"\r\n            height=\"300px\"\r\n            shadow={1}\r\n            _light={{ backgroundColor: \"gray.50\" }}\r\n            _dark={{ backgroundColor: \"gray.700\" }}\r\n        >\r\n            <Stack p=\"4\" space={5}>\r\n                <Heading size=\"md\" ml=\"-1\" color=\"#545871\" fontFamily=\"PaytoneOne_400Regular\" textAlign=\"center\">\r\n                    Question 1\r\n                </Heading>\r\n                <Text\r\n                    style={{\r\n                        color: \"#545871\",\r\n                        fontSize: 15, fontFamily: \"PaytoneOne_400Regular\",\r\n                        textAlign: \"center\"\r\n                    }}\r\n                >\r\n                    {questions[currentPos]}\r\n                </Text>\r\n                <Flex\r\n                    direction=\"row\"\r\n                >\r\n                    <Button\r\n                        title={data}\r\n                        size=\"sm\" //  onPress={() => console.log('hello world')}\r\n                        margin={1}\r\n                        p={4}\r\n                        onPress={() => saveData1(data)}\r\n                    >\r\n                        <Text style={{ color: \"white\", fontFamily: \"Roboto_400Regular\" }}>{data}</Text>\r\n                    </Button>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        margin={1}\r\n                        p={4}\r\n                        colorScheme=\"secondary\"\r\n                        onPress={() => saveData2(data2)}\r\n                    >\r\n                        <Text style={{ color: \"white\", fontFamily: \"Roboto_400Regular\" }}>{data2}</Text>\r\n                    </Button>\r\n                </Flex>\r\n            </Stack>\r\n        </Box>\r\n    );\r\n}\r\nexport default function StartQuizScreen() {\r\n    const numberOfUsers = 15;\r\n    const randomIndex = Math.floor(Math.random() * numberOfUsers);\r\n    const navigation = useNavigation();\r\n    const [mode, setMode] = useState(\"Basic\");\r\n\r\n    let [fontsLoaded, error] = useFonts({\r\n        Roboto_400Regular,\r\n        PaytoneOne_400Regular,\r\n    });\r\n    if (!fontsLoaded) {\r\n        return <AppLoading />;\r\n    }\r\n    return (\r\n        <NativeBaseProvider>\r\n            <View style={{ marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"25%\" }}>\r\n                <CardComponent />\r\n            </View>\r\n        </NativeBaseProvider>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}