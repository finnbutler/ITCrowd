{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/finnbeardmore/Documents/GitHub/ITCrowd.github.io/Untitled/js/quiz.js\";\nimport React, { useState } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NativeBaseProvider, Box, Text, Pressable, Heading, IconButton, Icon, HStack, Avatar, VStack, Spacer, AspectRatio, Stack, Center, Image, Button, Flex } from \"native-base\";\nimport { SwipeListView } from \"react-native-swipe-list-view\";\nimport { MaterialIcons, Ionicons, Entypo } from \"@expo/vector-icons\";\nimport Firebase from \"../config/firebase\";\nimport parseErrorStack from \"react-native/Libraries/Core/Devtools/parseErrorStack\";\n\nfunction saveData1(data) {\n  alert(data);\n  var petName = data;\n}\n\nfunction saveData2(data) {\n  alert(data);\n  var petName = data;\n}\n\nfunction nextQuestion(currentPoint) {\n  return questions[currentPoint];\n}\n\nfunction CardComponent() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data2 = _useState4[0],\n      setData2 = _useState4[1];\n\n  var leadsRef = Firebase.database().ref(\"8/data/0\");\n  var randomInt = Math.floor(Math.random() * 10);\n  var randomInt2 = Math.floor(Math.random() * 10);\n  var randomInt3 = Math.floor(Math.random() * 10);\n  var questions = [\"What's better species?\", \"What's a cooler name?\", \"Old soul or young at heart?\", \"Do you like to listen to one song, or mix them together? \", \"What's your favourite colour, (ps. ours is #2423fe)? \", \"Would you rather a small party or a medium disco? Just asking for a friend? \", \"Men or Women?\", \"Vaxed or Unvaxed, or anti-vaxer? Haha, we're joking. \", \"Caring for someone living with a disability, or not?\", \"Do you like when the claws come out?\", \"What's a better breed?\", \"Do you want more pets?\", \"At home or away?\"];\n  var listOfValues = [\"Species\", \"Name\", \"Age\", \"BreedIsMixed\", \"ColourPrimary\", \"Size\", \"Sex\", \"IsShotsCurrent\", \"IsSpecialNeeds\", \"IsDeclawed\", \"BreedPrimary\", \"IsSpayedorNeutered\", \"IsHouseTrained\"];\n  var currentPos = 1;\n  var valueDB = listOfValues[currentPos];\n  var currentItem1 = \"8/data/\" + randomInt + \"/\" + valueDB;\n  var currentItem2 = \"8/data/\" + randomInt2 + \"/\" + valueDB;\n  var item1 = Firebase.database().ref(currentItem1);\n  var item2 = Firebase.database().ref(currentItem2);\n  item1.on(\"value\", function (snapshot) {\n    snapshot.val();\n    var Name1 = snapshot.val();\n    var count = 0;\n\n    if (Name1 == 0 && data == \"\") {\n      setData(\"No Way!\");\n      count++;\n    }\n\n    if (Name1 == 1 && data == \"\") {\n      setData(\"Yes!\");\n      count++;\n    }\n\n    if (data == \"\" && count == 0) {\n      setData(Name1);\n    }\n  });\n  item2.on(\"value\", function (snapshot) {\n    snapshot.val();\n    var Name1 = snapshot.val();\n\n    if (Name1 == 0) {\n      setData2(\"No Way!\");\n    }\n\n    if (Name1 == 1) {\n      setData2(\"Yes!\");\n    }\n\n    if (data2 == \"\") {\n      setData2(Name1);\n    }\n  });\n  leadsRef.on(\"value\", function (snapshot) {\n    snapshot.forEach(function (childSnapshot) {\n      var childData = childSnapshot.val();\n    });\n  });\n  return React.createElement(Box, {\n    rounded: \"lg\",\n    overflow: \"hidden\",\n    width: \"100%\",\n    height: \"300px\",\n    textalign: \"center\",\n    shadow: 1,\n    _light: {\n      backgroundColor: \"gray.50\"\n    },\n    _dark: {\n      backgroundColor: \"gray.700\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, React.createElement(Center, {\n    bg: \"red.500\",\n    _text: {\n      color: \"white\",\n      fontWeight: \"700\",\n      fontSize: \"xs\"\n    },\n    position: \"absolute\",\n    bottom: 0,\n    px: \"3\",\n    py: \"1.5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"QUIZ\")), React.createElement(Stack, {\n    p: \"4\",\n    space: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, React.createElement(Heading, {\n    size: \"md\",\n    ml: \"-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, \"Question 1\"), React.createElement(Text, {\n    fontSize: \"xs\",\n    _light: {\n      color: \"violet.500\"\n    },\n    _dark: {\n      color: \"violet.300\"\n    },\n    fontWeight: \"500\",\n    ml: \"-0.5\",\n    mt: \"-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, questions[currentPos]), React.createElement(Flex, {\n    direction: \"row\",\n    mb: \"2.5\",\n    mt: \"1.5\",\n    _text: {\n      color: \"coolGray.800\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: data,\n    size: \"sm\",\n    pt: \"1em\",\n    pl: \"2.4em\",\n    pr: \"2.4em\",\n    pb: \"1em\",\n    onPress: function onPress() {\n      return saveData1(data);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, data)), React.createElement(Button, {\n    size: \"sm\",\n    colorScheme: \"secondary\",\n    onPress: function onPress() {\n      return saveData2(data2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, \" \", React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, data2)))));\n}\n\nexport default function QuizScreen() {\n  var numberOfUsers = 15;\n  var randomIndex = Math.floor(Math.random() * numberOfUsers);\n\n  var _useState5 = useState(\"Basic\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mode = _useState6[0],\n      setMode = _useState6[1];\n\n  return React.createElement(NativeBaseProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }\n  }, React.createElement(Center, {\n    mt: \"200\",\n    flex: 1,\n    px: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, React.createElement(CardComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/finnbeardmore/Documents/GitHub/ITCrowd.github.io/Untitled/js/quiz.js"],"names":["React","useState","NativeBaseProvider","Box","Text","Pressable","Heading","IconButton","Icon","HStack","Avatar","VStack","Spacer","AspectRatio","Stack","Center","Image","Button","Flex","SwipeListView","MaterialIcons","Ionicons","Entypo","Firebase","parseErrorStack","saveData1","data","alert","petName","saveData2","nextQuestion","currentPoint","questions","CardComponent","setData","data2","setData2","leadsRef","database","ref","randomInt","Math","floor","random","randomInt2","randomInt3","listOfValues","currentPos","valueDB","currentItem1","currentItem2","item1","item2","on","snapshot","val","Name1","count","forEach","childSnapshot","childData","backgroundColor","color","fontWeight","fontSize","QuizScreen","numberOfUsers","randomIndex","mode","setMode"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Dimensions, TouchableOpacity, View } from \"react-native\";\n\nimport {\n  NativeBaseProvider,\n  Box,\n  Text,\n  Pressable,\n  Heading,\n  IconButton,\n  Icon,\n  HStack,\n  Avatar,\n  VStack,\n  Spacer,\n  AspectRatio,\n  Stack,\n  Center,\n  Image,\n  Button,\n  Flex,\n} from \"native-base\";\nimport { SwipeListView } from \"react-native-swipe-list-view\";\nimport { MaterialIcons, Ionicons, Entypo } from \"@expo/vector-icons\";\nimport Firebase from \"../config/firebase\";\nimport parseErrorStack from \"react-native/Libraries/Core/Devtools/parseErrorStack\";\n\nfunction saveData1(data) {\n  alert(data);\n  const petName = data;\n}\nfunction saveData2(data) {\n  alert(data);\n  const petName = data;\n}\nfunction nextQuestion(currentPoint) {\n  return questions[currentPoint];\n}\nfunction CardComponent() {\n  const [data, setData] = useState(\"\");\n  const [data2, setData2] = useState(\"\");\n  var leadsRef = Firebase.database().ref(\"8/data/0\");\n  var randomInt = Math.floor(Math.random() * 10);\n  var randomInt2 = Math.floor(Math.random() * 10);\n  const randomInt3 = Math.floor(Math.random() * 10);\n  var questions = [\n    \"What's better species?\",\n    \"What's a cooler name?\",\n    \"Old soul or young at heart?\",\n    \"Do you like to listen to one song, or mix them together? \",\n    \"What's your favourite colour, (ps. ours is #2423fe)? \",\n    \"Would you rather a small party or a medium disco? Just asking for a friend? \",\n    \"Men or Women?\",\n    \"Vaxed or Unvaxed, or anti-vaxer? Haha, we're joking. \",\n    \"Caring for someone living with a disability, or not?\",\n    \"Do you like when the claws come out?\",\n    \"What's a better breed?\",\n    \"Do you want more pets?\",\n    \"At home or away?\",\n  ];\n  var listOfValues = [\n    \"Species\",\n    \"Name\",\n    \"Age\",\n    \"BreedIsMixed\",\n    \"ColourPrimary\",\n    \"Size\",\n    \"Sex\",\n    \"IsShotsCurrent\",\n    \"IsSpecialNeeds\",\n    \"IsDeclawed\",\n    \"BreedPrimary\",\n    \"IsSpayedorNeutered\",\n    \"IsHouseTrained\",\n  ];\n  var currentPos = 1;\n  var valueDB = listOfValues[currentPos];\n  var currentItem1 = \"8/data/\" + randomInt + \"/\" + valueDB;\n  var currentItem2 = \"8/data/\" + randomInt2 + \"/\" + valueDB;\n  var item1 = Firebase.database().ref(currentItem1);\n  var item2 = Firebase.database().ref(currentItem2);\n  item1.on(\"value\", function (snapshot) {\n    snapshot.val();\n    // alert(snapshot.val());\n    const Name1 = snapshot.val();\n    var count = 0;\n    if (Name1 == 0 && data == \"\") {\n      setData(\"No Way!\");\n      count++;\n    }\n    if (Name1 == 1 && data == \"\") {\n      setData(\"Yes!\");\n      count++;\n    }\n    if (data == \"\" && count == 0) {\n      setData(Name1);\n    }\n    //alert(Name1);\n  });\n  //alert(data);\n\n  item2.on(\"value\", function (snapshot) {\n    snapshot.val();\n    //alert(snapshot.val());\n    const Name1 = snapshot.val();\n    if (Name1 == 0) {\n      setData2(\"No Way!\");\n    }\n    if (Name1 == 1) {\n      setData2(\"Yes!\");\n    }\n    if (data2 == \"\") {\n      setData2(Name1);\n    }\n    //alert(Name1);\n  });\n\n  leadsRef.on(\"value\", function (snapshot) {\n    snapshot.forEach(function (childSnapshot) {\n      var childData = childSnapshot.val();\n      //  alert(childData);\n    });\n  });\n  return (\n    <Box\n      rounded=\"lg\"\n      overflow=\"hidden\"\n      width=\"100%\"\n      height=\"300px\"\n      textalign=\"center\"\n      shadow={1}\n      _light={{ backgroundColor: \"gray.50\" }}\n      _dark={{ backgroundColor: \"gray.700\" }}\n    >\n      <Box>\n        <Center\n          bg=\"red.500\"\n          _text={{ color: \"white\", fontWeight: \"700\", fontSize: \"xs\" }}\n          position=\"absolute\"\n          bottom={0}\n          px=\"3\"\n          py=\"1.5\"\n        >\n          QUIZ\n        </Center>\n      </Box>\n      <Stack p=\"4\" space={3}>\n        <Heading size=\"md\" ml=\"-1\">\n          Question 1\n        </Heading>\n        <Text\n          fontSize=\"xs\"\n          _light={{ color: \"violet.500\" }}\n          _dark={{ color: \"violet.300\" }}\n          fontWeight=\"500\"\n          ml=\"-0.5\"\n          mt=\"-1\"\n        >\n          {questions[currentPos]}\n        </Text>\n        <Flex\n          direction=\"row\"\n          mb=\"2.5\"\n          mt=\"1.5\"\n          _text={{\n            color: \"coolGray.800\",\n          }}\n        >\n          <Button\n            title={data}\n            size=\"sm\" //  onPress={() => console.log('hello world')}\n            pt=\"1em\"\n            pl=\"2.4em\"\n            pr=\"2.4em\"\n            pb=\"1em\"\n            onPress={() => saveData1(data)}\n          >\n            <Text>{data}</Text>\n          </Button>\n          <Button\n            size=\"sm\"\n            colorScheme=\"secondary\"\n            onPress={() => saveData2(data2)}\n          >\n            {\" \"}\n            <Text>{data2}</Text>\n          </Button>\n        </Flex>\n      </Stack>\n    </Box>\n  );\n}\n\nexport default function QuizScreen() {\n  /*fetch(\"https://deco3801-91e98-default-rtdb.firebaseio.com/10/data\")\n    .then((response) => response.json())\n    .then((data) => console.log(data));*/\n\n  // Attach an asynchronous callback to read the data at our posts reference\n  const numberOfUsers = 15;\n  const randomIndex = Math.floor(Math.random() * numberOfUsers);\n\n  const [mode, setMode] = useState(\"Basic\");\n\n  return (\n    <NativeBaseProvider>\n      <Center mt=\"200\" flex={1} px=\"3\">\n        <CardComponent />\n      </Center>\n    </NativeBaseProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}