{"ast":null,"code":"var _jsxFileName = \"/Users/finnbeardmore/Documents/GitHub/ITCrowd/js/signupForm.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Input } from \"react-native-web/dist/index\";\nimport { NativeBaseProvider } from \"react-native-web/dist/index\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport auth from \"@react-native-firebase/auth\";\nimport Firebase from \"../config/firebase\";\n\nfunction registration(email, password, lastName, firstName) {\n  var currentUser, db;\n  return _regeneratorRuntime.async(function registration$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Firebase.auth().createUserWithEmailAndPassword(email, password));\n\n        case 3:\n          currentUser = Firebase.auth().currentUser;\n          db = Firebase.firestore();\n          db.collection(\"users\").doc(currentUser.uid).set({\n            email: currentUser.email,\n            lastName: lastName,\n            firstName: firstName\n          });\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          Alert.alert(\"There is something wrong!!!!\", _context.t0.message);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n}\n\nfunction App() {\n  return React.createElement(NativeBaseProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    style: \"dark-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Login\"), React.createElement(Input, {\n    inputStyle: {\n      fontSize: 14\n    },\n    containerStyle: {\n      backgroundColor: \"#fff\",\n      marginBottom: 20\n    },\n    leftIcon: \"email\",\n    placeholder: \"Enter email\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    autoFocus: true,\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    inputStyle: {\n      fontSize: 14\n    },\n    containerStyle: {\n      backgroundColor: \"#fff\",\n      marginBottom: 20\n    },\n    leftIcon: \"lock\",\n    placeholder: \"Enter password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: passwordVisibility,\n    textContentType: \"password\",\n    rightIcon: rightIcon,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    handlePasswordVisibility: handlePasswordVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    onPress: onLogin,\n    backgroundColor: \"#f57c00\",\n    title: \"Login\",\n    tileColor: \"#fff\",\n    titleSize: 20,\n    containerStyle: {\n      marginBottom: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \" \", React.createElement(Text, {\n    color: \"#545871\",\n    fontFamily: \"Roboto_400Regular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Login In\")), React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Signup\");\n    },\n    text: \"Go to Signup\",\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \" \", React.createElement(Text, {\n    color: \"#545871\",\n    fontFamily: \"Roboto_400Regular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/finnbeardmore/Documents/GitHub/ITCrowd/js/signupForm.js"],"names":["React","useState","useEffect","Input","NativeBaseProvider","auth","Firebase","registration","email","password","lastName","firstName","createUserWithEmailAndPassword","currentUser","db","firestore","collection","doc","uid","set","Alert","alert","message","App","fontSize","backgroundColor","marginBottom","text","setEmail","passwordVisibility","rightIcon","setPassword","handlePasswordVisibility","onLogin","navigation","navigate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, Input, NativeBaseProvider, StatusBar } from \"react-native\";\nimport auth from \"@react-native-firebase/auth\";\nimport Firebase from \"../config/firebase\";\nasync function registration(email, password, lastName, firstName) {\n  try {\n    await Firebase.auth().createUserWithEmailAndPassword(email, password);\n    const currentUser = Firebase.auth().currentUser;\n\n    const db = Firebase.firestore();\n    db.collection(\"users\").doc(currentUser.uid).set({\n      email: currentUser.email,\n      lastName: lastName,\n      firstName: firstName,\n    });\n  } catch (err) {\n    Alert.alert(\"There is something wrong!!!!\", err.message);\n  }\n}\nfunction App() {\n  // Set an initializing state whilst Firebase connects\n\n  return (\n    <NativeBaseProvider>\n      <View>\n        <StatusBar style=\"dark-content\" />\n        <Text>Login</Text>\n        <Input\n          inputStyle={{\n            fontSize: 14,\n          }}\n          containerStyle={{\n            backgroundColor: \"#fff\",\n            marginBottom: 20,\n          }}\n          leftIcon=\"email\"\n          placeholder=\"Enter email\"\n          autoCapitalize=\"none\"\n          keyboardType=\"email-address\"\n          textContentType=\"emailAddress\"\n          autoFocus={true}\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        />\n        <Input\n          inputStyle={{\n            fontSize: 14,\n          }}\n          containerStyle={{\n            backgroundColor: \"#fff\",\n            marginBottom: 20,\n          }}\n          leftIcon=\"lock\"\n          placeholder=\"Enter password\"\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          secureTextEntry={passwordVisibility}\n          textContentType=\"password\"\n          rightIcon={rightIcon}\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n          handlePasswordVisibility={handlePasswordVisibility}\n        />\n        <Button\n          onPress={onLogin}\n          backgroundColor=\"#f57c00\"\n          title=\"Login\"\n          tileColor=\"#fff\"\n          titleSize={20}\n          containerStyle={{\n            marginBottom: 24,\n          }}\n        >\n          {\" \"}\n          <Text color=\"#545871\" fontFamily=\"Roboto_400Regular\">\n            Login In\n          </Text>\n        </Button>\n        <Button\n          onPress={() => navigation.navigate(\"Signup\")}\n          text=\"Go to Signup\"\n          color=\"#fff\"\n        >\n          {\" \"}\n          <Text color=\"#545871\" fontFamily=\"Roboto_400Regular\">\n            Sign Up\n          </Text>\n        </Button>\n      </View>\n    </NativeBaseProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}