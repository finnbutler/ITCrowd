{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/finnbeardmore/Documents/GitHub/ITCrowd/App.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar FlexDirectionBasics = function FlexDirectionBasics() {\n  var _useState = useState(\"column\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      flexDirection = _useState2[0],\n      setflexDirection = _useState2[1];\n\n  return React.createElement(PreviewLayout, {\n    label: \"sdasd\",\n    values: [\"The Adventure Quiz\", \"Your Pets\", \"Dashboard\", \"Settings\"],\n    selectedValue: flexDirection,\n    setSelectedValue: setflexDirection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [styles.header, {\n      backgroundColor: \"powderblue\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [{\n      fontWeight: 500\n    }, {\n      fontFamily: \"Roboto\"\n    }, {\n      textAlign: \"center\"\n    }, {\n      fontSize: 30\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \" \", \"Choose Your Own Adventure, answer the questions to find your purrrfect pet!\", \" \")), React.createElement(View, {\n    style: [styles.box, {\n      backgroundColor: \"skyblue\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.selected2],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [{\n      fontWeight: 500\n    }, {\n      textAlign: \"center\"\n    }, {\n      fontSize: 30\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \" \", \"Yes\", \" \"))), React.createElement(View, {\n    style: [styles.box, {\n      backgroundColor: \"steelblue\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.selected2],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [{\n      fontWeight: 500\n    }, {\n      textAlign: \"center\"\n    }, {\n      fontSize: 30\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \" \", \"No\", \" \"))));\n};\n\nvar PreviewLayout = function PreviewLayout(_ref) {\n  var label = _ref.label,\n      children = _ref.children,\n      values = _ref.values,\n      selectedValue = _ref.selectedValue,\n      setSelectedValue = _ref.setSelectedValue;\n  return React.createElement(View, {\n    style: {\n      padding: 10,\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, label), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, values.map(function (value) {\n    return React.createElement(TouchableOpacity, {\n      key: value,\n      onPress: function onPress() {\n        return setSelectedValue(value);\n      },\n      style: [styles.button, selectedValue === value && styles.selected],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: [styles.buttonLabel, selectedValue === value && styles.selectedLabel],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, value));\n  })), React.createElement(View, {\n    style: [styles.container, _defineProperty({}, label, selectedValue)],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, children));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 8,\n    backgroundColor: \"aliceblue\"\n  },\n  header: {\n    width: 360,\n    height: 400\n  },\n  box: {\n    width: 360,\n    height: 70\n  },\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    paddingHorizontal: 8,\n    paddingVertical: 6,\n    borderRadius: 4,\n    backgroundColor: \"oldlace\",\n    alignSelf: \"flex-start\",\n    marginHorizontal: \"1%\",\n    marginBottom: 6,\n    minWidth: \"48%\",\n    textAlign: \"center\"\n  },\n  selected: {\n    backgroundColor: \"coral\",\n    borderWidth: 0\n  },\n  selected2: {\n    opacity: 0.5\n  },\n  buttonLabel: {\n    fontSize: 12,\n    fontWeight: \"500\",\n    color: \"coral\"\n  },\n  selectedLabel: {\n    color: \"white\"\n  },\n  label: {\n    textAlign: \"center\",\n    marginBottom: 10,\n    fontSize: 24\n  }\n});\nexport default FlexDirectionBasics;","map":{"version":3,"sources":["/Users/finnbeardmore/Documents/GitHub/ITCrowd/App.js"],"names":["React","useState","FlexDirectionBasics","flexDirection","setflexDirection","styles","header","backgroundColor","fontWeight","fontFamily","textAlign","fontSize","box","selected2","PreviewLayout","label","children","values","selectedValue","setSelectedValue","padding","flex","row","map","value","button","selected","buttonLabel","selectedLabel","container","StyleSheet","create","marginTop","width","height","flexWrap","paddingHorizontal","paddingVertical","borderRadius","alignSelf","marginHorizontal","marginBottom","minWidth","borderWidth","opacity","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\n\nconst FlexDirectionBasics = () => {\n  const [flexDirection, setflexDirection] = useState(\"column\");\n\n  return (\n    <PreviewLayout\n      label=\"sdasd\"\n      values={[\"The Adventure Quiz\", \"Your Pets\", \"Dashboard\", \"Settings\"]}\n      selectedValue={flexDirection}\n      setSelectedValue={setflexDirection}\n    >\n      <View style={[styles.header, { backgroundColor: \"powderblue\" }]}>\n        <Text\n          style={[\n            { fontWeight: 500 },\n            { fontFamily: \"Roboto\" },\n            { textAlign: \"center\" },\n            { fontSize: 30 },\n          ]}\n        >\n          {\" \"}\n          Choose Your Own Adventure, answer the questions to find your purrrfect\n          pet!{\" \"}\n        </Text>\n      </View>\n\n      <View style={[styles.box, { backgroundColor: \"skyblue\" }]}>\n        <TouchableOpacity style={[styles.selected2]}>\n          <Text\n            style={[\n              { fontWeight: 500 },\n              { textAlign: \"center\" },\n              { fontSize: 30 },\n            ]}\n          >\n            {\" \"}\n            Yes{\" \"}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View style={[styles.box, { backgroundColor: \"steelblue\" }]}>\n        <TouchableOpacity style={[styles.selected2]}>\n          <Text\n            style={[\n              { fontWeight: 500 },\n              { textAlign: \"center\" },\n              { fontSize: 30 },\n            ]}\n          >\n            {\" \"}\n            No{\" \"}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </PreviewLayout>\n  );\n};\n\nconst PreviewLayout = ({\n  label,\n  children,\n  values,\n  selectedValue,\n  setSelectedValue,\n}) => (\n  <View style={{ padding: 10, flex: 1 }}>\n    <Text style={styles.label}>{label}</Text>\n    <View style={styles.row}>\n      {values.map((value) => (\n        <TouchableOpacity\n          key={value}\n          onPress={() => setSelectedValue(value)}\n          style={[styles.button, selectedValue === value && styles.selected]}\n        >\n          <Text\n            style={[\n              styles.buttonLabel,\n              selectedValue === value && styles.selectedLabel,\n            ]}\n          >\n            {value}\n          </Text>\n        </TouchableOpacity>\n      ))}\n    </View>\n    <View style={[styles.container, { [label]: selectedValue }]}>\n      {children}\n    </View>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 8,\n    backgroundColor: \"aliceblue\",\n  },\n  header: {\n    width: 360,\n    height: 400,\n  },\n  box: {\n    width: 360,\n    height: 70,\n  },\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n  button: {\n    paddingHorizontal: 8,\n    paddingVertical: 6,\n    borderRadius: 4,\n    backgroundColor: \"oldlace\",\n    alignSelf: \"flex-start\",\n    marginHorizontal: \"1%\",\n    marginBottom: 6,\n    minWidth: \"48%\",\n    textAlign: \"center\",\n  },\n  selected: {\n    backgroundColor: \"coral\",\n    borderWidth: 0,\n  },\n  selected2: {\n    opacity: 0.5,\n  },\n  buttonLabel: {\n    fontSize: 12,\n    fontWeight: \"500\",\n    color: \"coral\",\n  },\n  selectedLabel: {\n    color: \"white\",\n  },\n  label: {\n    textAlign: \"center\",\n    marginBottom: 10,\n    fontSize: 24,\n  },\n});\n\nexport default FlexDirectionBasics;\n"]},"metadata":{},"sourceType":"module"}