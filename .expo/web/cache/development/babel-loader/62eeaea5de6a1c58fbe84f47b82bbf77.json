{"ast":null,"code":"var _jsxFileName = \"/Users/finnbeardmore/Documents/GitHub/ITCrowd/js/signupForm.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Input } from \"react-native-web/dist/index\";\nimport auth from \"@react-native-firebase/auth\";\nimport Firebase from \"./config/firebase\";\n\nfunction App() {\n  function registration(email, password, lastName, firstName) {\n    var currentUser, db;\n    return _regeneratorRuntime.async(function registration$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Firebase.auth().createUserWithEmailAndPassword(email, password));\n\n          case 3:\n            currentUser = Firebase.auth().currentUser;\n            db = Firebase.firestore();\n            db.collection(\"users\").doc(currentUser.uid).set({\n              email: currentUser.email,\n              lastName: lastName,\n              firstName: firstName\n            });\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            Alert.alert(\"There is something wrong!!!!\", _context.t0.message);\n\n          case 11:\n            if (user) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\", React.createElement(View, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 9\n              }\n            }, React.createElement(Text, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 11\n              }\n            }, \"Login\")));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this, [[0, 8]], Promise);\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/finnbeardmore/Documents/GitHub/ITCrowd/js/signupForm.js"],"names":["React","useState","useEffect","Input","auth","Firebase","App","registration","email","password","lastName","firstName","createUserWithEmailAndPassword","currentUser","db","firestore","collection","doc","uid","set","Alert","alert","message","user"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;SACqBC,K;AACrB,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,QAAP;;AAEA,SAASC,GAAT,GAAe;AAEb,WAAeC,YAAf,CAA4BC,KAA5B,EAAmCC,QAAnC,EAA6CC,QAA7C,EAAuDC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEUN,QAAQ,CAACD,IAAT,GAAgBQ,8BAAhB,CAA+CJ,KAA/C,EAAsDC,QAAtD,CAFV;;AAAA;AAGUI,YAAAA,WAHV,GAGwBR,QAAQ,CAACD,IAAT,GAAgBS,WAHxC;AAKUC,YAAAA,EALV,GAKeT,QAAQ,CAACU,SAAT,EALf;AAMID,YAAAA,EAAE,CAACE,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BJ,WAAW,CAACK,GAAvC,EAA4CC,GAA5C,CAAgD;AAC9CX,cAAAA,KAAK,EAAEK,WAAW,CAACL,KAD2B;AAE9CE,cAAAA,QAAQ,EAAEA,QAFoC;AAG9CC,cAAAA,SAAS,EAAEA;AAHmC,aAAhD;AANJ;AAAA;;AAAA;AAAA;AAAA;AAYIS,YAAAA,KAAK,CAACC,KAAN,CAAY,8BAAZ,EAA4C,YAAIC,OAAhD;;AAZJ;AAAA,gBAeOC,IAfP;AAAA;AAAA;AAAA;;AAAA,6CAiBM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAjBN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBD;;AAED,eAAejB,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, Input } from \"react-native\";\nimport auth from \"@react-native-firebase/auth\";\nimport Firebase from \"./config/firebase\";\n\nfunction App() {\n  // Set an initializing state whilst Firebase connects\n  async function registration(email, password, lastName, firstName) {\n    try {\n      await Firebase.auth().createUserWithEmailAndPassword(email, password);\n      const currentUser = Firebase.auth().currentUser;\n\n      const db = Firebase.firestore();\n      db.collection(\"users\").doc(currentUser.uid).set({\n        email: currentUser.email,\n        lastName: lastName,\n        firstName: firstName,\n      });\n    } catch (err) {\n      Alert.alert(\"There is something wrong!!!!\", err.message);\n    }\n\n    if (!user) {\n      return (\n        <View>\n          <Text>Login</Text>\n        </View>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}