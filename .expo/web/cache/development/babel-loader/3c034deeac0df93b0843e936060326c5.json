{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/finnbeardmore/Documents/GitHub/ITCrowd/App.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { VStack, HStack, Button, IconButton, Icon, Text, NativeBaseProvider, Center, Box, StatusBar } from \"native-base\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\n\nvar FlexDirectionBasics = function FlexDirectionBasics() {\n  var _useState = useState(\"column\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      flexDirection = _useState2[0],\n      setflexDirection = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n    backgroundColor: \"#3700B3\",\n    barStyle: \"light-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), React.createElement(Box, {\n    safeAreaTop: true,\n    backgroundColor: \"#6200ee\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), React.createElement(HStack, {\n    bg: \"#6200ee\",\n    px: 1,\n    py: 3,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(HStack, {\n    space: 4,\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(IconButton, {\n    icon: React.createElement(Icon, {\n      size: \"sm\",\n      as: React.createElement(MaterialIcons, {\n        name: \"menu\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }),\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    color: \"white\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Home\")), React.createElement(HStack, {\n    space: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(IconButton, {\n    icon: React.createElement(Icon, {\n      as: React.createElement(MaterialIcons, {\n        name: \"favorite\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      }),\n      size: \"sm\",\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), React.createElement(IconButton, {\n    icon: React.createElement(Icon, {\n      as: React.createElement(MaterialIcons, {\n        name: \"search\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }),\n      color: \"white\",\n      size: \"sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), React.createElement(IconButton, {\n    icon: React.createElement(Icon, {\n      as: React.createElement(MaterialIcons, {\n        name: \"more-vert\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }),\n      size: \"sm\",\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default function () {\n  return React.createElement(NativeBaseProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, React.createElement(AppBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar PreviewLayout = function PreviewLayout(_ref) {\n  var label = _ref.label,\n      children = _ref.children,\n      values = _ref.values,\n      selectedValue = _ref.selectedValue,\n      setSelectedValue = _ref.setSelectedValue;\n  return React.createElement(View, {\n    style: {\n      padding: 10,\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }, label), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, values.map(function (value) {\n    return React.createElement(TouchableOpacity, {\n      key: value,\n      onPress: function onPress() {\n        return setSelectedValue(value);\n      },\n      style: [styles.button, selectedValue === value && styles.selected],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: [styles.buttonLabel, selectedValue === value && styles.selectedLabel],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, value));\n  })), React.createElement(View, {\n    style: [styles.container, _defineProperty({}, label, selectedValue)],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, children));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 8,\n    backgroundColor: \"aliceblue\"\n  },\n  header: {\n    width: 360,\n    height: 400\n  },\n  box: {\n    width: 360,\n    height: 70\n  },\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    paddingHorizontal: 8,\n    paddingVertical: 6,\n    borderRadius: 4,\n    backgroundColor: \"oldlace\",\n    alignSelf: \"flex-start\",\n    marginHorizontal: \"1%\",\n    marginBottom: 6,\n    minWidth: \"48%\",\n    textAlign: \"center\"\n  },\n  selected: {\n    backgroundColor: \"coral\",\n    borderWidth: 0\n  },\n  selected2: {\n    opacity: 0.5\n  },\n  buttonLabel: {\n    fontSize: 12,\n    fontWeight: \"500\",\n    color: \"coral\"\n  },\n  selectedLabel: {\n    color: \"white\"\n  },\n  label: {\n    textAlign: \"center\",\n    marginBottom: 10,\n    fontSize: 24\n  }\n});","map":{"version":3,"sources":["/Users/finnbeardmore/Documents/GitHub/ITCrowd/App.js"],"names":["React","useState","VStack","HStack","Button","IconButton","Icon","Text","NativeBaseProvider","Center","Box","StatusBar","MaterialIcons","FlexDirectionBasics","flexDirection","setflexDirection","PreviewLayout","label","children","values","selectedValue","setSelectedValue","padding","flex","styles","row","map","value","button","selected","buttonLabel","selectedLabel","container","StyleSheet","create","marginTop","backgroundColor","header","width","height","box","flexWrap","paddingHorizontal","paddingVertical","borderRadius","alignSelf","marginHorizontal","marginBottom","minWidth","textAlign","borderWidth","selected2","opacity","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, TouchableOpacity, View } from \"react-native\";\nimport {\n  VStack,\n  HStack,\n  Button,\n  IconButton,\n  Icon,\n  Text,\n  NativeBaseProvider,\n  Center,\n  Box,\n  StatusBar,\n} from \"native-base\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\n\nconst FlexDirectionBasics = () => {\n  const [flexDirection, setflexDirection] = useState(\"column\");\n\n  return (\n    /* <PreviewLayout\n      label=\"Purrrfect Pets\"\n      values={[\"The Adventure Quiz\", \"Your Pets\", \"Dashboard\", \"Settings\"]}\n      selectedValue={flexDirection}\n      setSelectedValue={setflexDirection}\n    >\n      <View style={[styles.header, { backgroundColor: \"powderblue\" }]}>\n        <Text\n          style={[\n            { fontWeight: 500 },\n            { fontFamily: \"Roboto\" },\n            { textAlign: \"center\" },\n            { fontSize: 30 },\n          ]}\n        >\n          {\" \"}\n          Choose Your Own Adventure, answer the questions to find your purrrfect\n          pet!{\" \"}\n        </Text>\n      </View>\n\n      <View style={[styles.box, { backgroundColor: \"skyblue\" }]}>\n        <TouchableOpacity style={[styles.selected2]}>\n          <Text\n            style={[\n              { fontWeight: 500 },\n              { textAlign: \"center\" },\n              { fontSize: 30 },\n            ]}\n          >\n            {\" \"}\n            Yes{\" \"}\n          </Text>\n        </TouchableOpacity>\n      </View>\n      <View style={[styles.box, { backgroundColor: \"steelblue\" }]}>\n        <TouchableOpacity style={[styles.selected2]}>\n          <Text\n            style={[\n              { fontWeight: 500 },\n              { textAlign: \"center\" },\n              { fontSize: 30 },\n            ]}\n          >\n            {\" \"}\n            No{\" \"}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </PreviewLayout>*/\n    <>\n      <StatusBar backgroundColor=\"#3700B3\" barStyle=\"light-content\" />\n\n      <Box safeAreaTop backgroundColor=\"#6200ee\" />\n\n      <HStack\n        bg=\"#6200ee\"\n        px={1}\n        py={3}\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <HStack space={4} alignItems=\"center\">\n          <IconButton\n            icon={\n              <Icon\n                size=\"sm\"\n                as={<MaterialIcons name=\"menu\" />}\n                color=\"white\"\n              />\n            }\n          />\n          <Text color=\"white\" fontSize={20} fontWeight=\"bold\">\n            Home\n          </Text>\n        </HStack>\n        <HStack space={2}>\n          <IconButton\n            icon={\n              <Icon\n                as={<MaterialIcons name=\"favorite\" />}\n                size=\"sm\"\n                color=\"white\"\n              />\n            }\n          />\n          <IconButton\n            icon={\n              <Icon\n                as={<MaterialIcons name=\"search\" />}\n                color=\"white\"\n                size=\"sm\"\n              />\n            }\n          />\n          <IconButton\n            icon={\n              <Icon\n                as={<MaterialIcons name=\"more-vert\" />}\n                size=\"sm\"\n                color=\"white\"\n              />\n            }\n          />\n        </HStack>\n      </HStack>\n    </>\n  );\n};\n\nexport default function () {\n  return (\n    <NativeBaseProvider>\n      <AppBar />\n    </NativeBaseProvider>\n  );\n}\n\nconst PreviewLayout = ({\n  label,\n  children,\n  values,\n  selectedValue,\n  setSelectedValue,\n}) => (\n  <View style={{ padding: 10, flex: 1 }}>\n    <Text style={styles.label}>{label}</Text>\n    <View style={styles.row}>\n      {values.map((value) => (\n        <TouchableOpacity\n          key={value}\n          onPress={() => setSelectedValue(value)}\n          style={[styles.button, selectedValue === value && styles.selected]}\n        >\n          <Text\n            style={[\n              styles.buttonLabel,\n              selectedValue === value && styles.selectedLabel,\n            ]}\n          >\n            {value}\n          </Text>\n        </TouchableOpacity>\n      ))}\n    </View>\n    <View style={[styles.container, { [label]: selectedValue }]}>\n      {children}\n    </View>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 8,\n    backgroundColor: \"aliceblue\",\n  },\n  header: {\n    width: 360,\n    height: 400,\n  },\n  box: {\n    width: 360,\n    height: 70,\n  },\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n  button: {\n    paddingHorizontal: 8,\n    paddingVertical: 6,\n    borderRadius: 4,\n    backgroundColor: \"oldlace\",\n    alignSelf: \"flex-start\",\n    marginHorizontal: \"1%\",\n    marginBottom: 6,\n    minWidth: \"48%\",\n    textAlign: \"center\",\n  },\n  selected: {\n    backgroundColor: \"coral\",\n    borderWidth: 0,\n  },\n  selected2: {\n    opacity: 0.5,\n  },\n  buttonLabel: {\n    fontSize: 12,\n    fontWeight: \"500\",\n    color: \"coral\",\n  },\n  selectedLabel: {\n    color: \"white\",\n  },\n  label: {\n    textAlign: \"center\",\n    marginBottom: 10,\n    fontSize: 24,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}