{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\haram\\\\OneDrive\\\\Desktop\\\\Itcrowd\\\\ITCrowd.github.io\\\\js\\\\loginForm.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NativeBaseProvider, Input, Button } from \"native-base\";\nimport { useFonts, PaytoneOne_400Regular } from \"@expo-google-fonts/paytone-one\";\nimport { useState } from \"react\";\nimport AppLoading from \"expo-app-loading\";\nimport { Roboto_400Regular } from \"@expo-google-fonts/roboto\";\nimport Firebase from \"../config/firebase\";\nimport logo from \"../assets/Logo.jpg\";\nimport background from \"../assets/login_background.jpg\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useNavigation } from '@react-navigation/native';\n\nvar LoginScreen = function LoginScreen() {\n  var navigation = useNavigation();\n  var auth = Firebase.auth();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passwordVisibility = _useState6[0],\n      setPasswordVisibility = _useState6[1];\n\n  var _useState7 = useState(\"eye\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      rightIcon = _useState8[0],\n      setRightIcon = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loginError = _useState10[0],\n      setLoginError = _useState10[1];\n\n  var handlePasswordVisibility = function handlePasswordVisibility() {\n    if (rightIcon === \"eye\") {\n      setRightIcon(\"eye-off\");\n      setPasswordVisibility(!passwordVisibility);\n    } else if (rightIcon === \"eye-off\") {\n      setRightIcon(\"eye\");\n      setPasswordVisibility(!passwordVisibility);\n    }\n  };\n\n  var onLogin = function onLogin() {\n    return _regeneratorRuntime.async(function onLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(email !== \"\" && password !== \"\")) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(auth.signInWithEmailAndPassword(email, password));\n\n          case 4:\n            navigation.navigate(\"Quiz\");\n\n          case 5:\n            _context.next = 11;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            alert(\"ERROR!\");\n            setLoginError(_context.t0.message);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var _useFonts = useFonts({\n    Roboto_400Regular: Roboto_400Regular,\n    PaytoneOne_400Regular: PaytoneOne_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 2),\n      fontsLoaded = _useFonts2[0],\n      error = _useFonts2[1];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(NativeBaseProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: \"auto\",\n      height: 83,\n      backgroundColor: \"white\",\n      alignItems: \"center\",\n      paddingTop: 23\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: logo,\n    style: {\n      width: 65,\n      height: 58\n    },\n    alt: \"logo_image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  })), React.createElement(ImageBackground, {\n    source: background,\n    resizeMode: \"cover\",\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    alt: \"background_image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: -250\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginBottom: 20,\n      color: \"#545871\",\n      textAlign: \"center\",\n      fontSize: 20,\n      fontFamily: \"PaytoneOne_400Regular\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Login\"), React.createElement(Input, {\n    inputStyle: {\n      fontSize: 14\n    },\n    borderColor: \"grey\",\n    width: 300,\n    margin: \"auto\",\n    marginBottom: \"10px\",\n    leftIcon: \"email\",\n    placeholder: \"Enter email\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    autoFocus: true,\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    inputStyle: {\n      fontSize: 14\n    },\n    margin: \"auto\",\n    marginBottom: \"20px\",\n    borderColor: \"grey\",\n    width: 300,\n    placeholder: \"Enter password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: passwordVisibility,\n    textContentType: \"password\",\n    rightIcon: rightIcon,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    handlePasswordVisibility: handlePasswordVisibility,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    margin: \"auto\",\n    marginBottom: \"10px\",\n    onPress: onLogin,\n    backgroundColor: \"#f1c737\",\n    title: \"Login\",\n    width: 40,\n    borderRadius: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    marginBottom: \"10px\",\n    fontSize: \"13\",\n    color: \"#545871\",\n    fontFamily: \"Roboto_400Regular\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, \"Login\")), React.createElement(Text, {\n    style: {\n      color: \"#545871\",\n      fontFamily: \"Roboto_400Regular\",\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, \"Do not have an account? \", React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Signup\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 122\n    }\n  }, React.createElement(Text, {\n    style: {\n      textDecorationLine: 'underline'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 185\n    }\n  }, \"Sign up\"))))));\n};\n\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/haram/OneDrive/Desktop/Itcrowd/ITCrowd.github.io/js/loginForm.js"],"names":["React","NativeBaseProvider","Input","Button","useFonts","PaytoneOne_400Regular","useState","AppLoading","Roboto_400Regular","Firebase","logo","background","NavigationContainer","useNavigation","LoginScreen","navigation","auth","email","setEmail","password","setPassword","passwordVisibility","setPasswordVisibility","rightIcon","setRightIcon","loginError","setLoginError","handlePasswordVisibility","onLogin","signInWithEmailAndPassword","navigate","alert","message","fontsLoaded","error","width","height","backgroundColor","alignItems","paddingTop","flex","justifyContent","marginTop","marginBottom","color","textAlign","fontSize","fontFamily","text","textDecorationLine"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  Image,\r\n  ImageBackground,\r\n  TouchableOpacity\r\n} from \"react-native\";\r\nimport { NativeBaseProvider, Input, Button, } from \"native-base\";\r\nimport {\r\n  useFonts,\r\n  PaytoneOne_400Regular,\r\n} from \"@expo-google-fonts/paytone-one\";\r\nimport { useState } from \"react\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport { Roboto_400Regular } from \"@expo-google-fonts/roboto\";\r\nimport Firebase from \"../config/firebase\";\r\nimport logo from \"../assets/Logo.jpg\";\r\nimport background from \"../assets/login_background.jpg\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n// export async function registration(email, password, lastName, firstName) {\r\n//   try {\r\n//     await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n//     const currentUser = firebase.auth().currentUser;\r\n\r\n//     const db = firebase.firestore();\r\n//     db.collection(\"users\").doc(currentUser.uid).set({\r\n//       email: currentUser.email,\r\n//       lastName: lastName,\r\n//       firstName: firstName,\r\n//     });\r\n//   } catch (err) {\r\n//     Alert.alert(\"There is something wrong!!!!\", err.message);\r\n//   }\r\n// }\r\n// const LoginForm = () => {\r\n//   return (\r\n//     <View>\r\n//       <Text>Create an account </Text>\r\n\r\n//       <ScrollView onBlur={Keyboard.dismiss}>\r\n//         <TextInput placeholder=\"First name*\" />\r\n//         <TextInput placeholder=\"Last name\" />\r\n\r\n//         <TextInput\r\n//           placeholder=\"Enter your email\"\r\n//           keyboardType=\"email-address\"\r\n//           autoCapitalize=\"none\"\r\n//         />\r\n\r\n//         <TextInput placeholder=\"Enter your password\" secureTextEntry={true} />\r\n//         <TextInput\r\n//           placeholder=\"Retype your password to confirm*\"\r\n//           onChangeText={(password2) => setConfirmPassword(password2)}\r\n//           secureTextEntry={true}\r\n//         />\r\n//         <TouchableOpacity onPress={handlePress}>\r\n//           <Text>Sign Up</Text>\r\n//         </TouchableOpacity>\r\n\r\n//         <Text>Already have an account?</Text>\r\n//         <TouchableOpacity onPress={() => navigation.navigate(\"Sign In\")}>\r\n//           <Text>Sign In</Text>\r\n//         </TouchableOpacity>\r\n//       </ScrollView>\r\n//     </View>\r\n//   );\r\n// };\r\nconst LoginScreen = () => {\r\n  const navigation = useNavigation();\r\n\r\n  const auth = Firebase.auth();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordVisibility, setPasswordVisibility] = useState(true);\r\n  const [rightIcon, setRightIcon] = useState(\"eye\");\r\n  const [loginError, setLoginError] = useState(\"\");\r\n\r\n  const handlePasswordVisibility = () => {\r\n    if (rightIcon === \"eye\") {\r\n      setRightIcon(\"eye-off\");\r\n      setPasswordVisibility(!passwordVisibility);\r\n    } else if (rightIcon === \"eye-off\") {\r\n      setRightIcon(\"eye\");\r\n      setPasswordVisibility(!passwordVisibility);\r\n    }\r\n  };\r\n\r\n  const onLogin = async () => {\r\n    try {\r\n      if (email !== \"\" && password !== \"\") {\r\n        await auth.signInWithEmailAndPassword(email, password);\r\n        navigation.navigate(\"Quiz\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"ERROR!\");\r\n      setLoginError(error.message);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  let [fontsLoaded, error] = useFonts({\r\n    Roboto_400Regular,\r\n    PaytoneOne_400Regular,\r\n  });\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />;\r\n  }\r\n  return (\r\n    //<NavigationContainer>   \r\n    <NativeBaseProvider>\r\n      <View\r\n        style={{\r\n          width: \"auto\",\r\n          height: 83,\r\n          backgroundColor: \"white\",\r\n          alignItems: \"center\",\r\n          paddingTop: 23,\r\n        }}\r\n      >\r\n        <Image\r\n          source={logo}\r\n          style={{ width: 65, height: 58 }}\r\n          alt=\"logo_image\"\r\n        />\r\n      </View>\r\n      <ImageBackground\r\n        source={background}\r\n        resizeMode=\"cover\"\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n        }}\r\n        alt=\"background_image\">\r\n\r\n        <View style={{ marginTop: -250 }}>\r\n          <Text style={{ marginBottom: 20, color: \"#545871\", textAlign: \"center\", \r\n          fontSize: 20, fontFamily: \"PaytoneOne_400Regular\"}}>\r\n            Login\r\n            </Text>\r\n          <Input\r\n            inputStyle={{\r\n              fontSize: 14,\r\n            }}\r\n            borderColor=\"grey\"\r\n            width={300}\r\n            margin=\"auto\"\r\n            marginBottom=\"10px\"\r\n            leftIcon=\"email\"\r\n            placeholder=\"Enter email\"\r\n            autoCapitalize=\"none\"\r\n            keyboardType=\"email-address\"\r\n            textContentType=\"emailAddress\"\r\n            autoFocus={true}\r\n            value={email}\r\n            onChangeText={(text) => setEmail(text)}\r\n          />\r\n          <Input\r\n            inputStyle={{\r\n              fontSize: 14,\r\n            }}\r\n            margin=\"auto\"\r\n            marginBottom=\"20px\"\r\n            borderColor=\"grey\"\r\n            width={300}\r\n            placeholder=\"Enter password\"\r\n            autoCapitalize=\"none\"\r\n            autoCorrect={false}\r\n            secureTextEntry={passwordVisibility}\r\n            textContentType=\"password\"\r\n            rightIcon={rightIcon}\r\n            value={password}\r\n            onChangeText={(text) => setPassword(text)}\r\n            handlePasswordVisibility={handlePasswordVisibility}\r\n          />\r\n          <Button\r\n            margin=\"auto\"\r\n            marginBottom=\"10px\"\r\n            onPress={onLogin}\r\n            backgroundColor=\"#f1c737\"\r\n            title=\"Login\"\r\n            width={40}\r\n            borderRadius={7}\r\n          >\r\n            <Text\r\n              marginBottom=\"10px\"\r\n              fontSize=\"13\"\r\n              color=\"#545871\"\r\n              fontFamily=\"Roboto_400Regular\"\r\n            >\r\n              Login\r\n            </Text>\r\n          </Button>\r\n          <Text style={{color: \"#545871\", fontFamily: \"Roboto_400Regular\", textAlign: \"center\"}}>Do not have an account? <TouchableOpacity onPress={()=> navigation.navigate(\"Signup\")}><Text style={{textDecorationLine: 'underline'}}>Sign up</Text></TouchableOpacity></Text>\r\n        </View>\r\n      </ImageBackground>\r\n    </NativeBaseProvider>//</NavigationContainer> \r\n  );\r\n};\r\n\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}