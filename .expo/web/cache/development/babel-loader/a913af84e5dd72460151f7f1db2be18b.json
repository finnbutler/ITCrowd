{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar parseHermesStack = require(\"./parseHermesStack\");\n\nfunction convertHermesStack(stack) {\n  var frames = [];\n\n  for (var _iterator = _createForOfIteratorHelperLoose(stack.entries), _step; !(_step = _iterator()).done;) {\n    var entry = _step.value;\n\n    if (entry.type !== 'FRAME') {\n      continue;\n    }\n\n    var location = entry.location,\n        functionName = entry.functionName;\n\n    if (location.type === 'NATIVE') {\n      continue;\n    }\n\n    frames.push({\n      methodName: functionName,\n      file: location.sourceUrl,\n      lineNumber: location.line1Based,\n      column: location.type === 'SOURCE' ? location.column1Based - 1 : location.virtualOffset0Based\n    });\n  }\n\n  return frames;\n}\n\nfunction parseErrorStack(e) {\n  if (!e || !e.stack) {\n    return [];\n  }\n\n  var stacktraceParser = require('stacktrace-parser');\n\n  var stack = Array.isArray(e.stack) ? e.stack : global.HermesInternal ? convertHermesStack(parseHermesStack(e.stack)) : stacktraceParser.parse(e.stack).map(function (frame) {\n    return _objectSpread(_objectSpread({}, frame), {}, {\n      column: frame.column != null ? frame.column - 1 : null\n    });\n  });\n  return stack;\n}\n\nmodule.exports = parseErrorStack;","map":{"version":3,"sources":["C:/Users/haram/OneDrive/Desktop/Itcrowd/ITCrowd.github.io/node_modules/react-native/Libraries/Core/Devtools/parseErrorStack.js"],"names":["parseHermesStack","require","convertHermesStack","stack","frames","entries","entry","type","location","functionName","push","methodName","file","sourceUrl","lineNumber","line1Based","column","column1Based","virtualOffset0Based","parseErrorStack","e","stacktraceParser","Array","isArray","global","HermesInternal","parse","map","frame","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;AAKA,IAAMA,gBAAgB,GAAGC,OAAO,sBAAhC;;AAWA,SAASC,kBAAT,CAA4BC,KAA5B,EAAyE;AACvE,MAAMC,MAAM,GAAG,EAAf;;AACA,uDAAoBD,KAAK,CAACE,OAA1B,wCAAmC;AAAA,QAAxBC,KAAwB;;AACjC,QAAIA,KAAK,CAACC,IAAN,KAAe,OAAnB,EAA4B;AAC1B;AACD;;AACD,QAAOC,QAAP,GAAiCF,KAAjC,CAAOE,QAAP;AAAA,QAAiBC,YAAjB,GAAiCH,KAAjC,CAAiBG,YAAjB;;AACA,QAAID,QAAQ,CAACD,IAAT,KAAkB,QAAtB,EAAgC;AAC9B;AACD;;AACDH,IAAAA,MAAM,CAACM,IAAP,CAAY;AACVC,MAAAA,UAAU,EAAEF,YADF;AAEVG,MAAAA,IAAI,EAAEJ,QAAQ,CAACK,SAFL;AAGVC,MAAAA,UAAU,EAAEN,QAAQ,CAACO,UAHX;AAIVC,MAAAA,MAAM,EACJR,QAAQ,CAACD,IAAT,KAAkB,QAAlB,GACIC,QAAQ,CAACS,YAAT,GAAwB,CAD5B,GAEIT,QAAQ,CAACU;AAPL,KAAZ;AASD;;AACD,SAAOd,MAAP;AACD;;AAED,SAASe,eAAT,CAAyBC,CAAzB,EAA8D;AAC5D,MAAI,CAACA,CAAD,IAAM,CAACA,CAAC,CAACjB,KAAb,EAAoB;AAClB,WAAO,EAAP;AACD;;AAED,MAAMkB,gBAAgB,GAAGpB,OAAO,CAAC,mBAAD,CAAhC;;AACA,MAAME,KAAK,GAAGmB,KAAK,CAACC,OAAN,CAAcH,CAAC,CAACjB,KAAhB,IACViB,CAAC,CAACjB,KADQ,GAEVqB,MAAM,CAACC,cAAP,GACAvB,kBAAkB,CAACF,gBAAgB,CAACoB,CAAC,CAACjB,KAAH,CAAjB,CADlB,GAEAkB,gBAAgB,CAACK,KAAjB,CAAuBN,CAAC,CAACjB,KAAzB,EAAgCwB,GAAhC,CAAoC,UAAAC,KAAK;AAAA,2CACpCA,KADoC;AAEvCZ,MAAAA,MAAM,EAAEY,KAAK,CAACZ,MAAN,IAAgB,IAAhB,GAAuBY,KAAK,CAACZ,MAAN,GAAe,CAAtC,GAA0C;AAFX;AAAA,GAAzC,CAJJ;AASA,SAAOb,KAAP;AACD;;AAED0B,MAAM,CAACC,OAAP,GAAiBX,eAAjB","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n */\r\n\r\n'use strict';\r\n\r\nimport type {StackFrame} from '../NativeExceptionsManager';\r\nimport type {HermesParsedStack} from './parseHermesStack';\r\n\r\nconst parseHermesStack = require('./parseHermesStack');\r\n\r\nexport type ExtendedError = Error & {\r\n  jsEngine?: string,\r\n  preventSymbolication?: boolean,\r\n  componentStack?: string,\r\n  forceRedbox?: boolean,\r\n  isComponentError?: boolean,\r\n  ...\r\n};\r\n\r\nfunction convertHermesStack(stack: HermesParsedStack): Array<StackFrame> {\r\n  const frames = [];\r\n  for (const entry of stack.entries) {\r\n    if (entry.type !== 'FRAME') {\r\n      continue;\r\n    }\r\n    const {location, functionName} = entry;\r\n    if (location.type === 'NATIVE') {\r\n      continue;\r\n    }\r\n    frames.push({\r\n      methodName: functionName,\r\n      file: location.sourceUrl,\r\n      lineNumber: location.line1Based,\r\n      column:\r\n        location.type === 'SOURCE'\r\n          ? location.column1Based - 1\r\n          : location.virtualOffset0Based,\r\n    });\r\n  }\r\n  return frames;\r\n}\r\n\r\nfunction parseErrorStack(e: ExtendedError): Array<StackFrame> {\r\n  if (!e || !e.stack) {\r\n    return [];\r\n  }\r\n\r\n  const stacktraceParser = require('stacktrace-parser');\r\n  const stack = Array.isArray(e.stack)\r\n    ? e.stack\r\n    : global.HermesInternal\r\n    ? convertHermesStack(parseHermesStack(e.stack))\r\n    : stacktraceParser.parse(e.stack).map(frame => ({\r\n        ...frame,\r\n        column: frame.column != null ? frame.column - 1 : null,\r\n      }));\r\n\r\n  return stack;\r\n}\r\n\r\nmodule.exports = parseErrorStack;\r\n"]},"metadata":{},"sourceType":"script"}