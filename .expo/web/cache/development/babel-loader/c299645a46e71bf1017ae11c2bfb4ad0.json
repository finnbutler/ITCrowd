{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/finnbeardmore/Documents/GitHub/ITCrowd/js/loginForm.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useFonts, PaytoneOne_400Regular } from \"@expo-google-fonts/paytone-one\";\nimport { Roboto_400Regular } from \"@expo-google-fonts/roboto\";\nimport AppLoading from \"expo-app-loading\";\nimport { useEffect, useState } from \"react\";\nexport default function LoginForm() {\n  var _this = this;\n\n  var _useFonts = useFonts({\n    Roboto_400Regular: Roboto_400Regular,\n    PaytoneOne_400Regular: PaytoneOne_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 2),\n      fontsLoaded = _useFonts2[0],\n      error = _useFonts2[1];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }\n    });\n  }\n\n  var URL = \"https://itcrowdproject.uqcloud.net/?ACCOUNTS\";\n\n  var Test = function Test() {\n    var _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setLoading = _useState2[1];\n\n    var _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        data = _useState4[0],\n        setData = _useState4[1];\n\n    useEffect(function () {\n      fetch(URL).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return setData(json.PID);\n      }).catch(function (error) {\n        return alert(error);\n      }).finally(setLoading(false));\n    });\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      color: \"white\",\n      fontSize: \"80\",\n      fontFamily: \"PaytoneOne_400Regular\",\n      marginTop: \"150px\",\n      marginRight: \"50px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"Welcome back login in to find your Purrrfect Pets!\", \" \"), React.createElement(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\"\n      },\n      onSubmit: function onSubmit(values) {\n        alert(\"Submitted\");\n        alert(values);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, function (props) {\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        padding: \"5em\",\n        placeholder: \"Username\",\n        onChangeText: props.handleChange(\"username\"),\n        value: props.values.username,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        padding: \"5em\",\n        placeholder: \"Password\",\n        onChangeText: props.handleChange(\"password\"),\n        value: props.values.password,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }), React.createElement(Button, {\n        padding: \"5em\",\n        title: \"submit\",\n        color: \"lightpink\",\n        onPreess: props.handleSubmit,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }));\n    }));\n  };\n}","map":{"version":3,"sources":["/Users/finnbeardmore/Documents/GitHub/ITCrowd/js/loginForm.js"],"names":["React","Formik","useFonts","PaytoneOne_400Regular","Roboto_400Regular","AppLoading","useEffect","useState","LoginForm","fontsLoaded","error","URL","Test","isLoading","setLoading","data","setData","fetch","then","response","json","PID","catch","alert","finally","username","password","values","props","handleChange","handleSubmit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport { View, TextInput, Button, Text } from \"react-native\";\nimport {\n  useFonts,\n  PaytoneOne_400Regular,\n} from \"@expo-google-fonts/paytone-one\";\nimport { Roboto_400Regular } from \"@expo-google-fonts/roboto\";\nimport AppLoading from \"expo-app-loading\";\nimport { useEffect, useState } from \"react\";\nexport default function LoginForm() {\n  let [fontsLoaded, error] = useFonts({\n    Roboto_400Regular,\n    PaytoneOne_400Regular,\n  });\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n  const URL = \"https://itcrowdproject.uqcloud.net/?ACCOUNTS\";\n  const Test = () => {\n    const [isLoading, setLoading] = useState(true);\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n      fetch(URL)\n        .then((response) => response.json())\n        .then((json) => setData(json.PID))\n        .catch((error) => alert(error))\n        .finally(setLoading(false));\n    });\n    return (\n      <View>\n        <Text\n          color=\"white\"\n          fontSize=\"80\"\n          fontFamily=\"PaytoneOne_400Regular\"\n          marginTop=\"150px\"\n          marginRight=\"50px\"\n        >\n          Welcome back login in to find your Purrrfect Pets!{\" \"}\n        </Text>\n        <Formik\n          initialValues={{ username: \"\", password: \"\" }}\n          onSubmit={(values) => {\n            alert(\"Submitted\");\n            //console.log(\"submitted\");\n            alert(values);\n          }}\n          // Query database here for users! https://itcrowdproject.uqcloud.net/?USERS search through pair\n        >\n          {(props) => (\n            <View>\n              <TextInput\n                padding=\"5em\"\n                placeholder=\"Username\"\n                onChangeText={props.handleChange(\"username\")}\n                value={props.values.username}\n              />\n              <TextInput\n                padding=\"5em\"\n                placeholder=\"Password\"\n                onChangeText={props.handleChange(\"password\")}\n                value={props.values.password}\n              />\n              <Button\n                padding=\"5em\"\n                title=\"submit\"\n                color=\"lightpink\"\n                onPreess={props.handleSubmit}\n              />\n            </View>\n          )}\n        </Formik>\n      </View>\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}