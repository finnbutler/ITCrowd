{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/finnbeardmore/Documents/GitHub/ITCrowd.github.io/Untitled/js/start_quiz.js\";\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { NativeBaseProvider, extendTheme, Input, Button, Box, AspectRatio, HStack, Center, Stack, Heading, Flex } from \"native-base\";\nimport { useFonts, PaytoneOne_400Regular } from \"@expo-google-fonts/paytone-one\";\nimport { useState } from \"react\";\nimport AppLoading from \"expo-app-loading\";\nimport { Roboto_400Regular } from \"@expo-google-fonts/roboto\";\nimport Firebase from \"../config/firebase\";\nimport \"firebase/auth\";\nimport background from \"../assets/login_background.jpg\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useNavigation } from \"@react-navigation/native\";\nvar petArray = [];\nvar printablePetArray = [];\n\nfunction saveData1(data, petData1) {\n  alert(data);\n  var petData = \"\";\n  var petNameInput = String(petData1);\n  var refName = Firebase.database().ref(petData1);\n  refName.on(\"value\", function (snapshot) {\n    var ref = snapshot.val();\n    petData = ref;\n\n    if (petData != \"\") {\n      petArray.push(petData);\n      printablePetArray.push(petData);\n    }\n  });\n\n  if (petData == \"\") {\n    alert(\"nah!\");\n  }\n\n  Firebase.database().ref(\"2/data/\" + Firebase.auth().currentUser.uid).update({\n    petArray: petArray\n  });\n}\n\nfunction saveData2(data, petData2, navigation) {\n  var petData = \"\";\n  var refName = Firebase.database().ref(petData2);\n  refName.on(\"value\", function (snapshot) {\n    var ref = snapshot.val();\n    petData = ref;\n\n    if (petData != \"\") {\n      petArray.push(petData);\n      printablePetArray.push(petData);\n    }\n  });\n\n  if (petData == \"\") {\n    alert(\"nah!\");\n  }\n\n  Firebase.database().ref(\"2/data/\" + Firebase.auth().currentUser.uid).update({\n    petArray: petArray\n  });\n\n  if (navigation.navigate(\"start_quiz\")) {\n    alert(\"yay!\");\n  }\n}\n\nfunction CardComponent() {\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setRefName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data2 = _useState6[0],\n      setData2 = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      position = _useState8[0],\n      setPosition = _useState8[1];\n\n  var leadsRef = Firebase.database().ref(\"8/data/0\");\n  var randomInt = Math.floor(Math.random() * 119);\n  var randomInt2 = Math.floor(Math.random() * 119);\n  var questions = [\"Which species is superior?\", \"Which name is more cool?\", \"Old soul or young at heart?\", \"Do you like to listen to one song, or mix them together?\", \"What's your favourite colour? (ours is #f72fe3)\", \"Would you rather a small party or a medium disco?\", \"Men or Women?\", \"Vaxed or Unvaxed, or anti-vaxer? Haha, we're joking. \", \"Pet Living with a disability?\", \"Do you like when the claws come out?\", \"What's a better breed?\", \"Do you want more pets?\", \"Spending time at home or away?\"];\n  var listOfValues = [\"Species\", \"Name\", \"Age\", \"BreedIsMixed\", \"ColourPrimary\", \"Size\", \"Sex\", \"IsShotsCurrent\", \"IsSpecialNeeds\", \"IsDeclawed\", \"BreedPrimary\", \"IsSpayedorNeutered\", \"IsHouseTrained\"];\n  var valueDB = listOfValues[position];\n  var currentItem1 = \"8/data/\" + randomInt + \"/\" + valueDB;\n  var currentItem2 = \"8/data/\" + randomInt2 + \"/\" + valueDB;\n  var petData1 = \"8/data/\" + randomInt;\n  var petData2 = \"8/data/\" + randomInt2;\n  var item1 = Firebase.database().ref(currentItem1);\n  var item2 = Firebase.database().ref(currentItem2);\n  item1.on(\"value\", function (snapshot) {\n    snapshot.val();\n    var Name1 = snapshot.val();\n\n    if (Name1 == 0 && data == \"\") {\n      setData(\"No Way!\");\n    }\n\n    if (Name1 == 1 && data == \"\") {\n      setData(\"Yes!\");\n    }\n\n    if (Name1 != \"\" && data == \"\") {\n      setData(Name1);\n    }\n  });\n  item2.on(\"value\", function (snapshot) {\n    snapshot.val();\n    var Name1 = snapshot.val();\n\n    if (Name1 == 0 && data2 == \"\") {\n      setData2(\"No Way!\");\n    }\n\n    if (Name1 == 1 && data2 == \"\") {\n      setData2(\"Yes!\");\n    }\n\n    if (Name1 != \"\" && data2 == \"\") {\n      setData2(Name1);\n    }\n  });\n  leadsRef.on(\"value\", function (snapshot) {\n    snapshot.forEach(function (childSnapshot) {\n      var childData = childSnapshot.val();\n    });\n  });\n\n  function addPosition(position) {\n    if (position <= 11) {\n      setPosition(position + 1);\n    }\n  }\n\n  return React.createElement(Box, {\n    rounded: \"lg\",\n    width: \"300px\",\n    height: \"300px\",\n    shadow: 1,\n    _light: {\n      backgroundColor: \"gray.50\"\n    },\n    _dark: {\n      backgroundColor: \"gray.700\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack, {\n    p: \"4\",\n    space: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, React.createElement(Heading, {\n    size: \"md\",\n    ml: -1,\n    color: \"#545871\",\n    fontFamily: \"PaytoneOne_400Regular\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, \"Question \", position), React.createElement(Text, {\n    style: {\n      color: \"#545871\",\n      fontSize: 15,\n      fontFamily: \"PaytoneOne_400Regular\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, questions[position]), React.createElement(Flex, {\n    direction: \"row\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: data,\n    size: \"sm\",\n    margin: 1,\n    p: 4,\n    onPress: function onPress() {\n      return saveData1(data, petData1, navigation) + addPosition(position) + setData(\"\") + setData2(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontFamily: \"Roboto_400Regular\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, data)), React.createElement(Button, {\n    size: \"sm\",\n    margin: 1,\n    p: 4,\n    colorScheme: \"secondary\",\n    onPress: function onPress() {\n      return saveData2(data2, petData2, navigation) + addPosition(position) + setData2(\"\") + setData(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontFamily: \"Roboto_400Regular\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, data2)))));\n}\n\nfunction PetComponent() {\n  var _this = this;\n\n  var count = 0;\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      petArray = _useState10[0],\n      setPetArray = _useState10[1];\n\n  var ref1 = Firebase.database().ref(\"2/data/\" + Firebase.auth().currentUser.uid + \"/petArray\");\n  var childData = [];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      items = _useState12[0],\n      setItems = _useState12[1];\n\n  ref1.on(\"value\", function (snapshot) {\n    snapshot.forEach(function (child) {\n      if (items.length != 5) {\n        setItems([].concat(_toConsumableArray(items), [{\n          name: child.val().Name,\n          age: child.val().Age,\n          description: child.val().Description,\n          petPhotos: child.val().PetPhots\n        }]));\n      }\n    });\n    console.log(items);\n  });\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 5\n    }\n  }, React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }\n  }, \" \", React.createElement(Text, {\n    style: {\n      color: \"#545871\",\n      fontSize: 15,\n      fontFamily: \"PaytoneOne_400Regular\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }\n  }, \" \", \"Your Pets\", \" \"), items.map(function (item) {\n    return React.createElement(Box, {\n      rounded: \"lg\",\n      overflow: \"hidden\",\n      width: \"72\",\n      shadow: 1,\n      _text: {\n        color: \"white\",\n        fontWeight: \"700\",\n        fontSize: \"xs\"\n      },\n      _light: {\n        backgroundColor: \"red.500\"\n      },\n      _dark: {\n        backgroundColor: \"red.500\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }\n    }, React.createElement(Box, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 13\n      }\n    }, React.createElement(AspectRatio, {\n      ratio: 16 / 9,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: item.petPhotos\n      },\n      alt: \"image\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }\n    })), React.createElement(Center, {\n      bg: \"violet.500\",\n      _text: {\n        color: \"white\",\n        fontWeight: \"700\",\n        fontSize: \"xs\"\n      },\n      position: \"absolute\",\n      bottom: 0,\n      px: 3,\n      py: 1.5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 15\n      }\n    }, \"PET\")), React.createElement(Stack, {\n      p: \"4\",\n      space: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }\n    }, React.createElement(Stack, {\n      space: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 15\n      }\n    }, React.createElement(Heading, {\n      size: \"md\",\n      ml: \"-1\",\n      _light: {\n        color: \"white.500\"\n      },\n      _dark: {\n        color: \"white.300\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }\n    }, \"Name: \", item.name), React.createElement(Text, {\n      fontSize: \"xs\",\n      _light: {\n        color: \"white.500\"\n      },\n      _dark: {\n        color: \"white.300\"\n      },\n      fontWeight: \"500\",\n      ml: \"-0.5\",\n      mt: \"-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }\n    }, \"Age: \", item.age)), React.createElement(Text, {\n      fontWeight: \"400\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 15\n      }\n    }, \"Description: \", item.description), React.createElement(HStack, {\n      alignItems: \"center\",\n      space: 4,\n      justifyContent: \"space-between\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 15\n      }\n    }, React.createElement(HStack, {\n      alignItems: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }\n    }, React.createElement(Button, {\n      onPress: function onPress() {\n        return Linking.openURL(\"mailto:adopt@petfinder.com\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 19\n      }\n    }, \" \", \"Email Agency\", \" \")))));\n  })));\n}\n\nfunction NoLogin() {\n  return React.createElement(Text, {\n    style: {\n      color: \"red.500\",\n      textAlign: Center,\n      fontSize: 15,\n      fontFamily: \"PaytoneOne_400Regular\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 5\n    }\n  }, \"Please head to the Login Screen!\", \" \");\n}\n\nexport default function StartQuizScreen() {\n  var numberOfUsers = 15;\n  var randomIndex = Math.floor(Math.random() * numberOfUsers);\n\n  var _useState13 = useState(\"Basic\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      mode = _useState14[0],\n      setMode = _useState14[1];\n\n  var navigation = useNavigation();\n  var user = Firebase.auth().currentUser;\n\n  var _useFonts = useFonts({\n    Roboto_400Regular: Roboto_400Regular,\n    PaytoneOne_400Regular: PaytoneOne_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 2),\n      fontsLoaded = _useFonts2[0],\n      error = _useFonts2[1];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (!user) {\n    return React.createElement(NoLogin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(NativeBaseProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: \"25%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }\n  }, React.createElement(CardComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 11\n    }\n  }), React.createElement(PetComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/finnbeardmore/Documents/GitHub/ITCrowd.github.io/Untitled/js/start_quiz.js"],"names":["React","NativeBaseProvider","extendTheme","Input","Button","Box","AspectRatio","HStack","Center","Stack","Heading","Flex","useFonts","PaytoneOne_400Regular","useState","AppLoading","Roboto_400Regular","Firebase","background","NavigationContainer","useNavigation","petArray","printablePetArray","saveData1","data","petData1","alert","petData","petNameInput","String","refName","database","ref","on","snapshot","val","push","auth","currentUser","uid","update","saveData2","petData2","navigation","navigate","CardComponent","name","setRefName","setData","data2","setData2","position","setPosition","leadsRef","randomInt","Math","floor","random","randomInt2","questions","listOfValues","valueDB","currentItem1","currentItem2","item1","item2","Name1","forEach","childSnapshot","childData","addPosition","backgroundColor","color","fontSize","fontFamily","textAlign","PetComponent","count","setPetArray","ref1","items","setItems","child","length","Name","age","Age","description","Description","petPhotos","PetPhots","console","log","map","item","fontWeight","uri","Linking","openURL","NoLogin","StartQuizScreen","numberOfUsers","randomIndex","mode","setMode","user","fontsLoaded","error","marginLeft","marginRight","marginTop"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Text,\n  View,\n  Image,\n  ImageBackground,\n  TouchableOpacity,\n  RefreshControl,\n  ScrollView,\n  Linking,\n} from \"react-native\";\nimport {\n  NativeBaseProvider,\n  extendTheme,\n  Input,\n  Button,\n  Box,\n  AspectRatio,\n  HStack,\n  Center,\n  Stack,\n  Heading,\n  Flex,\n} from \"native-base\";\nimport {\n  useFonts,\n  PaytoneOne_400Regular,\n} from \"@expo-google-fonts/paytone-one\";\nimport { useState } from \"react\";\nimport AppLoading from \"expo-app-loading\";\nimport { Roboto_400Regular } from \"@expo-google-fonts/roboto\";\nimport Firebase from \"../config/firebase\";\nimport \"firebase/auth\";\nimport background from \"../assets/login_background.jpg\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nvar petArray = [];\nvar printablePetArray = [];\n\n/**\n * Save data attached to button 1\n * @param data: value from the onsubmit button\n */\n\nfunction saveData1(data, petData1) {\n  alert(data);\n  let petData = \"\";\n  var petNameInput = String(petData1);\n  //alert(petData1);\n\n  var refName = Firebase.database().ref(petData1);\n  //var refName = Firebase.database().ref(\"8/data/6/name\");\n  refName.on(\"value\", function (snapshot) {\n    const ref = snapshot.val();\n    //alert(\"tHIS ONE:\" + ref);\n    petData = ref;\n    if (petData != \"\") {\n      petArray.push(petData);\n      printablePetArray.push(petData);\n    }\n  });\n  if (petData == \"\") {\n    alert(\"nah!\");\n  }\n\n  //petArray.push(Firebase.database().ref(petNameString).val());\n\n  //printablePetArray.push(Firebase.database().ref(petNameString).val());\n  Firebase.database()\n    .ref(\"2/data/\" + Firebase.auth().currentUser.uid)\n    .update({\n      petArray: petArray,\n    });\n  //this.props.navigation.state.params.refresh();\n  //navigate(\"Child\", { refresh: refreshFunction });\n\n  /* add data to users pets */\n  //CardComponent();\n}\n/**\n * Save data attached to button 2\n * @param data: value from the onsubmit button\n */\n\nfunction saveData2(data, petData2, navigation) {\n  //alert(petData2);\n  let petData = \"\";\n  var refName = Firebase.database().ref(petData2);\n  //var refName = Firebase.database().ref(\"8/data/6/name\");\n  refName.on(\"value\", function (snapshot) {\n    const ref = snapshot.val();\n    //alert(\"tHIS ONE:\" + ref);\n    petData = ref;\n    if (petData != \"\") {\n      petArray.push(petData);\n      printablePetArray.push(petData);\n    }\n  });\n  if (petData == \"\") {\n    alert(\"nah!\");\n  }\n\n  /*var pushItem = Firebase.database().ref(petName);\n  pushItem.on(\"value\", function (snapshot) {\n    var pushable = snapshot.val();\n    alert(pushable);\n    printablePetArray.push(pushable);\n  });*/\n\n  Firebase.database()\n    .ref(\"2/data/\" + Firebase.auth().currentUser.uid)\n    .update({\n      petArray: petArray,\n    });\n  if (navigation.navigate(\"start_quiz\")) {\n    alert(\"yay!\");\n  }\n}\n\n//Modified from NativeBase Card Component, with signification style changes\n/**\n * Component to display the UI for the questions asked to the user\n * also generates questions attached to firebase data\n * @returns void\n */\n\nfunction CardComponent() {\n  const navigation = useNavigation();\n  const [name, setRefName] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [data2, setData2] = useState(\"\");\n  const [position, setPosition] = useState(0);\n  var leadsRef = Firebase.database().ref(\"8/data/0\");\n  var randomInt = Math.floor(Math.random() * 119);\n  var randomInt2 = Math.floor(Math.random() * 119);\n  var questions = [\n    \"Which species is superior?\",\n    \"Which name is more cool?\",\n    \"Old soul or young at heart?\",\n    \"Do you like to listen to one song, or mix them together?\",\n    \"What's your favourite colour? (ours is #f72fe3)\",\n    \"Would you rather a small party or a medium disco?\",\n    \"Men or Women?\",\n    \"Vaxed or Unvaxed, or anti-vaxer? Haha, we're joking. \",\n    \"Pet Living with a disability?\",\n    \"Do you like when the claws come out?\",\n    \"What's a better breed?\",\n    \"Do you want more pets?\",\n    \"Spending time at home or away?\",\n  ];\n  var listOfValues = [\n    \"Species\",\n    \"Name\",\n    \"Age\",\n    \"BreedIsMixed\",\n    \"ColourPrimary\",\n    \"Size\",\n    \"Sex\",\n    \"IsShotsCurrent\",\n    \"IsSpecialNeeds\",\n    \"IsDeclawed\",\n    \"BreedPrimary\",\n    \"IsSpayedorNeutered\",\n    \"IsHouseTrained\",\n  ];\n  var valueDB = listOfValues[position];\n  var currentItem1 = \"8/data/\" + randomInt + \"/\" + valueDB;\n  var currentItem2 = \"8/data/\" + randomInt2 + \"/\" + valueDB;\n  var petData1 = \"8/data/\" + randomInt;\n  var petData2 = \"8/data/\" + randomInt2;\n\n  var item1 = Firebase.database().ref(currentItem1);\n  var item2 = Firebase.database().ref(currentItem2);\n  item1.on(\"value\", function (snapshot) {\n    snapshot.val();\n    //alert(snapshot.val());\n    const Name1 = snapshot.val();\n    // var count = 0;\n    if (Name1 == 0 && data == \"\") {\n      setData(\"No Way!\");\n      //count++;\n    }\n    if (Name1 == 1 && data == \"\") {\n      setData(\"Yes!\");\n      //count++;\n    }\n    if (Name1 != \"\" && data == \"\") {\n      setData(Name1);\n    }\n  });\n\n  item2.on(\"value\", function (snapshot) {\n    snapshot.val();\n    //alert(snapshot.val());\n    const Name1 = snapshot.val();\n    if (Name1 == 0 && data2 == \"\") {\n      setData2(\"No Way!\");\n    }\n    if (Name1 == 1 && data2 == \"\") {\n      setData2(\"Yes!\");\n    }\n    if (Name1 != \"\" && data2 == \"\") {\n      setData2(Name1);\n    }\n  });\n\n  leadsRef.on(\"value\", function (snapshot) {\n    snapshot.forEach(function (childSnapshot) {\n      var childData = childSnapshot.val();\n    });\n  });\n  function addPosition(position) {\n    if (position <= 11) {\n      setPosition(position + 1);\n    }\n  }\n  /* Card Componented taken from nativebase.io with modified style changes \n  REFERENCE: */\n  return (\n    <Box\n      rounded=\"lg\"\n      width=\"300px\"\n      height=\"300px\"\n      shadow={1}\n      _light={{ backgroundColor: \"gray.50\" }}\n      _dark={{ backgroundColor: \"gray.700\" }}\n    >\n      <Stack p=\"4\" space={5}>\n        <Heading\n          size=\"md\"\n          ml={-1}\n          color=\"#545871\"\n          fontFamily=\"PaytoneOne_400Regular\"\n          textAlign=\"center\"\n        >\n          Question {position}\n        </Heading>\n        <Text\n          style={{\n            color: \"#545871\",\n            fontSize: 15,\n            fontFamily: \"PaytoneOne_400Regular\",\n            textAlign: \"center\",\n          }}\n        >\n          {questions[position]}\n        </Text>\n        <Flex direction=\"row\" justifyContent=\"center\">\n          <Button\n            title={data}\n            size=\"sm\" //  onPress={() => console.log('hello world')}\n            margin={1}\n            p={4}\n            onPress={() =>\n              saveData1(data, petData1, navigation) +\n              addPosition(position) +\n              setData(\"\") +\n              setData2(\"\")\n            }\n          >\n            <Text style={{ color: \"white\", fontFamily: \"Roboto_400Regular\" }}>\n              {data}\n            </Text>\n          </Button>\n          <Button\n            size=\"sm\"\n            margin={1}\n            p={4}\n            colorScheme=\"secondary\"\n            onPress={() =>\n              saveData2(data2, petData2, navigation) +\n              addPosition(position) +\n              setData2(\"\") +\n              setData(\"\")\n            }\n          >\n            <Text style={{ color: \"white\", fontFamily: \"Roboto_400Regular\" }}>\n              {data2}\n            </Text>\n          </Button>\n        </Flex>\n      </Stack>\n    </Box>\n  );\n}\nfunction PetComponent() {\n  var count = 0;\n  const [petArray, setPetArray] = useState([]);\n  var ref1 = Firebase.database().ref(\n    \"2/data/\" + Firebase.auth().currentUser.uid + \"/petArray\"\n  );\n  let childData = [];\n  //let items = [];\n  const [items, setItems] = useState([]);\n  /* Complex function to itterate through each pet's values -- self coded */\n  ref1.on(\"value\", function (snapshot) {\n    //snapshot.forEach(function (childSnapshot) {\n    //childData.push(JSON.parse(childSnapshot.val()));\n    snapshot.forEach((child) => {\n      if (items.length != 5) {\n        setItems([\n          ...items,\n          {\n            name: child.val().Name,\n            age: child.val().Age,\n            description: child.val().Description,\n            petPhotos: child.val().PetPhots,\n          },\n        ]);\n      }\n    });\n\n    console.log(items);\n  });\n  /* for (var i = 0; i < petArray.length; i++) {\n //  \n    /*add all pet data for each attribute of pet in pet array */\n  // }\n  return (\n    <ScrollView>\n      <Box>\n        {\" \"}\n        <Text\n          style={{\n            color: \"#545871\",\n            fontSize: 15,\n            fontFamily: \"PaytoneOne_400Regular\",\n            textAlign: \"center\",\n          }}\n        >\n          {\" \"}\n          Your Pets{\" \"}\n        </Text>\n        {items.map((item) => (\n          <Box\n            rounded=\"lg\"\n            overflow=\"hidden\"\n            width=\"72\"\n            shadow={1}\n            _text={{ color: \"white\", fontWeight: \"700\", fontSize: \"xs\" }}\n            _light={{ backgroundColor: \"red.500\" }}\n            _dark={{ backgroundColor: \"red.500\" }}\n          >\n            <Box>\n              <AspectRatio ratio={16 / 9}>\n                <Image\n                  source={{\n                    uri: item.petPhotos,\n                  }}\n                  alt=\"image\"\n                />\n              </AspectRatio>\n              <Center\n                bg=\"violet.500\"\n                _text={{ color: \"white\", fontWeight: \"700\", fontSize: \"xs\" }}\n                position=\"absolute\"\n                bottom={0}\n                px={3}\n                py={1.5}\n              >\n                PET\n              </Center>\n            </Box>\n            <Stack p=\"4\" space={3}>\n              <Stack space={2}>\n                <Heading\n                  size=\"md\"\n                  ml=\"-1\"\n                  _light={{ color: \"white.500\" }}\n                  _dark={{ color: \"white.300\" }}\n                >\n                  Name: {item.name}\n                </Heading>\n                <Text\n                  fontSize=\"xs\"\n                  _light={{ color: \"white.500\" }}\n                  _dark={{ color: \"white.300\" }}\n                  fontWeight=\"500\"\n                  ml=\"-0.5\"\n                  mt=\"-1\"\n                >\n                  Age: {item.age}\n                </Text>\n              </Stack>\n              <Text fontWeight=\"400\">Description: {item.description}</Text>\n              <HStack\n                alignItems=\"center\"\n                space={4}\n                justifyContent=\"space-between\"\n              >\n                <HStack alignItems=\"center\">\n                  <Button\n                    onPress={() =>\n                      Linking.openURL(\"mailto:adopt@petfinder.com\")\n                    }\n                  >\n                    {\" \"}\n                    Email Agency{\" \"}\n                  </Button>\n                </HStack>\n              </HStack>\n            </Stack>\n          </Box>\n        ))}\n      </Box>\n    </ScrollView>\n  );\n}\n/* Self-authored component */\nfunction NoLogin() {\n  return (\n    <Text\n      style={{\n        color: \"red.500\",\n        textAlign: Center,\n        fontSize: 15,\n        fontFamily: \"PaytoneOne_400Regular\",\n        textAlign: \"center\",\n      }}\n    >\n      Please head to the Login Screen!{\" \"}\n    </Text>\n  );\n}\nexport default function StartQuizScreen() {\n  const numberOfUsers = 15;\n  const randomIndex = Math.floor(Math.random() * numberOfUsers);\n  const [mode, setMode] = useState(\"Basic\");\n  const navigation = useNavigation();\n  var user = Firebase.auth().currentUser;\n\n  let [fontsLoaded, error] = useFonts({\n    Roboto_400Regular,\n    PaytoneOne_400Regular,\n  });\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n  if (!user) {\n    return <NoLogin />;\n  }\n  return (\n    <NativeBaseProvider>\n      <ScrollView>\n        <View\n          style={{ marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"25%\" }}\n        >\n          <CardComponent />\n          <PetComponent />\n        </View>\n      </ScrollView>\n    </NativeBaseProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}