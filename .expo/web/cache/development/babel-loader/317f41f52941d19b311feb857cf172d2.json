{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/finnbeardmore/Documents/GitHub/ITCrowd/js/signupForm.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text, Button, NativeBaseProvider, extendTheme, Input } from \"native-base\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useState } from \"react\";\nimport Firebase from \"../config/firebase\";\nvar auth = Firebase.auth();\n\nfunction HomeScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passwordVisibility = _useState6[0],\n      setPasswordVisibility = _useState6[1];\n\n  var _useState7 = useState(\"eye\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      rightIcon = _useState8[0],\n      setRightIcon = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loginError = _useState10[0],\n      setLoginError = _useState10[1];\n\n  var handlePasswordVisibility = function handlePasswordVisibility() {\n    if (rightIcon === \"eye\") {\n      setRightIcon(\"eye-off\");\n      setPasswordVisibility(!passwordVisibility);\n    } else if (rightIcon === \"eye-off\") {\n      setRightIcon(\"eye\");\n      setPasswordVisibility(!passwordVisibility);\n    }\n  };\n\n  var onLogin = function onLogin() {\n    return _regeneratorRuntime.async(function onLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(email !== \"\" && password !== \"\")) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(auth.signInWithEmailAndPassword(email, password));\n\n          case 4:\n            alert(\"Correctly logedin\");\n\n          case 5:\n            _context.next = 11;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            alert(\"ERROR!\");\n            setLoginError(_context.t0.message);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var unsubscribeAuth = auth.onAuthStateChanged(function _callee(authenticatedUser) {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(authenticatedUser ? setUser(authenticatedUser) : setUser(null));\n\n          case 3:\n            return _context2.abrupt(\"return\", React.createElement(ProfileScreen, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 14\n              }\n            }));\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  });\n  return React.createElement(NativeBaseProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    style: \"dark-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"Login\"), React.createElement(Input, {\n    inputStyle: {\n      fontSize: 14\n    },\n    containerStyle: {\n      backgroundColor: \"#fff\",\n      marginBottom: 20\n    },\n    leftIcon: \"email\",\n    placeholder: \"Enter email\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    autoFocus: true,\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    inputStyle: {\n      fontSize: 14\n    },\n    containerStyle: {\n      backgroundColor: \"#fff\",\n      marginBottom: 20\n    },\n    leftIcon: \"lock\",\n    placeholder: \"Enter password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: passwordVisibility,\n    textContentType: \"password\",\n    rightIcon: rightIcon,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    handlePasswordVisibility: handlePasswordVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    onPress: onLogin,\n    backgroundColor: \"#f57c00\",\n    title: \"Login\",\n    tileColor: \"#fff\",\n    titleSize: 20,\n    containerStyle: {\n      marginBottom: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, \" \", React.createElement(Text, {\n    color: \"#545871\",\n    fontFamily: \"Roboto_400Regular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, \"Login In\")), React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Signup\");\n    },\n    text: \"Go to Signup\",\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, \" \", React.createElement(Text, {\n    color: \"#545871\",\n    fontFamily: \"Roboto_400Regular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"))));\n}","map":{"version":3,"sources":["/Users/finnbeardmore/Documents/GitHub/ITCrowd/js/signupForm.js"],"names":["React","Text","Button","NativeBaseProvider","extendTheme","Input","StatusBar","useState","Firebase","auth","HomeScreen","navigation","email","setEmail","password","setPassword","passwordVisibility","setPasswordVisibility","rightIcon","setRightIcon","loginError","setLoginError","handlePasswordVisibility","onLogin","signInWithEmailAndPassword","alert","message","unsubscribeAuth","onAuthStateChanged","authenticatedUser","setUser","console","log","fontSize","backgroundColor","marginBottom","text","navigate"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { ImageBackground, View } from \"react-native\";\nimport {\n  Text,\n  Button,\n  NativeBaseProvider,\n  extendTheme,\n  Input,\n} from \"native-base\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useState } from \"react\";\n\nimport Firebase from \"../config/firebase\";\n\n// TODO: Replace the following with your app's Firebase project configuration\nconst auth = Firebase.auth();\nfunction HomeScreen({ navigation }) {\n  // const response = await fetch('/api/names');\n  // const names = await response.json();\n\n  // console.log(names);\n  // https://itcrowdproject.uqcloud.net/?PET_PHOTO\n  /* let [fontsLoaded, error] = useFonts({\n    Roboto_400Regular,\n    PaytoneOne_400Regular,\n  });\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n  return (\n    <ImageBackground\n      source={background}\n      resizeMode=\"cover\"\n      style={{\n        flex: 1,\n        justifyContent: \"center\",\n      }}\n    >\n      <NativeBaseProvider>\n        <View\n          style={{\n            alignItems: \"flex-end\",\n            justifyContent: \"flex-end\",\n            marginRight: \"200px\",\n          }}\n        >\n          <Text\n            color=\"white\"\n            fontSize=\"80\"\n            fontFamily=\"PaytoneOne_400Regular\"\n            marginTop=\"150px\"\n            marginRight=\"50px\"\n          >\n            Purrrfect Pets!{\" \"}\n          </Text>\n          <Text color=\"white\" fontSize=\"30\" paddingTop=\"10\" textAlign='center' marginRight=\"120px\" fontFamily='PaytoneOne_400Regular' flexShrink=\"1\">\n            Match with and adopt a pet {\"\\n\"}that is most suitable for you\n          </Text>\n          <Button\n            mt=\"2em\"\n            mraginTop=\"500px\"\n            padding=\"25px 150px\"\n            borderRadius=\"30px\"\n            backgroundColor=\"#f1c737\"\n            marginRight=\"150px\"\n            fontFamily=\"Roboto_400Regular\"\n            onPress={() => navigation.navigate(\"Login\")}\n            title=\"Login In!\"\n          >\n            <Text color=\"#545871\" fontFamily='Roboto_400Regular'>Login In </Text>\n          </Button>\n          <Button\n            mt=\"2em\"\n            padding=\"25px 150px\"\n            borderRadius=\"30px\"\n            marginRight=\"150px\"\n            backgroundColor=\"#f1c737\"\n            onPress={() => navigation.navigate(\"Sign Up\")}\n            title=\"Sign up\"\n          >\n            <Text color=\"#545871\" fontFamily='Roboto_400Regular'>Sign Up</Text>\n          </Button>\n        </View>\n      </NativeBaseProvider>\n    </ImageBackground>\n  );*/\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordVisibility, setPasswordVisibility] = useState(true);\n  const [rightIcon, setRightIcon] = useState(\"eye\");\n  const [loginError, setLoginError] = useState(\"\");\n\n  const handlePasswordVisibility = () => {\n    if (rightIcon === \"eye\") {\n      setRightIcon(\"eye-off\");\n      setPasswordVisibility(!passwordVisibility);\n    } else if (rightIcon === \"eye-off\") {\n      setRightIcon(\"eye\");\n      setPasswordVisibility(!passwordVisibility);\n    }\n  };\n\n  const onLogin = async () => {\n    try {\n      if (email !== \"\" && password !== \"\") {\n        await auth.signInWithEmailAndPassword(email, password);\n        alert(\"Correctly logedin\");\n      }\n    } catch (error) {\n      alert(\"ERROR!\");\n      setLoginError(error.message);\n    }\n  };\n  const unsubscribeAuth = auth.onAuthStateChanged(async (authenticatedUser) => {\n    try {\n      await (authenticatedUser ? setUser(authenticatedUser) : setUser(null));\n      return <ProfileScreen></ProfileScreen>;\n    } catch (error) {\n      console.log(error);\n    }\n  });\n  return (\n    <NativeBaseProvider>\n      <View>\n        <StatusBar style=\"dark-content\" />\n        <Text>Login</Text>\n        <Input\n          inputStyle={{\n            fontSize: 14,\n          }}\n          containerStyle={{\n            backgroundColor: \"#fff\",\n            marginBottom: 20,\n          }}\n          leftIcon=\"email\"\n          placeholder=\"Enter email\"\n          autoCapitalize=\"none\"\n          keyboardType=\"email-address\"\n          textContentType=\"emailAddress\"\n          autoFocus={true}\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        />\n        <Input\n          inputStyle={{\n            fontSize: 14,\n          }}\n          containerStyle={{\n            backgroundColor: \"#fff\",\n            marginBottom: 20,\n          }}\n          leftIcon=\"lock\"\n          placeholder=\"Enter password\"\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          secureTextEntry={passwordVisibility}\n          textContentType=\"password\"\n          rightIcon={rightIcon}\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n          handlePasswordVisibility={handlePasswordVisibility}\n        />\n        <Button\n          onPress={onLogin}\n          backgroundColor=\"#f57c00\"\n          title=\"Login\"\n          tileColor=\"#fff\"\n          titleSize={20}\n          containerStyle={{\n            marginBottom: 24,\n          }}\n        >\n          {\" \"}\n          <Text color=\"#545871\" fontFamily=\"Roboto_400Regular\">\n            Login In\n          </Text>\n        </Button>\n        <Button\n          onPress={() => navigation.navigate(\"Signup\")}\n          text=\"Go to Signup\"\n          color=\"#fff\"\n        >\n          {\" \"}\n          <Text color=\"#545871\" fontFamily=\"Roboto_400Regular\">\n            Sign Up\n          </Text>\n        </Button>\n      </View>\n    </NativeBaseProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}