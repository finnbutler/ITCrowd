{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\haram\\\\OneDrive\\\\Desktop\\\\Itcrowd\\\\ITCrowd.github.io\\\\js\\\\postadoption.js\";\n\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { NativeBaseProvider, Image, Button } from \"native-base\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useFonts, PaytoneOne_400Regular } from '@expo-google-fonts/paytone-one';\nimport { Roboto_400Regular } from '@expo-google-fonts/roboto';\nimport AppLoading from 'expo-app-loading';\nimport background from \"../assets/background.jpg\";\nimport misconception from \"../assets/misconception.jpg\";\nimport sick_dog from \"../assets/sick_dog.jpg\";\nimport study_dog from \"../assets/study_dog.jpg\";\nimport { style } from 'styled-system';\nimport MapView from 'react-native-maps';\n\nvar Postadoption = function Postadoption() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      content1 = _useState2[0],\n      setContent1 = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      content2 = _useState4[0],\n      setContent2 = _useState4[1];\n\n  var _useFonts = useFonts({\n    Roboto_400Regular: Roboto_400Regular,\n    PaytoneOne_400Regular: PaytoneOne_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 2),\n      fontsLoaded = _useFonts2[0],\n      error = _useFonts2[1];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(NativeBaseProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(MapView, {\n    initialRegion: {\n      latitude: 37.78825,\n      longitude: -122.4324,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(MapView, {\n    style: {\n      flex: 1\n    },\n    region: {\n      latitude: 42.882004,\n      longitude: 74.582748,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    },\n    showsUserLocation: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  cardbox: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  paragraph: {\n    textAlign: \"left\",\n    fontFamily: 'Roboto_400Regular',\n    fontSize: 14,\n    color: \"#545871\"\n  },\n  header: {\n    textAlign: \"center\",\n    padding: 10\n  },\n  subt: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n    width: 290\n  },\n  tex1: {\n    color: \"#777\",\n    paddingTop: 5,\n    paddingLeft: 5\n  },\n  tex2: {\n    color: \"#777\",\n    paddingTop: 5,\n    paddingLeft: 15\n  },\n  tex3: {\n    color: \"#777\",\n    paddingLeft: 15\n  },\n  card: {\n    marginBottom: 10,\n    padding: 5,\n    borderRadius: 5,\n    backgroundColor: \"#DDDDDD\"\n  }\n});\nexport default Postadoption;","map":{"version":3,"sources":["C:/Users/haram/OneDrive/Desktop/Itcrowd/ITCrowd.github.io/js/postadoption.js"],"names":["React","useState","NativeBaseProvider","Image","Button","useNavigation","useFonts","PaytoneOne_400Regular","Roboto_400Regular","AppLoading","background","misconception","sick_dog","study_dog","style","MapView","Postadoption","navigation","content1","setContent1","content2","setContent2","fontsLoaded","error","latitude","longitude","latitudeDelta","longitudeDelta","flex","styles","StyleSheet","create","cardbox","alignItems","justifyContent","paddingLeft","paddingRight","paragraph","textAlign","fontFamily","fontSize","color","header","padding","subt","fontWeight","width","tex1","paddingTop","tex2","tex3","card","marginBottom","borderRadius","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { ImageBackground,Text, StyleSheet, View, TouchableOpacity, ScrollView} from 'react-native';\r\nimport { NativeBaseProvider, Image, Button} from \"native-base\"; \r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport {\r\n  useFonts,\r\n  PaytoneOne_400Regular\r\n} from '@expo-google-fonts/paytone-one'\r\nimport {\r\n  Roboto_400Regular,\r\n} from '@expo-google-fonts/roboto'\r\nimport AppLoading from 'expo-app-loading';\r\n\r\nimport background from \"../assets/background.jpg\";\r\nimport misconception from \"../assets/misconception.jpg\";\r\nimport sick_dog from \"../assets/sick_dog.jpg\";\r\nimport study_dog from \"../assets/study_dog.jpg\";\r\nimport { style } from 'styled-system';\r\n\r\nimport MapView from 'react-native-maps';\r\n\r\n\r\nconst Postadoption = () => {\r\n\r\n    const navigation = useNavigation();\r\n\r\n    // contents boolean variable with useState function to be triggered by button click \r\n    const [content1, setContent1] = useState(false);\r\n    const [content2, setContent2] = useState(false);\r\n \r\n\r\n  let [fontsLoaded, error] = useFonts({\r\n    Roboto_400Regular,\r\n    PaytoneOne_400Regular\r\n  })\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />\r\n  }\r\n  return (\r\n    \r\n    <ScrollView>\r\n     \r\n      <NativeBaseProvider>\r\n        \r\n       \r\n        \r\n        <MapView\r\n          initialRegion={{\r\n            latitude: 37.78825,\r\n            longitude: -122.4324,\r\n            latitudeDelta: 0.0922,\r\n            longitudeDelta: 0.0421,\r\n          }}\r\n        />\r\n\r\n        <MapView        \r\n          style={{flex: 1}}\r\n          region={{  latitude: 42.882004, longitude: 74.582748,  \r\n          latitudeDelta: 0.0922, longitudeDelta: 0.0421 }}        \r\n          showsUserLocation={true}      \r\n        />\r\n       \r\n\r\n\r\n        \r\n    </NativeBaseProvider>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\n//style sheet for View, texts, touchoubleobject, etc..\r\nconst styles = StyleSheet.create({\r\n  cardbox: {\r\n\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start', \r\n    paddingLeft: 10,\r\n    paddingRight: 10\r\n    \r\n  },\r\n  paragraph: {\r\n    textAlign: \"left\",\r\n    fontFamily: 'Roboto_400Regular',\r\n    fontSize: 14,\r\n    color: \"#545871\",\r\n  },\r\n  header: {\r\n    textAlign: \"center\",\r\n    padding: 10,\r\n    \r\n  },  \r\n  subt: {\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n    width:290,\r\n  },\r\n  tex1: {\r\n    color: \"#777\", \r\n    paddingTop: 5, \r\n    paddingLeft: 5,\r\n    \r\n  },  \r\n  tex2: {\r\n    color: \"#777\", \r\n    paddingTop: 5, \r\n    paddingLeft: 15,\r\n    \r\n  }, \r\n  tex3: {\r\n    color: \"#777\",  \r\n    paddingLeft: 15,\r\n    \r\n  }, \r\n  card: {\r\n    marginBottom: 10,\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    backgroundColor: \"#DDDDDD\",\r\n    \r\n  },\r\n \r\n});\r\n\r\n\r\n\r\nexport default Postadoption;"]},"metadata":{},"sourceType":"module"}