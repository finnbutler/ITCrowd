{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\haram\\\\OneDrive\\\\Desktop\\\\Itcrowd\\\\ITCrowd.github.io\\\\js\\\\quiz.js\";\nimport React, { useState } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport background from \"../assets/quiz_background.jpg\";\nimport { NativeBaseProvider, Box, Text, Pressable, Heading, IconButton, Icon, HStack, Avatar, VStack, Spacer, AspectRatio, Stack, Center, Image, Button, Flex } from \"native-base\";\nimport { SwipeListView } from \"react-native-swipe-list-view\";\nimport { MaterialIcons, Ionicons, Entypo } from \"@expo/vector-icons\";\nimport Firebase from \"../config/firebase\";\nimport parseErrorStack from \"react-native/Libraries/Core/Devtools/parseErrorStack\";\nimport { useFonts, PaytoneOne_400Regular } from \"@expo-google-fonts/paytone-one\";\nimport AppLoading from \"expo-app-loading\";\nimport { Roboto_400Regular } from \"@expo-google-fonts/roboto\";\nimport { useNavigation } from '@react-navigation/native';\nexport default function QuizScreen() {\n  var numberOfUsers = 15;\n  var randomIndex = Math.floor(Math.random() * numberOfUsers);\n  var navigation = useNavigation();\n\n  var _useState = useState(\"Basic\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      mode = _useState2[0],\n      setMode = _useState2[1];\n\n  var _useFonts = useFonts({\n    Roboto_400Regular: Roboto_400Regular,\n    PaytoneOne_400Regular: PaytoneOne_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 2),\n      fontsLoaded = _useFonts2[0],\n      error = _useFonts2[1];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(NativeBaseProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: background,\n    style: {\n      flex: 1\n    },\n    alt: \"background_image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      paddingTop: 30,\n      fontFamily: \"PaytoneOne_400Regular\",\n      color: \"white\",\n      fontSize: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Quiz Time\"), React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      paddingTop: 20,\n      fontFamily: \"PaytoneOne_400Regular\",\n      color: \"white\",\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Here, you can find your purrrfect\", \"\\n\", \"pet with this fun game!\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.navigate(\"start_quiz\");\n    },\n    backgroundColor: \"#9e8fae\",\n    title: \"Start\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 5,\n    width: 40,\n    borderRadius: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    fontSize: 15,\n    color: \"white\",\n    fontFamily: \"Roboto_400Regular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Play Quiz\"))));\n}","map":{"version":3,"sources":["C:/Users/haram/OneDrive/Desktop/Itcrowd/ITCrowd.github.io/js/quiz.js"],"names":["React","useState","background","NativeBaseProvider","Box","Text","Pressable","Heading","IconButton","Icon","HStack","Avatar","VStack","Spacer","AspectRatio","Stack","Center","Image","Button","Flex","SwipeListView","MaterialIcons","Ionicons","Entypo","Firebase","parseErrorStack","useFonts","PaytoneOne_400Regular","AppLoading","Roboto_400Regular","useNavigation","QuizScreen","numberOfUsers","randomIndex","Math","floor","random","navigation","mode","setMode","fontsLoaded","error","flex","textAlign","paddingTop","fontFamily","color","fontSize","navigate"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Dimensions, TouchableOpacity, View, ImageBackground } from \"react-native\";\r\nimport background from \"../assets/quiz_background.jpg\";\r\nimport {\r\n  NativeBaseProvider,\r\n  Box,\r\n  Text,\r\n  Pressable,\r\n  Heading,\r\n  IconButton,\r\n  Icon,\r\n  HStack,\r\n  Avatar,\r\n  VStack,\r\n  Spacer,\r\n  AspectRatio,\r\n  Stack,\r\n  Center,\r\n  Image,\r\n  Button,\r\n  Flex,\r\n} from \"native-base\";\r\nimport { SwipeListView } from \"react-native-swipe-list-view\";\r\nimport { MaterialIcons, Ionicons, Entypo } from \"@expo/vector-icons\";\r\nimport Firebase from \"../config/firebase\";\r\nimport parseErrorStack from \"react-native/Libraries/Core/Devtools/parseErrorStack\";\r\nimport {\r\n  useFonts,\r\n  PaytoneOne_400Regular,\r\n} from \"@expo-google-fonts/paytone-one\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport { Roboto_400Regular } from \"@expo-google-fonts/roboto\";\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport default function QuizScreen() {\r\n  /*fetch(\"https://deco3801-91e98-default-rtdb.firebaseio.com/10/data\")\r\n    .then((response) => response.json())\r\n    .then((data) => console.log(data));*/\r\n\r\n  // Attach an asynchronous callback to read the data at our posts reference\r\n  const numberOfUsers = 15;\r\n  const randomIndex = Math.floor(Math.random() * numberOfUsers);\r\n  const navigation = useNavigation();\r\n  const [mode, setMode] = useState(\"Basic\");\r\n\r\n  let [fontsLoaded, error] = useFonts({\r\n    Roboto_400Regular,\r\n    PaytoneOne_400Regular,\r\n  });\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />;\r\n  }\r\n  return (\r\n    <NativeBaseProvider>\r\n      <ImageBackground\r\n        source={background}\r\n        style={{\r\n          flex: 1,\r\n        }}\r\n        alt=\"background_image\">\r\n        <Text style={{textAlign: \"center\", paddingTop:30, fontFamily:\"PaytoneOne_400Regular\", color:\"white\", fontSize:25}}>Quiz Time</Text>\r\n        <Text style={{textAlign: \"center\", paddingTop:20, fontFamily:\"PaytoneOne_400Regular\", color:\"white\", fontSize:20}}>\r\n          Here, you can find your purrrfect{\"\\n\"}pet with this fun game!\r\n        </Text>\r\n        <Button\r\n              onPress={() => navigation.navigate(\"start_quiz\")}\r\n              backgroundColor=\"#9e8fae\"\r\n              title=\"Start\"\r\n              marginLeft=\"auto\"\r\n              marginRight=\"auto\"\r\n              marginTop={5}\r\n              width={40}\r\n              borderRadius={7}\r\n            >\r\n              <Text\r\n                fontSize={15}\r\n                color=\"white\"\r\n                fontFamily=\"Roboto_400Regular\"\r\n              >\r\n                Play Quiz\r\n              </Text>\r\n            </Button>\r\n      </ImageBackground>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}