{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\haram\\\\OneDrive\\\\Desktop\\\\Itcrowd\\\\ITCrowd.github.io\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Input, Text, Button, NativeBaseProvider, extendTheme } from \"native-base\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useState } from \"react\";\nimport { Ionicons, AntDesign } from \"@expo/vector-icons\";\nimport { Formik } from \"formik\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport LoginForm from \"./js/loginForm.js\";\nimport SignUpForm from \"./js/signupForm.js\";\nimport Profile from \"./js/profile.js\";\nimport Adopting from \"./js/about.js\";\nimport { useFonts, PaytoneOne_400Regular } from \"@expo-google-fonts/paytone-one\";\nimport { Roboto_400Regular } from \"@expo-google-fonts/roboto\";\nimport AppLoading from \"expo-app-loading\";\nimport background from \"./assets/background.jpg\";\nimport Quiz from \"./js/quiz.js\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport Firebase from \"./config/firebase\";\nimport logo from \"./assets/Logo.jpg\";\nvar auth = Firebase.auth();\n\nfunction HomeScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passwordVisibility = _useState6[0],\n      setPasswordVisibility = _useState6[1];\n\n  var _useState7 = useState(\"eye\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      rightIcon = _useState8[0],\n      setRightIcon = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loginError = _useState10[0],\n      setLoginError = _useState10[1];\n\n  var handlePasswordVisibility = function handlePasswordVisibility() {\n    if (rightIcon === \"eye\") {\n      setRightIcon(\"eye-off\");\n      setPasswordVisibility(!passwordVisibility);\n    } else if (rightIcon === \"eye-off\") {\n      setRightIcon(\"eye\");\n      setPasswordVisibility(!passwordVisibility);\n    }\n  };\n\n  var onLogin = function onLogin() {\n    return _regeneratorRuntime.async(function onLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(email !== \"\" && password !== \"\")) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(auth.signInWithEmailAndPassword(email, password));\n\n          case 4:\n            alert(\"Login Correct!\");\n\n          case 5:\n            _context.next = 11;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            alert(\"ERROR!\");\n            setLoginError(_context.t0.message);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var unsubscribeAuth = auth.onAuthStateChanged(function _callee(authenticatedUser) {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(authenticatedUser ? setUser(authenticatedUser) : setUser(null));\n\n          case 3:\n            return _context2.abrupt(\"return\", React.createElement(ProfileScreen, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 14\n              }\n            }));\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  });\n\n  var _useFonts = useFonts({\n    Roboto_400Regular: Roboto_400Regular,\n    PaytoneOne_400Regular: PaytoneOne_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 2),\n      fontsLoaded = _useFonts2[0],\n      error = _useFonts2[1];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, React.createElement(NativeBaseProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      width: \"auto\",\n      height: 83,\n      backgroundColor: \"white\",\n      alignItems: \"center\",\n      paddingTop: 23\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: logo,\n    style: {\n      width: 65,\n      height: 58\n    },\n    alt: \"logo_image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })), React.createElement(ImageBackground, {\n    source: background,\n    resizeMode: \"cover\",\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    alt: \"background_image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: \"flex-end\",\n      justifyContent: \"flex-end\",\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    color: \"white\",\n    fontSize: \"22\",\n    fontFamily: \"PaytoneOne_400Regular\",\n    marginTop: \"50px\",\n    marginRight: \"17px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Purrrfect Pets!\", \" \"), React.createElement(Text, {\n    color: \"white\",\n    fontSize: \"14\",\n    paddingTop: \"5\",\n    textAlign: \"center\",\n    fontFamily: \"PaytoneOne_400Regular\",\n    flexShrink: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Match with and adopt a pet \", \"\\n\", \"that is most suitable for you\"), React.createElement(StatusBar, {\n    style: \"dark-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    inputStyle: {\n      fontSize: 14\n    },\n    containerStyle: {\n      backgroundColor: \"#fff\",\n      marginBottom: 20\n    },\n    leftIcon: \"email\",\n    placeholder: \"Enter email\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    autoFocus: true,\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    inputStyle: {\n      fontSize: 14\n    },\n    containerStyle: {\n      backgroundColor: \"#fff\",\n      marginBottom: 20\n    },\n    leftIcon: \"lock\",\n    placeholder: \"Enter password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: passwordVisibility,\n    textContentType: \"password\",\n    rightIcon: rightIcon,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    handlePasswordVisibility: handlePasswordVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    onPress: onLogin,\n    backgroundColor: \"#f1c737\",\n    title: \"Login\",\n    marginTop: \"5\",\n    marginBottom: \"5\",\n    width: \"40\",\n    borderRadius: \"7\",\n    marginRight: \"17\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    fontSize: \"13\",\n    color: \"#545871\",\n    fontFamily: \"Roboto_400Regular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, \"Login In\")), React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Signup\");\n    },\n    backgroundColor: \"#f1c737\",\n    text: \"Go to Signup\",\n    width: \"40\",\n    borderRadius: \"7\",\n    marginRight: \"17\",\n    marginBottom: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    fontSize: \"13\",\n    color: \"#545871\",\n    fontFamily: \"Roboto_400Regular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, \"Sign Up\")))), React.createElement(View, {\n    style: {\n      height: 500,\n      backgroundColor: \"#9e8fae\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction SignUpScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(SignUpForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 10\n    }\n  });\n}\n\nfunction ProfileScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  return React.createElement(Profile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 10\n    }\n  });\n}\n\nfunction AboutAdopting(_ref4) {\n  var navigation = _ref4.navigation;\n  return React.createElement(Adopting, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 10\n    }\n  });\n}\n\nfunction QuizScreen(_ref5) {\n  var navigation = _ref5.navigation;\n  return React.createElement(Quiz, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 10\n    }\n  });\n}\n\nexport default function App() {\n  var _this2 = this;\n\n  var theme = extendTheme({\n    colors: {\n      primary: {\n        50: \"#E3F2F9\",\n        100: \"#C5E4F3\",\n        200: \"#A2D4EC\",\n        300: \"#7AC1E4\",\n        400: \"#47A9DA\",\n        500: \"#0088CC\",\n        600: \"#007AB8\",\n        700: \"#006BA1\",\n        800: \"#005885\",\n        900: \"#003F5E\"\n      },\n      amber: {\n        400: \"#d97706\"\n      },\n      lightpink: {\n        500: \"#F9EEEE\"\n      },\n      darkblue: {\n        500: \"#535971\"\n      },\n      lightblue: {\n        500: \"#DADCE8\"\n      },\n      darkpink: {\n        500: \"#E19D98\"\n      }\n    },\n    config: {\n      initialColorMode: \"dark\"\n    }\n  });\n  var Tab = createBottomTabNavigator();\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref6) {\n      var route = _ref6.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref7) {\n          var focused = _ref7.focused,\n              color = _ref7.color,\n              size = _ref7.size;\n          var iconName;\n\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home-outline\" : \"home-outline\";\n          }\n\n          if (route.name === \"Quiz\") {\n            iconName = focused ? \"help-circle-outline\" : \"help-circle-outline\";\n          }\n\n          if (route.name === \"Adopting\") {\n            iconName = focused ? \"paw-outline\" : \"paw-outline\";\n          }\n\n          if (route.name === \"Profile\") {\n            iconName = focused ? \"ios-person\" : \"person\";\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 20\n            }\n          });\n        },\n        tabBarActiveTintColor: \"tomato\",\n        tabBarInactiveTintColor: \"gray\"\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Quiz\",\n    component: QuizScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Adopting\",\n    component: AboutAdopting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/haram/OneDrive/Desktop/Itcrowd/ITCrowd.github.io/App.js"],"names":["React","Input","Text","Button","NativeBaseProvider","extendTheme","StatusBar","useState","Ionicons","AntDesign","Formik","createBottomTabNavigator","NavigationContainer","LoginForm","SignUpForm","Profile","Adopting","useFonts","PaytoneOne_400Regular","Roboto_400Regular","AppLoading","background","Quiz","initializeApp","getAnalytics","Firebase","logo","auth","HomeScreen","navigation","email","setEmail","password","setPassword","passwordVisibility","setPasswordVisibility","rightIcon","setRightIcon","loginError","setLoginError","handlePasswordVisibility","onLogin","signInWithEmailAndPassword","alert","message","unsubscribeAuth","onAuthStateChanged","authenticatedUser","setUser","console","log","fontsLoaded","error","width","height","backgroundColor","alignItems","paddingTop","flex","justifyContent","marginRight","fontSize","marginBottom","text","navigate","SignUpScreen","ProfileScreen","AboutAdopting","QuizScreen","App","theme","colors","primary","amber","lightpink","darkblue","lightblue","darkpink","config","initialColorMode","Tab","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { ImageBackground, View, Image, ScrollView } from \"react-native\";\r\nimport {\r\n  Input,\r\n  Text,\r\n  Button,\r\n  NativeBaseProvider,\r\n  extendTheme,\r\n} from \"native-base\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { useState } from \"react\";\r\nimport { Ionicons, AntDesign } from \"@expo/vector-icons\";\r\n//import { useFormik } from \"formik\";\r\nimport { Formik } from \"formik\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport LoginForm from \"./js/loginForm.js\";\r\nimport SignUpForm from \"./js/signupForm.js\";\r\nimport Profile from \"./js/profile.js\";\r\nimport Adopting from \"./js/about.js\";\r\nimport {\r\n  useFonts,\r\n  PaytoneOne_400Regular,\r\n} from \"@expo-google-fonts/paytone-one\";\r\nimport { Roboto_400Regular } from \"@expo-google-fonts/roboto\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport background from \"./assets/background.jpg\";\r\nimport Quiz from \"./js/quiz.js\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport Firebase from \"./config/firebase\";\r\nimport logo from \"./assets/Logo.jpg\";\r\n\r\n// TODO: Replace the following with your app's Firebase project configuration\r\nconst auth = Firebase.auth();\r\nfunction HomeScreen({ navigation }) {\r\n  // const response = await fetch('/api/names');\r\n  // const names = await response.json();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordVisibility, setPasswordVisibility] = useState(true);\r\n  const [rightIcon, setRightIcon] = useState(\"eye\");\r\n  const [loginError, setLoginError] = useState(\"\");\r\n\r\n  const handlePasswordVisibility = () => {\r\n    if (rightIcon === \"eye\") {\r\n      setRightIcon(\"eye-off\");\r\n      setPasswordVisibility(!passwordVisibility);\r\n    } else if (rightIcon === \"eye-off\") {\r\n      setRightIcon(\"eye\");\r\n      setPasswordVisibility(!passwordVisibility);\r\n    }\r\n  };\r\n\r\n  const onLogin = async () => {\r\n    try {\r\n      if (email !== \"\" && password !== \"\") {\r\n        await auth.signInWithEmailAndPassword(email, password);\r\n        alert(\"Login Correct!\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"ERROR!\");\r\n      setLoginError(error.message);\r\n    }\r\n  };\r\n  const unsubscribeAuth = auth.onAuthStateChanged(async (authenticatedUser) => {\r\n    try {\r\n      await (authenticatedUser ? setUser(authenticatedUser) : setUser(null));\r\n      return <ProfileScreen></ProfileScreen>;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  });\r\n\r\n  let [fontsLoaded, error] = useFonts({\r\n    Roboto_400Regular,\r\n    PaytoneOne_400Regular,\r\n  });\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />;\r\n  }\r\n  return (\r\n    <ScrollView>\r\n      <NativeBaseProvider>\r\n        <View\r\n          style={{\r\n            width: \"auto\",\r\n            height: 83,\r\n            backgroundColor: \"white\",\r\n            alignItems: \"center\",\r\n            paddingTop: 23,\r\n          }}\r\n        >\r\n          <Image\r\n            source={logo}\r\n            style={{ width: 65, height: 58 }}\r\n            alt=\"logo_image\"\r\n          />\r\n        </View>\r\n        <ImageBackground\r\n          source={background}\r\n          resizeMode=\"cover\"\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n          }}\r\n          alt=\"background_image\"\r\n        >\r\n          <View\r\n            style={{\r\n              alignItems: \"flex-end\",\r\n              justifyContent: \"flex-end\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <Text\r\n              color=\"white\"\r\n              fontSize=\"22\"\r\n              fontFamily=\"PaytoneOne_400Regular\"\r\n              marginTop=\"50px\"\r\n              marginRight=\"17px\"\r\n            >\r\n              Purrrfect Pets!{\" \"}\r\n            </Text>\r\n            <Text\r\n              color=\"white\"\r\n              fontSize=\"14\"\r\n              paddingTop=\"5\"\r\n              textAlign=\"center\"\r\n              fontFamily=\"PaytoneOne_400Regular\"\r\n              flexShrink=\"1\"\r\n            >\r\n              Match with and adopt a pet {\"\\n\"}that is most suitable for you\r\n            </Text>\r\n\r\n            <StatusBar style=\"dark-content\" />\r\n            <Input\r\n              inputStyle={{\r\n                fontSize: 14,\r\n              }}\r\n              containerStyle={{\r\n                backgroundColor: \"#fff\",\r\n                marginBottom: 20,\r\n              }}\r\n              leftIcon=\"email\"\r\n              placeholder=\"Enter email\"\r\n              autoCapitalize=\"none\"\r\n              keyboardType=\"email-address\"\r\n              textContentType=\"emailAddress\"\r\n              autoFocus={true}\r\n              value={email}\r\n              onChangeText={(text) => setEmail(text)}\r\n            />\r\n            <Input\r\n              inputStyle={{\r\n                fontSize: 14,\r\n              }}\r\n              containerStyle={{\r\n                backgroundColor: \"#fff\",\r\n                marginBottom: 20,\r\n              }}\r\n              leftIcon=\"lock\"\r\n              placeholder=\"Enter password\"\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n              secureTextEntry={passwordVisibility}\r\n              textContentType=\"password\"\r\n              rightIcon={rightIcon}\r\n              value={password}\r\n              onChangeText={(text) => setPassword(text)}\r\n              handlePasswordVisibility={handlePasswordVisibility}\r\n            />\r\n            <Button\r\n              onPress={onLogin}\r\n              backgroundColor=\"#f1c737\"\r\n              title=\"Login\"\r\n              marginTop=\"5\"\r\n              marginBottom=\"5\"\r\n              width=\"40\"\r\n              borderRadius=\"7\"\r\n              marginRight=\"17\"\r\n            >\r\n              <Text\r\n                fontSize=\"13\"\r\n                color=\"#545871\"\r\n                fontFamily=\"Roboto_400Regular\"\r\n              >\r\n                Login In\r\n              </Text>\r\n            </Button>\r\n            <Button\r\n              onPress={() => navigation.navigate(\"Signup\")}\r\n              backgroundColor=\"#f1c737\"\r\n              text=\"Go to Signup\"\r\n              width=\"40\"\r\n              borderRadius=\"7\"\r\n              marginRight=\"17\"\r\n              marginBottom=\"20\"\r\n            >\r\n              <Text\r\n                fontSize=\"13\"\r\n                color=\"#545871\"\r\n                fontFamily=\"Roboto_400Regular\"\r\n              >\r\n                Sign Up\r\n              </Text>\r\n            </Button>\r\n          </View>\r\n        </ImageBackground>\r\n        <View style={{ height: 500, backgroundColor: \"#9e8fae\" }}></View>\r\n      </NativeBaseProvider>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nfunction SignUpScreen({ navigation }) {\r\n  return <SignUpForm />;\r\n}\r\n// function LogInScreen({ navigation }) {\r\n//   return <LoginForm />;\r\n// }\r\n\r\nfunction ProfileScreen({ navigation }) {\r\n  return <Profile />;\r\n}\r\n\r\nfunction AboutAdopting({ navigation }) {\r\n  return <Adopting />;\r\n}\r\nfunction QuizScreen({ navigation }) {\r\n  return <Quiz />;\r\n}\r\n\r\nexport default function App() {\r\n  const theme = extendTheme({\r\n    colors: {\r\n      primary: {\r\n        50: \"#E3F2F9\",\r\n        100: \"#C5E4F3\",\r\n        200: \"#A2D4EC\",\r\n        300: \"#7AC1E4\",\r\n        400: \"#47A9DA\",\r\n        500: \"#0088CC\",\r\n        600: \"#007AB8\",\r\n        700: \"#006BA1\",\r\n        800: \"#005885\",\r\n        900: \"#003F5E\",\r\n      },\r\n      amber: {\r\n        400: \"#d97706\",\r\n      },\r\n      lightpink: {\r\n        500: \"#F9EEEE\",\r\n      },\r\n      darkblue: {\r\n        500: \"#535971\",\r\n      },\r\n      lightblue: {\r\n        500: \"#DADCE8\",\r\n      },\r\n      darkpink: {\r\n        500: \"#E19D98\",\r\n      },\r\n    },\r\n    config: {\r\n      // Changing initialColorMode to 'dark'\r\n      initialColorMode: \"dark\",\r\n    },\r\n  });\r\n  const Tab = createBottomTabNavigator();\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n\r\n            if (route.name === \"Home\") {\r\n              iconName = focused ? \"home-outline\" : \"home-outline\";\r\n            }\r\n            if (route.name === \"Quiz\") {\r\n              iconName = focused\r\n                ? \"help-circle-outline\"\r\n                : \"help-circle-outline\";\r\n            }\r\n            if (route.name === \"Adopting\") {\r\n              iconName = focused ? \"paw-outline\" : \"paw-outline\";\r\n            }\r\n            if (route.name === \"Profile\") {\r\n              iconName = focused ? \"ios-person\" : \"person\";\r\n            }\r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n          tabBarActiveTintColor: \"tomato\",\r\n          tabBarInactiveTintColor: \"gray\",\r\n        })}\r\n      >\r\n        <Tab.Screen\r\n          name=\"Home\"\r\n          component={HomeScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Tab.Screen name=\"Quiz\" component={QuizScreen} />\r\n        <Tab.Screen name=\"Adopting\" component={AboutAdopting} />\r\n        <Tab.Screen\r\n          name=\"Profile\"\r\n          component={ProfileScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        {/* <Tab.Screen name=\"Login\" component={SignUpScreen} /> */}\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}