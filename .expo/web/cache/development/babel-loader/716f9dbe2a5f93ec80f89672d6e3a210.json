{"ast":null,"code":"var _jsxFileName = \"/Users/finnbeardmore/Documents/GitHub/ITCrowd/js/signupForm.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Input } from \"react-native-web/dist/index\";\nimport auth from \"@react-native-firebase/auth\";\nimport Firebase from \"../config/firebase\";\n\nfunction registration(email, password, lastName, firstName) {\n  var currentUser, db, App;\n  return _regeneratorRuntime.async(function registration$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          App = function _App() {\n            return React.createElement(NativeBaseProvider, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 7\n              }\n            }, React.createElement(View, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 9\n              }\n            }, React.createElement(StatusBar, {\n              style: \"dark-content\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 11\n              }\n            }), React.createElement(Text, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 11\n              }\n            }, \"Login\"), React.createElement(Input, {\n              inputStyle: {\n                fontSize: 14\n              },\n              containerStyle: {\n                backgroundColor: \"#fff\",\n                marginBottom: 20\n              },\n              leftIcon: \"email\",\n              placeholder: \"Enter email\",\n              autoCapitalize: \"none\",\n              keyboardType: \"email-address\",\n              textContentType: \"emailAddress\",\n              autoFocus: true,\n              value: email,\n              onChangeText: function onChangeText(text) {\n                return setEmail(text);\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 11\n              }\n            }), React.createElement(Input, {\n              inputStyle: {\n                fontSize: 14\n              },\n              containerStyle: {\n                backgroundColor: \"#fff\",\n                marginBottom: 20\n              },\n              leftIcon: \"lock\",\n              placeholder: \"Enter password\",\n              autoCapitalize: \"none\",\n              autoCorrect: false,\n              secureTextEntry: passwordVisibility,\n              textContentType: \"password\",\n              rightIcon: rightIcon,\n              value: password,\n              onChangeText: function onChangeText(text) {\n                return setPassword(text);\n              },\n              handlePasswordVisibility: handlePasswordVisibility,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 11\n              }\n            }), React.createElement(Button, {\n              onPress: onLogin,\n              backgroundColor: \"#f57c00\",\n              title: \"Login\",\n              tileColor: \"#fff\",\n              titleSize: 20,\n              containerStyle: {\n                marginBottom: 24\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 11\n              }\n            }, \" \", React.createElement(Text, {\n              color: \"#545871\",\n              fontFamily: \"Roboto_400Regular\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 13\n              }\n            }, \"Login In\")), React.createElement(Button, {\n              onPress: function onPress() {\n                return navigation.navigate(\"Signup\");\n              },\n              text: \"Go to Signup\",\n              color: \"#fff\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 11\n              }\n            }, \" \", React.createElement(Text, {\n              color: \"#545871\",\n              fontFamily: \"Roboto_400Regular\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 13\n              }\n            }, \"Sign Up\"))));\n          };\n\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(Firebase.auth().createUserWithEmailAndPassword(email, password));\n\n        case 4:\n          currentUser = Firebase.auth().currentUser;\n          db = Firebase.firestore();\n          db.collection(\"users\").doc(currentUser.uid).set({\n            email: currentUser.email,\n            lastName: lastName,\n            firstName: firstName\n          });\n          _context.next = 12;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          Alert.alert(\"There is something wrong!!!!\", _context.t0.message);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/finnbeardmore/Documents/GitHub/ITCrowd/js/signupForm.js"],"names":["React","useState","useEffect","Input","auth","Firebase","registration","email","password","lastName","firstName","App","fontSize","backgroundColor","marginBottom","text","setEmail","passwordVisibility","rightIcon","setPassword","handlePasswordVisibility","onLogin","navigation","navigate","createUserWithEmailAndPassword","currentUser","db","firestore","collection","doc","uid","set","Alert","alert","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, Input } from \"react-native\";\nimport auth from \"@react-native-firebase/auth\";\nimport Firebase from \"../config/firebase\";\nasync function registration(email, password, lastName, firstName) {\n  try {\n    await Firebase.auth().createUserWithEmailAndPassword(email, password);\n    const currentUser = Firebase.auth().currentUser;\n\n    const db = Firebase.firestore();\n    db.collection(\"users\").doc(currentUser.uid).set({\n      email: currentUser.email,\n      lastName: lastName,\n      firstName: firstName,\n    });\n  } catch (err) {\n    Alert.alert(\"There is something wrong!!!!\", err.message);\n  }\n  function App() {\n    // Set an initializing state whilst Firebase connects\n\n    return (\n      <NativeBaseProvider>\n        <View>\n          <StatusBar style=\"dark-content\" />\n          <Text>Login</Text>\n          <Input\n            inputStyle={{\n              fontSize: 14,\n            }}\n            containerStyle={{\n              backgroundColor: \"#fff\",\n              marginBottom: 20,\n            }}\n            leftIcon=\"email\"\n            placeholder=\"Enter email\"\n            autoCapitalize=\"none\"\n            keyboardType=\"email-address\"\n            textContentType=\"emailAddress\"\n            autoFocus={true}\n            value={email}\n            onChangeText={(text) => setEmail(text)}\n          />\n          <Input\n            inputStyle={{\n              fontSize: 14,\n            }}\n            containerStyle={{\n              backgroundColor: \"#fff\",\n              marginBottom: 20,\n            }}\n            leftIcon=\"lock\"\n            placeholder=\"Enter password\"\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            secureTextEntry={passwordVisibility}\n            textContentType=\"password\"\n            rightIcon={rightIcon}\n            value={password}\n            onChangeText={(text) => setPassword(text)}\n            handlePasswordVisibility={handlePasswordVisibility}\n          />\n          <Button\n            onPress={onLogin}\n            backgroundColor=\"#f57c00\"\n            title=\"Login\"\n            tileColor=\"#fff\"\n            titleSize={20}\n            containerStyle={{\n              marginBottom: 24,\n            }}\n          >\n            {\" \"}\n            <Text color=\"#545871\" fontFamily=\"Roboto_400Regular\">\n              Login In\n            </Text>\n          </Button>\n          <Button\n            onPress={() => navigation.navigate(\"Signup\")}\n            text=\"Go to Signup\"\n            color=\"#fff\"\n          >\n            {\" \"}\n            <Text color=\"#545871\" fontFamily=\"Roboto_400Regular\">\n              Sign Up\n            </Text>\n          </Button>\n        </View>\n      </NativeBaseProvider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}