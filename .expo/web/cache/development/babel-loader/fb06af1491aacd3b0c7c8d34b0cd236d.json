{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\haram\\\\OneDrive\\\\Desktop\\\\Itcrowd\\\\ITCrowd.github.io\\\\js\\\\loginForm.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useFonts, PaytoneOne_400Regular } from \"@expo-google-fonts/paytone-one\";\nimport { Roboto_400Regular } from \"@expo-google-fonts/roboto\";\nimport AppLoading from \"expo-app-loading\";\nimport { useEffect, useState } from \"react\";\nexport default function LoginForm() {\n  var _this = this;\n\n  var _useFonts = useFonts({\n    Roboto_400Regular: Roboto_400Regular,\n    PaytoneOne_400Regular: PaytoneOne_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 2),\n      fontsLoaded = _useFonts2[0],\n      error = _useFonts2[1];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }\n    });\n  }\n\n  var URL = \"https://itcrowdproject.uqcloud.net/?PET_PHOTO\";\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  useEffect(function () {\n    fetch(URL).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json.PID);\n    }).catch(function (error) {\n      return alert(error);\n    }).finally(setLoading(false));\n  });\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    color: \"white\",\n    fontSize: \"80\",\n    fontFamily: \"PaytoneOne_400Regular\",\n    marginTop: \"150px\",\n    marginRight: \"50px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Welcome back login in to find your Purrrfect Pets!\", \" \"), React.createElement(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      alert(\"Submitted\");\n      alert(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, function (props) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, React.createElement(TextInput, {\n      padding: \"5em\",\n      placeholder: \"Username\",\n      onChangeText: props.handleChange(\"username\"),\n      value: props.values.username,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), React.createElement(TextInput, {\n      padding: \"5em\",\n      placeholder: \"Password\",\n      onChangeText: props.handleChange(\"password\"),\n      value: props.values.password,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), React.createElement(Button, {\n      padding: \"5em\",\n      title: \"submit\",\n      color: \"lightpink\",\n      onPreess: props.handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }));\n  }));\n}","map":{"version":3,"sources":["C:/Users/haram/OneDrive/Desktop/Itcrowd/ITCrowd.github.io/js/loginForm.js"],"names":["React","Formik","useFonts","PaytoneOne_400Regular","Roboto_400Regular","AppLoading","useEffect","useState","LoginForm","fontsLoaded","error","URL","isLoading","setLoading","data","setData","fetch","then","response","json","PID","catch","alert","finally","username","password","values","props","handleChange","handleSubmit"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { View, TextInput, Button, Text } from \"react-native\";\r\nimport {\r\n  useFonts,\r\n  PaytoneOne_400Regular,\r\n} from \"@expo-google-fonts/paytone-one\";\r\nimport { Roboto_400Regular } from \"@expo-google-fonts/roboto\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport { useEffect, useState } from \"react\";\r\nexport default function LoginForm() {\r\n  let [fontsLoaded, error] = useFonts({\r\n    Roboto_400Regular,\r\n    PaytoneOne_400Regular,\r\n  });\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />;\r\n  }\r\n  const URL = \"https://itcrowdproject.uqcloud.net/?PET_PHOTO\";\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(URL)\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json.PID))\r\n      .catch((error) => alert(error))\r\n      .finally(setLoading(false));\r\n  });\r\n  return (\r\n    <View>\r\n      <Text\r\n        color=\"white\"\r\n        fontSize=\"80\"\r\n        fontFamily=\"PaytoneOne_400Regular\"\r\n        marginTop=\"150px\"\r\n        marginRight=\"50px\"\r\n      >\r\n        Welcome back login in to find your Purrrfect Pets!{\" \"}\r\n      </Text>\r\n      <Formik\r\n        initialValues={{ username: \"\", password: \"\" }}\r\n        onSubmit={(values) => {\r\n          alert(\"Submitted\");\r\n          //console.log(\"submitted\");\r\n          alert(values);\r\n        }}\r\n        // Query database here for users! https://itcrowdproject.uqcloud.net/?USERS search through pair\r\n      >\r\n        {(props) => (\r\n          <View>\r\n            <TextInput\r\n              padding=\"5em\"\r\n              placeholder=\"Username\"\r\n              onChangeText={props.handleChange(\"username\")}\r\n              value={props.values.username}\r\n            />\r\n            <TextInput\r\n              padding=\"5em\"\r\n              placeholder=\"Password\"\r\n              onChangeText={props.handleChange(\"password\")}\r\n              value={props.values.password}\r\n            />\r\n            <Button\r\n              padding=\"5em\"\r\n              title=\"submit\"\r\n              color=\"lightpink\"\r\n              onPreess={props.handleSubmit}\r\n            />\r\n          </View>\r\n        )}\r\n      </Formik>\r\n    </View>\r\n  );\r\n}\r\n\r\n//xport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}