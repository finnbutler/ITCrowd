{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\haram\\\\OneDrive\\\\Desktop\\\\Itcrowd\\\\ITCrowd.github.io\\\\js\\\\signupForm.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Text, Button, NativeBaseProvider, extendTheme, Input } from \"native-base\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useState } from \"react\";\nimport background from \"../assets/login_background.jpg\";\nimport Firebase from \"../config/firebase\";\nimport \"firebase/firestore\";\nimport logo from \"../assets/Logo.jpg\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Login from \"../js/loginForm.js\";\nimport { useNavigation } from '@react-navigation/native';\nvar auth = Firebase.auth();\n\nfunction HomeScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      firstName = _useState6[0],\n      setFirstName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lastName = _useState8[0],\n      setLastName = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      passwordVisibility = _useState10[0],\n      setPasswordVisibility = _useState10[1];\n\n  var _useState11 = useState(\"eye\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      rightIcon = _useState12[0],\n      setRightIcon = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      loginError = _useState14[0],\n      setLoginError = _useState14[1];\n\n  var handlePasswordVisibility = function handlePasswordVisibility() {\n    if (rightIcon === \"eye\") {\n      setRightIcon(\"eye-off\");\n      setPasswordVisibility(!passwordVisibility);\n    } else if (rightIcon === \"eye-off\") {\n      setRightIcon(\"eye\");\n      setPasswordVisibility(!passwordVisibility);\n    }\n  };\n\n  var onSignup = function onSignup() {\n    var currentUser, db;\n    return _regeneratorRuntime.async(function onSignup$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(email !== \"\" && password !== \"\")) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(auth.createUserWithEmailAndPassword(email, password));\n\n          case 4:\n            currentUser = auth.currentUser;\n            db = Firebase.firestore();\n            db.collection(\"users\").doc(currentUser.uid).set({\n              email: currentUser.email,\n              lastName: lastName,\n              firstName: firstName\n            });\n            currentUser.updateProfile({\n              displayName: \"Finnasdasdd\",\n              photoURL: \"https://example.com/jane-q-user/profile.jpg\"\n            });\n            alert(\"You sign up successfully! You can login now\");\n\n          case 9:\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0.message);\n            setLoginError();\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  return React.createElement(NativeBaseProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: background,\n    resizeMode: \"cover\",\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    alt: \"background_image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: -150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    style: \"dark-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginBottom: 5,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Sign Up\"), React.createElement(Input, {\n    inputStyle: {\n      fontSize: 14\n    },\n    borderColor: \"grey\",\n    width: \"300px\",\n    margin: \"auto\",\n    marginBottom: \"10px\",\n    leftIcon: \"email\",\n    placeholder: \"Enter First Name\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    autoFocus: true,\n    value: firstName,\n    onChangeText: function onChangeText(text) {\n      return setFirstName(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    inputStyle: {\n      fontSize: 14\n    },\n    borderColor: \"grey\",\n    width: \"300px\",\n    margin: \"auto\",\n    marginBottom: \"10px\",\n    leftIcon: \"email\",\n    placeholder: \"Enter Last Name\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    autoFocus: true,\n    value: lastName,\n    onChangeText: function onChangeText(text) {\n      return setLastName(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    inputStyle: {\n      fontSize: 14\n    },\n    borderColor: \"grey\",\n    width: \"300px\",\n    margin: \"auto\",\n    marginBottom: \"5px\",\n    leftIcon: \"email\",\n    placeholder: \"Enter email\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    autoFocus: true,\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    inputStyle: {\n      fontSize: 14\n    },\n    borderColor: \"grey\",\n    width: \"300px\",\n    margin: \"auto\",\n    marginBottom: \"10px\",\n    leftIcon: \"lock\",\n    placeholder: \"Enter password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: passwordVisibility,\n    textContentType: \"password\",\n    rightIcon: rightIcon,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    handlePasswordVisibility: handlePasswordVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    width: \"300px\",\n    margin: \"auto\",\n    backgroundColor: \"#f1c737\",\n    marginBottom: \"10px\",\n    onPress: onSignup,\n    text: \"Go to Signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    color: \"#545871\",\n    fontFamily: \"Roboto_400Regular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Sign Up\")), React.createElement(Text, {\n    textAlign: \"center\",\n    color: \"#545871\",\n    fontFamily: \"Roboto_400Regular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, \"Already have an account? \", React.createElement(Text, {\n    textDecorationLine: \"underline\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Login\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 38\n    }\n  }, \"Login\")))));\n}\n\nexport default HomeScreen;","map":{"version":3,"sources":["C:/Users/haram/OneDrive/Desktop/Itcrowd/ITCrowd.github.io/js/signupForm.js"],"names":["React","Text","Button","NativeBaseProvider","extendTheme","Input","StatusBar","useState","background","Firebase","logo","createStackNavigator","Login","useNavigation","auth","HomeScreen","navigation","email","setEmail","password","setPassword","firstName","setFirstName","lastName","setLastName","passwordVisibility","setPasswordVisibility","rightIcon","setRightIcon","loginError","setLoginError","handlePasswordVisibility","onSignup","createUserWithEmailAndPassword","currentUser","db","firestore","collection","doc","uid","set","updateProfile","displayName","photoURL","alert","message","flex","justifyContent","marginTop","marginBottom","textAlign","fontSize","text","navigate"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { ImageBackground, View, Image } from \"react-native\";\r\nimport {\r\n  Text,\r\n  Button,\r\n  NativeBaseProvider,\r\n  extendTheme,\r\n  Input,\r\n} from \"native-base\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { useState } from \"react\";\r\nimport background from \"../assets/login_background.jpg\";\r\nimport Firebase from \"../config/firebase\";\r\nimport \"firebase/firestore\";\r\nimport logo from \"../assets/Logo.jpg\";\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Login from '../js/loginForm.js';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n// TODO: Replace the following with your app's Firebase project configuration\r\nconst auth = Firebase.auth();\r\n\r\nfunction HomeScreen() {\r\n  const navigation = useNavigation();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [passwordVisibility, setPasswordVisibility] = useState(true);\r\n  const [rightIcon, setRightIcon] = useState(\"eye\");\r\n  const [loginError, setLoginError] = useState(\"\");\r\n\r\n  const handlePasswordVisibility = () => {\r\n    if (rightIcon === \"eye\") {\r\n      setRightIcon(\"eye-off\");\r\n      setPasswordVisibility(!passwordVisibility);\r\n    } else if (rightIcon === \"eye-off\") {\r\n      setRightIcon(\"eye\");\r\n      setPasswordVisibility(!passwordVisibility);\r\n    }\r\n  };\r\n\r\n  const onSignup = async () => {\r\n    try {\r\n      if (email !== \"\" && password !== \"\") {\r\n        await auth.createUserWithEmailAndPassword(email, password);\r\n        const currentUser = auth.currentUser;\r\n\r\n        const db = Firebase.firestore();\r\n        db.collection(\"users\").doc(currentUser.uid).set({\r\n          email: currentUser.email,\r\n          lastName: lastName,\r\n          firstName: firstName,\r\n        });\r\n        currentUser.updateProfile({\r\n          displayName: \"Finnasdasdd\",\r\n          photoURL: \"https://example.com/jane-q-user/profile.jpg\",\r\n        });\r\n        alert(\"You sign up successfully! You can login now\");\r\n      }\r\n    } catch (error) {\r\n      alert(error.message);\r\n      setLoginError();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n      <ImageBackground\r\n      source={background}\r\n      resizeMode=\"cover\"\r\n      style={{\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n      }}\r\n      alt=\"background_image\">\r\n      <View style={{marginTop: -150}}>\r\n        <StatusBar style=\"dark-content\" />\r\n        <Text style={{ marginBottom: 5, textAlign: \"center\"}}>Sign Up</Text>\r\n\r\n        <Input\r\n          inputStyle={{\r\n            fontSize: 14,\r\n          }}\r\n          borderColor=\"grey\"\r\n          width=\"300px\"\r\n          margin=\"auto\"\r\n          marginBottom=\"10px\"\r\n          leftIcon=\"email\"\r\n          placeholder=\"Enter First Name\"\r\n          autoCapitalize=\"none\"\r\n          keyboardType=\"email-address\"\r\n          textContentType=\"emailAddress\"\r\n          autoFocus={true}\r\n          value={firstName}\r\n          onChangeText={(text) => setFirstName(text)}\r\n        />\r\n\r\n        <Input\r\n          inputStyle={{\r\n            fontSize: 14,\r\n          }}\r\n          borderColor=\"grey\"\r\n          width=\"300px\"\r\n          margin=\"auto\"\r\n          marginBottom=\"10px\"\r\n          leftIcon=\"email\"\r\n          placeholder=\"Enter Last Name\"\r\n          autoCapitalize=\"none\"\r\n          keyboardType=\"email-address\"\r\n          textContentType=\"emailAddress\"\r\n          autoFocus={true}\r\n          value={lastName}\r\n          onChangeText={(text) => setLastName(text)}\r\n        />\r\n\r\n        <Input\r\n          inputStyle={{\r\n            fontSize: 14,\r\n          }}\r\n          borderColor=\"grey\"\r\n          width=\"300px\"\r\n          margin=\"auto\"\r\n          marginBottom=\"5px\"\r\n          leftIcon=\"email\"\r\n          placeholder=\"Enter email\"\r\n          autoCapitalize=\"none\"\r\n          keyboardType=\"email-address\"\r\n          textContentType=\"emailAddress\"\r\n          autoFocus={true}\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n        />\r\n        <Input\r\n          inputStyle={{\r\n            fontSize: 14,\r\n          }}\r\n          borderColor=\"grey\"\r\n          width=\"300px\"\r\n          margin=\"auto\"\r\n          marginBottom=\"10px\"\r\n          leftIcon=\"lock\"\r\n          placeholder=\"Enter password\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n          secureTextEntry={passwordVisibility}\r\n          textContentType=\"password\"\r\n          rightIcon={rightIcon}\r\n          value={password}\r\n          onChangeText={(text) => setPassword(text)}\r\n          handlePasswordVisibility={handlePasswordVisibility}\r\n        />\r\n        <Button\r\n          width=\"300px\"\r\n          margin=\"auto\"\r\n          backgroundColor=\"#f1c737\"\r\n          marginBottom=\"10px\"\r\n          onPress={(onSignup)}\r\n          text=\"Go to Signup\"\r\n        >\r\n          <Text color=\"#545871\" fontFamily=\"Roboto_400Regular\">\r\n            Sign Up\r\n          </Text>\r\n        </Button>\r\n        <Text textAlign=\"center\" color=\"#545871\" fontFamily=\"Roboto_400Regular\">\r\n            Already have an account? <Text textDecorationLine= 'underline'  onPress={() => navigation.navigate(\"Login\")}>Login</Text> \r\n        </Text>\r\n      </View>\r\n      </ImageBackground>\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\nexport default HomeScreen;\r\n"]},"metadata":{},"sourceType":"module"}