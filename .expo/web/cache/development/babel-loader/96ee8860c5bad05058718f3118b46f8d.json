{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\haram\\\\OneDrive\\\\Desktop\\\\Itcrowd\\\\ITCrowd.github.io\\\\js\\\\test.js\";\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nvar URL = \"https://itcrowdproject.uqcloud.net/?PET_PHOTO\";\n\nvar Test = function Test() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  useEffect(function () {\n    fetch(URL).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json.PID);\n    }).catch(function (error) {\n      return alert(error);\n    }).finally(setLoading(false));\n  });\n  return React.createElement(SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 22\n    }\n  }) : React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(_ref, index) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, item.PID);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Test;","map":{"version":3,"sources":["C:/Users/haram/OneDrive/Desktop/Itcrowd/ITCrowd.github.io/js/test.js"],"names":["React","useEffect","useState","URL","Test","isLoading","setLoading","data","setData","fetch","then","response","json","PID","catch","error","alert","finally","index","id","item"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;;AAIA,IAAMC,GAAG,GAAG,+CAAZ;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,kBAAgCF,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,UAAlB;;AACA,mBAAwBJ,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AAECP,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,KAAK,CAACN,GAAD,CAAL,CAAWO,IAAX,CAAgB,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAAhB,EAA+CF,IAA/C,CAAoD,UAACE,IAAD;AAAA,aAAUJ,OAAO,CAACI,IAAI,CAACC,GAAN,CAAjB;AAAA,KAApD,EACPC,KADO,CACD,UAACC,KAAD;AAAA,aAAWC,KAAK,CAACD,KAAD,CAAhB;AAAA,KADC,EACwBE,OADxB,CACgCX,UAAU,CAAC,KAAD,CAD1C;AAEP,GAHY,CAAT;AAIL,SACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,SAAS,GAAG,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACV,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEE,IADR;AAEE,IAAA,YAAY,EAAE,4BAASW,KAAT;AAAA,UAAGC,EAAH,QAAGA,EAAH;AAAA,aAAmBA,EAAnB;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAI,CAACP,GAAZ,CADU;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAaC,CArBD;;AAsBA,eAAeT,IAAf","sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { ActivityIndicator, FlatList, Text, View } from 'react-native';\r\n//import { SafeAreaView } from 'react-native-safe-area-context';\r\n\r\nconst URL = \"https://itcrowdproject.uqcloud.net/?PET_PHOTO\";\r\nconst Test = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [data, setData] = useState([]);\r\n    \r\n     useEffect(() => {\r\n         fetch(URL).then((response) => response.json()).then((json) => setData(json.PID))\r\n .catch((error) => alert(error)).finally(setLoading(false));    \r\n });\r\nreturn(\r\n    <SafeAreaView>\r\n        {isLoading ? <ActivityIndicator/> : (\r\n        <FlatList\r\n          data={data}\r\n          keyExtractor={({ id }, index) => id}\r\n          renderItem={({ item }) => (\r\n            <Text>{item.PID}</Text>\r\n          )}\r\n        />\r\n      )}\r\n    </SafeAreaView>\r\n   );\r\n};\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}