{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _jsxFileName = \"/Users/finnbeardmore/Documents/GitHub/ITCrowd/node_modules/react-native-lightbox/Lightbox.js\";\n\nvar React = require('react');\n\nvar Children = React.Children,\n    cloneElement = React.cloneElement;\n\nvar PropTypes = require('prop-types');\n\nvar createReactClass = require('create-react-class');\n\nvar Animated = require(\"react-native-web/dist/exports/Animated\").default;\n\nvar TouchableHighlight = require(\"react-native-web/dist/exports/TouchableHighlight\").default;\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar TimerMixin = require('react-timer-mixin');\n\nvar LightboxOverlay = require(\"./LightboxOverlay\");\n\nvar Lightbox = createReactClass({\n  displayName: \"Lightbox\",\n  mixins: [TimerMixin],\n  propTypes: {\n    activeProps: PropTypes.object,\n    renderHeader: PropTypes.func,\n    renderContent: PropTypes.func,\n    underlayColor: PropTypes.string,\n    backgroundColor: PropTypes.string,\n    onOpen: PropTypes.func,\n    onClose: PropTypes.func,\n    springConfig: PropTypes.shape({\n      tension: PropTypes.number,\n      friction: PropTypes.number,\n      useNativeDriver: PropTypes.bool\n    }),\n    animateOpening: PropTypes.bool,\n    animateClosing: PropTypes.bool,\n    swipeToDismiss: PropTypes.bool,\n    pinchToZoom: PropTypes.bool\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      swipeToDismiss: true,\n      pinchToZoom: true,\n      onOpen: function onOpen() {},\n      onClose: function onClose() {}\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      isOpen: false,\n      origin: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      },\n      layoutOpacity: new Animated.Value(1)\n    };\n  },\n  getContent: function getContent() {\n    if (this.props.renderContent) {\n      return this.props.renderContent();\n    } else if (this.props.activeProps) {\n      return cloneElement(Children.only(this.props.children), this.props.activeProps);\n    }\n\n    return this.props.children;\n  },\n  getOverlayProps: function getOverlayProps() {\n    return {\n      isOpen: this.state.isOpen,\n      origin: this.state.origin,\n      renderHeader: this.props.renderHeader,\n      swipeToDismiss: this.props.swipeToDismiss,\n      pinchToZoom: this.props.pinchToZoom,\n      springConfig: this.props.springConfig,\n      animateOpening: this.props.animateOpening,\n      animateClosing: this.props.animateClosing,\n      backgroundColor: this.props.backgroundColor,\n      children: this.getContent(),\n      onClose: this.onClose\n    };\n  },\n  open: function open() {\n    var _this = this;\n\n    this._root.measureInWindow(function (x, y, width, height) {\n      _this.props.onOpen();\n\n      _this.setState({\n        isOpen: true,\n        origin: {\n          width: width,\n          height: height,\n          x: x,\n          y: y\n        }\n      }, function () {\n        if (_this.props.navigator) {\n          var route = {\n            component: LightboxOverlay,\n            passProps: _this.getOverlayProps()\n          };\n\n          var routes = _this.props.navigator.getCurrentRoutes();\n\n          routes.push(route);\n\n          _this.props.navigator.immediatelyResetRouteStack(routes);\n        }\n\n        _this.setTimeout(function () {\n          _this.state.layoutOpacity.setValue(0);\n        });\n      });\n    });\n  },\n  onClose: function onClose() {\n    this.state.layoutOpacity.setValue(1);\n    this.setState({\n      isOpen: false\n    }, this.props.onClose);\n\n    if (this.props.navigator) {\n      var routes = this.props.navigator.getCurrentRoutes();\n      routes.pop();\n      this.props.navigator.immediatelyResetRouteStack(routes);\n    }\n  },\n  render: function render() {\n    var _this2 = this;\n\n    return React.createElement(View, {\n      ref: function ref(component) {\n        return _this2._root = component;\n      },\n      style: this.props.style,\n      onLayout: function onLayout() {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, React.createElement(Animated.View, {\n      style: {\n        opacity: this.state.layoutOpacity\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, React.createElement(TouchableHighlight, {\n      underlayColor: this.props.underlayColor,\n      onPress: this.open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, this.props.children)), this.props.navigator ? false : React.createElement(LightboxOverlay, _extends({}, this.getOverlayProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 41\n      }\n    })));\n  }\n});\nmodule.exports = Lightbox;","map":{"version":3,"sources":["/Users/finnbeardmore/Documents/GitHub/ITCrowd/node_modules/react-native-lightbox/Lightbox.js"],"names":["React","require","Children","cloneElement","PropTypes","createReactClass","TimerMixin","LightboxOverlay","Lightbox","mixins","propTypes","activeProps","object","renderHeader","func","renderContent","underlayColor","string","backgroundColor","onOpen","onClose","springConfig","shape","tension","number","friction","useNativeDriver","bool","animateOpening","animateClosing","swipeToDismiss","pinchToZoom","getDefaultProps","getInitialState","isOpen","origin","x","y","width","height","layoutOpacity","Animated","Value","getContent","props","only","children","getOverlayProps","state","open","_root","measureInWindow","setState","navigator","route","component","passProps","routes","getCurrentRoutes","push","immediatelyResetRouteStack","setTimeout","setValue","pop","render","style","opacity","module","exports"],"mappings":"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","sourcesContent":["/**\n * @providesModule Lightbox\n */\n'use strict';\n\nvar React = require('react');\nvar {\n  Children,\n  cloneElement,\n} = React;\nvar PropTypes = require('prop-types');\nvar createReactClass = require('create-react-class');\nvar {\n  Animated,\n  TouchableHighlight,\n  View,\n} = require('react-native');\nvar TimerMixin = require('react-timer-mixin');\n\nvar LightboxOverlay = require('./LightboxOverlay');\n\nvar Lightbox = createReactClass({\n  mixins: [TimerMixin],\n\n  propTypes: {\n    activeProps: PropTypes.object,\n    renderHeader: PropTypes.func,\n    renderContent: PropTypes.func,\n    underlayColor: PropTypes.string,\n    backgroundColor: PropTypes.string,\n    onOpen: PropTypes.func,\n    onClose: PropTypes.func,\n    springConfig: PropTypes.shape({\n      tension: PropTypes.number,\n      friction: PropTypes.number,\n      useNativeDriver: PropTypes.bool,\n    }),\n    animateOpening: PropTypes.bool,\n    animateClosing: PropTypes.bool,\n    swipeToDismiss: PropTypes.bool,\n    pinchToZoom: PropTypes.bool,\n  },\n\n  getDefaultProps: function() {\n    return {\n      swipeToDismiss: true,\n      pinchToZoom: true,\n      onOpen: () => {},\n      onClose: () => {},\n    };\n  },\n\n  getInitialState: function() {\n    return {\n      isOpen: false,\n      origin: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n      },\n      layoutOpacity: new Animated.Value(1),\n    };\n  },\n\n  getContent: function() {\n    if(this.props.renderContent) {\n      return this.props.renderContent();\n    } else if(this.props.activeProps) {\n      return cloneElement(\n        Children.only(this.props.children),\n        this.props.activeProps\n      );\n    }\n    return this.props.children;\n  },\n\n  getOverlayProps: function() {\n    return {\n      isOpen: this.state.isOpen,\n      origin: this.state.origin,\n      renderHeader: this.props.renderHeader,\n      swipeToDismiss: this.props.swipeToDismiss,\n      pinchToZoom: this.props.pinchToZoom,\n      springConfig: this.props.springConfig,\n      animateOpening: this.props.animateOpening,\n      animateClosing: this.props.animateClosing,\n      backgroundColor: this.props.backgroundColor,\n      children: this.getContent(),\n      onClose: this.onClose,\n    };\n  },\n\n  open: function() {\n    this._root.measureInWindow((x, y, width, height) => {\n      this.props.onOpen();\n\n      this.setState({\n        isOpen: true,\n        origin: {\n          width,\n          height,\n          x,\n          y,\n        },\n      }, () => {\n        if(this.props.navigator) {\n          var route = {\n            component: LightboxOverlay,\n            passProps: this.getOverlayProps(),\n          };\n          var routes = this.props.navigator.getCurrentRoutes();\n          routes.push(route);\n          this.props.navigator.immediatelyResetRouteStack(routes);\n        }\n        this.setTimeout(() => {\n          this.state.layoutOpacity.setValue(0);\n        });\n      });\n    });\n  },\n\n  onClose: function() {\n    this.state.layoutOpacity.setValue(1);\n    this.setState({\n      isOpen: false,\n    }, this.props.onClose);\n    if(this.props.navigator) {\n      var routes = this.props.navigator.getCurrentRoutes();\n      routes.pop();\n      this.props.navigator.immediatelyResetRouteStack(routes);\n    }\n  },\n\n  render: function() {\n    // measure will not return anything useful if we don't attach an onLayout handler on android\n    return (\n      <View\n        ref={component => this._root = component}\n        style={this.props.style}\n        onLayout={() => {}}\n      >\n        <Animated.View style={{opacity: this.state.layoutOpacity}}>\n          <TouchableHighlight\n            underlayColor={this.props.underlayColor}\n            onPress={this.open}\n          >\n            {this.props.children}\n          </TouchableHighlight>\n        </Animated.View>\n        {this.props.navigator ? false : <LightboxOverlay {...this.getOverlayProps()} />}\n      </View>\n    );\n  }\n});\n\nmodule.exports = Lightbox;\n"]},"metadata":{},"sourceType":"script"}