{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _jsxFileName = \"/Users/finnbeardmore/Documents/GitHub/ITCrowd/node_modules/react-native-lightbox/LightboxOverlay.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar React = require('react');\n\nvar createReactClass = require('create-react-class');\n\nvar PropTypes = require('prop-types');\n\nvar Animated = require(\"react-native-web/dist/exports/Animated\").default;\n\nvar Dimensions = require(\"react-native-web/dist/exports/Dimensions\").default;\n\nvar Modal = require(\"react-native-web/dist/exports/Modal\").default;\n\nvar Platform = require(\"react-native-web/dist/exports/Platform\").default;\n\nvar StatusBar = require(\"react-native-web/dist/exports/StatusBar\").default;\n\nvar StyleSheet = require(\"react-native-web/dist/exports/StyleSheet\").default;\n\nvar Text = require(\"react-native-web/dist/exports/Text\").default;\n\nvar TouchableOpacity = require(\"react-native-web/dist/exports/TouchableOpacity\").default;\n\nvar ViewTransformer = require('react-native-view-transformer').default;\n\nvar WINDOW_HEIGHT = Dimensions.get('window').height;\nvar WINDOW_WIDTH = Dimensions.get('window').width;\nvar CLOSING_THRESHOLD = 100;\nvar LightboxOverlay = createReactClass({\n  displayName: \"LightboxOverlay\",\n  propTypes: {\n    origin: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number,\n      width: PropTypes.number,\n      height: PropTypes.number\n    }),\n    springConfig: PropTypes.shape({\n      tension: PropTypes.number,\n      friction: PropTypes.number,\n      useNativeDriver: PropTypes.bool\n    }),\n    animateOpening: PropTypes.bool,\n    animateClosing: PropTypes.bool,\n    backgroundColor: PropTypes.string,\n    isOpen: PropTypes.bool,\n    renderHeader: PropTypes.func,\n    onOpen: PropTypes.func,\n    onClose: PropTypes.func,\n    swipeToDismiss: PropTypes.bool,\n    pinchToZoom: PropTypes.bool\n  },\n  getInitialState: function getInitialState() {\n    return {\n      isClosing: false,\n      target: {\n        x: 0,\n        y: 0,\n        width: WINDOW_WIDTH,\n        height: WINDOW_HEIGHT\n      },\n      closingDistance: new Animated.Value(0),\n      visibility: new Animated.Value(0)\n    };\n  },\n  getDefaultProps: function getDefaultProps() {\n    var _this = this;\n\n    return {\n      springConfig: {\n        tension: 30,\n        friction: 7,\n        useNativeDriver: Platform.OS === 'android'\n      },\n      animateOpening: true,\n      animateClosing: false,\n      backgroundColor: 'black',\n      renderHeader: function renderHeader(close) {\n        return React.createElement(TouchableOpacity, {\n          onPress: close,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: styles.closeButton,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }\n        }, \"\\xD7\"));\n      }\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    if (this.props.isOpen) {\n      this.open();\n    }\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(props) {\n    if (this.props.isOpen != props.isOpen && props.isOpen) {\n      this.open();\n    }\n  },\n  startClosing: function startClosing() {\n    if (this.state.isClosing) {\n      return;\n    }\n\n    this.setState({\n      isClosing: true\n    });\n  },\n  stopClosing: function stopClosing() {\n    if (!this.state.isClosing) {\n      return;\n    }\n\n    this.state.closingDistance.setValue(0);\n    this.setState({\n      isClosing: false\n    });\n  },\n  open: function open() {\n    if (Platform.OS === 'ios') {\n      StatusBar.setHidden(true, 'fade');\n    }\n\n    var animateOpening = this.props.animateOpening;\n\n    if (animateOpening) {\n      Animated.spring(this.state.visibility, _objectSpread({\n        toValue: 1\n      }, this.props.springConfig)).start();\n    } else {\n      this.state.visibility.setValue(1);\n    }\n  },\n  close: function close() {\n    var _this2 = this;\n\n    if (Platform.OS === 'ios') {\n      StatusBar.setHidden(false, 'fade');\n    }\n\n    var animateClosing = this.props.animateClosing;\n\n    if (animateClosing) {\n      Animated.spring(this.state.visibility, _objectSpread({\n        toValue: 0\n      }, this.props.springConfig)).start(function () {\n        return _this2.onClose();\n      });\n    } else {\n      this.onClose();\n    }\n  },\n  onClose: function onClose() {\n    this.props.onClose();\n    this.state.closingDistance.setValue(0);\n    this.state.visibility.setValue(0);\n    this.setState(this.getInitialState());\n  },\n  onViewTransformed: function onViewTransformed(_ref) {\n    var translateY = _ref.translateY,\n        scale = _ref.scale;\n\n    if (scale > 1) {\n      this.stopClosing();\n      return;\n    }\n\n    this.state.closingDistance.setValue(translateY);\n\n    if (Math.abs(translateY) > 0) {\n      this.startClosing();\n    } else {\n      this.stopClosing();\n    }\n  },\n  onTransformGestureReleased: function onTransformGestureReleased(_ref2) {\n    var _this3 = this;\n\n    var translateX = _ref2.translateX,\n        translateY = _ref2.translateY,\n        scale = _ref2.scale;\n    var swipeToDismiss = this.props.swipeToDismiss;\n\n    if (swipeToDismiss && scale === 1 && (Math.abs(translateY) > CLOSING_THRESHOLD || Math.abs(translateX) > CLOSING_THRESHOLD)) {\n      this.setState({\n        isClosing: false,\n        target: {\n          y: translateY,\n          x: translateX,\n          width: WINDOW_WIDTH,\n          height: WINDOW_HEIGHT\n        }\n      }, function () {\n        return _this3.close();\n      });\n    } else {\n      this.stopClosing();\n    }\n  },\n  render: function render() {\n    var _this$props = this.props,\n        isOpen = _this$props.isOpen,\n        renderHeader = _this$props.renderHeader,\n        pinchToZoom = _this$props.pinchToZoom,\n        origin = _this$props.origin,\n        backgroundColor = _this$props.backgroundColor;\n    var _this$state = this.state,\n        isClosing = _this$state.isClosing,\n        visibility = _this$state.visibility,\n        target = _this$state.target;\n    var lightboxOpacityStyle = {\n      opacity: visibility.interpolate({\n        inputRange: [0, 0.8, 1],\n        outputRange: [0, 0.4, 1]\n      })\n    };\n\n    if (isClosing) {\n      lightboxOpacityStyle.opacity = this.state.closingDistance.interpolate({\n        inputRange: [-CLOSING_THRESHOLD * 2, 0, CLOSING_THRESHOLD * 2],\n        outputRange: [0, 1, 0]\n      });\n    }\n\n    var openStyle = [styles.open, {\n      top: target.y,\n      left: target.x,\n      width: target.width,\n      height: target.height,\n      transform: [{\n        translateX: visibility.interpolate({\n          inputRange: [0, 1],\n          outputRange: [origin.x, target.x]\n        })\n      }, {\n        translateY: visibility.interpolate({\n          inputRange: [0, 1],\n          outputRange: [origin.y - origin.height, target.y]\n        })\n      }, {\n        scale: visibility.interpolate({\n          inputRange: [0, 1],\n          outputRange: [origin.width / WINDOW_WIDTH, 1]\n        })\n      }]\n    }];\n    var background = React.createElement(Animated.View, {\n      style: [styles.background, {\n        backgroundColor: backgroundColor\n      }, lightboxOpacityStyle],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }\n    });\n    var header = React.createElement(Animated.View, {\n      style: [styles.header, lightboxOpacityStyle],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 7\n      }\n    }, renderHeader && renderHeader(this.close));\n    var content;\n\n    if (!pinchToZoom) {\n      content = this.props.children;\n    } else {\n      content = React.createElement(ViewTransformer, {\n        style: {\n          flex: 1\n        },\n        enableTransform: true,\n        enableScale: true,\n        enableTranslate: true,\n        enableResistance: true,\n        contentAspectRatio: origin.width / origin.height,\n        maxScale: 3,\n        onTransformGestureReleased: this.onTransformGestureReleased,\n        onViewTransformed: this.onViewTransformed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }\n      }, this.props.children);\n    }\n\n    return React.createElement(Modal, {\n      visible: isOpen,\n      transparent: true,\n      hardwareAccelerated: true,\n      onRequestClose: this.close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 7\n      }\n    }, background, React.createElement(Animated.View, {\n      style: openStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }\n    }, content), header);\n  }\n});\nvar styles = StyleSheet.create({\n  background: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: WINDOW_WIDTH,\n    height: WINDOW_HEIGHT\n  },\n  open: {\n    position: 'absolute',\n    justifyContent: 'center',\n    backgroundColor: 'transparent'\n  },\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: WINDOW_WIDTH,\n    backgroundColor: 'transparent'\n  },\n  closeButton: {\n    fontSize: 35,\n    color: 'white',\n    lineHeight: 40,\n    width: 40,\n    textAlign: 'center',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowRadius: 1.5,\n    shadowColor: 'black',\n    shadowOpacity: 0.8\n  }\n});\nmodule.exports = LightboxOverlay;","map":{"version":3,"sources":["/Users/finnbeardmore/Documents/GitHub/ITCrowd/node_modules/react-native-lightbox/LightboxOverlay.js"],"names":["React","require","createReactClass","PropTypes","ViewTransformer","default","WINDOW_HEIGHT","Dimensions","get","height","WINDOW_WIDTH","width","CLOSING_THRESHOLD","LightboxOverlay","propTypes","origin","shape","x","number","y","springConfig","tension","friction","useNativeDriver","bool","animateOpening","animateClosing","backgroundColor","string","isOpen","renderHeader","func","onOpen","onClose","swipeToDismiss","pinchToZoom","getInitialState","isClosing","target","closingDistance","Animated","Value","visibility","getDefaultProps","Platform","OS","close","styles","closeButton","componentDidMount","props","open","componentWillReceiveProps","startClosing","state","setState","stopClosing","setValue","StatusBar","setHidden","spring","toValue","start","onViewTransformed","translateY","scale","Math","abs","onTransformGestureReleased","translateX","render","lightboxOpacityStyle","opacity","interpolate","inputRange","outputRange","openStyle","top","left","transform","background","header","content","children","flex","StyleSheet","create","position","justifyContent","fontSize","color","lineHeight","textAlign","shadowOffset","shadowRadius","shadowColor","shadowOpacity","module","exports"],"mappings":"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","sourcesContent":["/**\n * @providesModule LightboxOverlay\n */\n'use strict';\n\nvar React = require('react');\nvar createReactClass = require('create-react-class');\nvar PropTypes = require('prop-types');\nvar {\n  Animated,\n  Dimensions,\n  Modal,\n  Platform,\n  StatusBar,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n} = require('react-native');\n\nvar ViewTransformer = require('react-native-view-transformer').default;\nvar WINDOW_HEIGHT = Dimensions.get('window').height;\nvar WINDOW_WIDTH = Dimensions.get('window').width;\n\n// Translation threshold for closing the image preview\nvar CLOSING_THRESHOLD = 100;\n\nvar LightboxOverlay = createReactClass({\n  propTypes: {\n    origin: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n    springConfig: PropTypes.shape({\n      tension: PropTypes.number,\n      friction: PropTypes.number,\n      useNativeDriver: PropTypes.bool,\n    }),\n    animateOpening: PropTypes.bool,\n    animateClosing: PropTypes.bool,\n    backgroundColor: PropTypes.string,\n    isOpen: PropTypes.bool,\n    renderHeader: PropTypes.func,\n    onOpen: PropTypes.func,\n    onClose: PropTypes.func,\n    swipeToDismiss: PropTypes.bool,\n    pinchToZoom: PropTypes.bool,\n  },\n\n  getInitialState: function() {\n    return {\n      isClosing: false,\n      target: {\n        x: 0,\n        y: 0,\n        width: WINDOW_WIDTH,\n        height: WINDOW_HEIGHT,\n      },\n      closingDistance: new Animated.Value(0),\n      visibility: new Animated.Value(0),\n    };\n  },\n\n  getDefaultProps: function() {\n    return {\n      springConfig: {\n        tension: 30,\n        friction: 7,\n        // Native animations work better on Android, but\n        // sometimes still have issues on iOS\n        useNativeDriver: Platform.OS === 'android',\n      },\n      animateOpening: true,\n      animateClosing: false,\n      backgroundColor: 'black',\n      renderHeader: (close) => (\n        <TouchableOpacity onPress={close}>\n          <Text style={styles.closeButton}>×</Text>\n        </TouchableOpacity>\n      )\n    };\n  },\n\n  componentDidMount: function() {\n    if(this.props.isOpen) {\n      this.open();\n    }\n  },\n\n  componentWillReceiveProps: function(props) {\n    if((this.props.isOpen != props.isOpen) && props.isOpen) {\n      this.open();\n    }\n  },\n\n  startClosing: function() {\n    if (this.state.isClosing) {\n      return;\n    }\n\n    this.setState({ isClosing: true });\n  },\n\n  stopClosing: function() {\n    if (!this.state.isClosing) {\n      return;\n    }\n\n    this.state.closingDistance.setValue(0);\n    this.setState({ isClosing: false });\n  },\n\n  open: function() {\n    if (Platform.OS === 'ios') {\n      StatusBar.setHidden(true, 'fade');\n    }\n\n    const { animateOpening } = this.props;\n\n    if (animateOpening) {\n      Animated.spring(\n        this.state.visibility,\n        { toValue: 1, ...this.props.springConfig }\n      ).start();\n    } else {\n      this.state.visibility.setValue(1);\n    }\n  },\n\n  close: function() {\n    if (Platform.OS === 'ios') {\n      StatusBar.setHidden(false, 'fade');\n    }\n\n    const { animateClosing } = this.props;\n    if (animateClosing) {\n      Animated.spring(\n        this.state.visibility,\n        { toValue: 0, ...this.props.springConfig }\n      ).start(() => this.onClose());\n    } else {\n      this.onClose();\n    }\n  },\n\n  onClose: function() {\n    this.props.onClose();\n    this.state.closingDistance.setValue(0);\n    this.state.visibility.setValue(0);\n    this.setState(this.getInitialState());\n  },\n\n  onViewTransformed: function({ translateY, scale }) {\n    if (scale > 1) {\n      this.stopClosing();\n      return;\n    }\n\n    this.state.closingDistance.setValue(translateY);\n    if (Math.abs(translateY) > 0) {\n      this.startClosing();\n    } else {\n      this.stopClosing();\n    }\n  },\n\n  onTransformGestureReleased: function({ translateX, translateY, scale }) {\n    const { swipeToDismiss } = this.props;\n\n    if(swipeToDismiss && (scale === 1) &&\n      ((Math.abs(translateY) > CLOSING_THRESHOLD) ||\n      (Math.abs(translateX) > CLOSING_THRESHOLD))\n    ) {\n      this.setState({\n        isClosing: false,\n        target: {\n          y: translateY,\n          x: translateX,\n          width: WINDOW_WIDTH,\n          height: WINDOW_HEIGHT,\n        }\n      }, () => this.close());\n    } else {\n      this.stopClosing();\n    }\n  },\n\n  render: function() {\n    var {\n      isOpen,\n      renderHeader,\n      pinchToZoom,\n      origin,\n      backgroundColor,\n    } = this.props;\n\n    var {\n      isClosing,\n      visibility,\n      target,\n    } = this.state;\n\n\n    var lightboxOpacityStyle = {\n      opacity: visibility.interpolate({\n        inputRange: [0, 0.8, 1],\n        outputRange: [0, 0.4, 1],\n      })\n    };\n\n    if(isClosing) {\n      lightboxOpacityStyle.opacity = this.state.closingDistance.interpolate({\n        inputRange: [-CLOSING_THRESHOLD * 2, 0, CLOSING_THRESHOLD * 2],\n        outputRange: [0, 1, 0]\n      });\n    }\n\n    var openStyle = [styles.open, {\n      top: target.y,\n      left: target.x,\n      width: target.width,\n      height: target.height,\n      transform: [{\n        translateX: visibility.interpolate({\n          inputRange: [0, 1],\n          outputRange: [origin.x, target.x]\n        })\n      }, {\n        translateY: visibility.interpolate({\n          inputRange: [0, 1],\n          outputRange: [origin.y - origin.height, target.y]\n        })\n      }, {\n        scale: visibility.interpolate({\n          inputRange: [0, 1],\n          outputRange: [origin.width / WINDOW_WIDTH, 1]\n        })\n      }],\n    }];\n\n    var background = (\n      <Animated.View\n        style={[\n          styles.background,\n          { backgroundColor: backgroundColor },\n          lightboxOpacityStyle\n        ]}\n      />\n    );\n    var header = (\n      <Animated.View style={[styles.header, lightboxOpacityStyle]}>\n        {renderHeader && renderHeader(this.close)}\n      </Animated.View>);\n\n    var content;\n\n    if (!pinchToZoom) {\n      content = this.props.children;\n    } else {\n      content = (\n        <ViewTransformer\n          style={{flex: 1}}\n          enableTransform={true}\n          enableScale={true}\n          enableTranslate={true}\n          enableResistance={true}\n          contentAspectRatio={origin.width / origin.height}\n          maxScale={3}\n          onTransformGestureReleased={this.onTransformGestureReleased}\n          onViewTransformed={this.onViewTransformed}\n        >\n          {this.props.children}\n        </ViewTransformer>\n      );\n    }\n\n    return (\n      <Modal\n        visible={isOpen}\n        transparent={true}\n        hardwareAccelerated\n        onRequestClose={this.close}\n      >\n        {background}\n        <Animated.View style={openStyle}>\n          {content}\n        </Animated.View>\n        {header}\n      </Modal>\n    );\n  }\n});\n\nvar styles = StyleSheet.create({\n  background: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: WINDOW_WIDTH,\n    height: WINDOW_HEIGHT,\n  },\n  open: {\n    position: 'absolute',\n    justifyContent: 'center',\n    // Android pan handlers crash without this declaration:\n    backgroundColor: 'transparent',\n  },\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: WINDOW_WIDTH,\n    backgroundColor: 'transparent',\n  },\n  closeButton: {\n    fontSize: 35,\n    color: 'white',\n    lineHeight: 40,\n    width: 40,\n    textAlign: 'center',\n    shadowOffset: {\n      width: 0,\n      height: 0,\n    },\n    shadowRadius: 1.5,\n    shadowColor: 'black',\n    shadowOpacity: 0.8,\n  },\n});\n\nmodule.exports = LightboxOverlay;\n"]},"metadata":{},"sourceType":"script"}