{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/finnbeardmore/Documents/GitHub/ITCrowd.github.io/Untitled/js/start_quiz.js\";\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { NativeBaseProvider, extendTheme, Input, Button, Box, Center, Stack, Heading, Flex } from \"native-base\";\nimport { useFonts, PaytoneOne_400Regular } from \"@expo-google-fonts/paytone-one\";\nimport { useState } from \"react\";\nimport AppLoading from \"expo-app-loading\";\nimport { Roboto_400Regular } from \"@expo-google-fonts/roboto\";\nimport Firebase from \"../config/firebase\";\nimport \"firebase/auth\";\nimport background from \"../assets/login_background.jpg\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useNavigation } from \"@react-navigation/native\";\nvar currentPos = 0;\nvar petArray = [];\nvar printablePetArray = [];\n\nfunction saveData1(data, petData1) {\n  alert(currentPos);\n  alert(data);\n  var petData = \"\";\n  var petNameInput = String(petData1);\n  alert(petData1);\n  var refName = Firebase.database().ref(petData1);\n  refName.on(\"value\", function (snapshot) {\n    var ref = snapshot.val();\n    alert(\"tHIS ONE:\" + ref);\n    petData = ref;\n  });\n\n  if (petData == \"\") {\n    alert(\"nah!\");\n  }\n\n  petArray.push(petData);\n  printablePetArray.push(petData);\n  Firebase.database().ref(\"2/data/\" + Firebase.auth().currentUser.uid).update({\n    petArray: petArray\n  });\n  currentPos++;\n  this.props.navigation.state.params.refresh();\n}\n\nfunction saveData2(data, petData2) {\n  alert(currentPos);\n  alert(petData2);\n  var petData = \"\";\n  var refName = Firebase.database().ref(petData2);\n  refName.on(\"value\", function (snapshot) {\n    var ref = snapshot.val();\n    alert(\"tHIS ONE:\" + ref);\n    petData = ref;\n  });\n\n  if (petData == \"\") {\n    alert(\"nah!\");\n  }\n\n  petArray.push(petData);\n  printablePetArray.push(petData);\n  Firebase.database().ref(\"2/data/\" + Firebase.auth().currentUser.uid).update({\n    petArray: petArray\n  });\n  currentPos++;\n}\n\nfunction nextQuestion(currentPoint) {\n  return questions[currentPoint];\n}\n\nfunction CardComponent() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setRefName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data2 = _useState6[0],\n      setData2 = _useState6[1];\n\n  var leadsRef = Firebase.database().ref(\"8/data/0\");\n  var randomInt = Math.floor(Math.random() * 10);\n  var randomInt2 = Math.floor(Math.random() * 10);\n  var questions = [\"What's better species?\", \"What's a cooler name?\", \"Old soul or young at heart?\", \"Do you like to listen to one song, or mix them together? \", \"What's your favourite colour, (ps. ours is #f72fe3)? \", \"Would you rather a small party or a medium disco? Just asking for a friend? \", \"Men or Women?\", \"Vaxed or Unvaxed, or anti-vaxer? Haha, we're joking. \", \"Pet Living with a disability?\", \"Do you like when the claws come out?\", \"What's a better breed?\", \"Do you want more pets?\", \"At home or away?\"];\n  var listOfValues = [\"Species\", \"Name\", \"Age\", \"BreedIsMixed\", \"ColourPrimary\", \"Size\", \"Sex\", \"IsShotsCurrent\", \"IsSpecialNeeds\", \"IsDeclawed\", \"BreedPrimary\", \"IsSpayedorNeutered\", \"IsHouseTrained\"];\n  var valueDB = listOfValues[currentPos];\n  var currentItem1 = \"8/data/\" + randomInt + \"/\" + valueDB;\n  var currentItem2 = \"8/data/\" + randomInt2 + \"/\" + valueDB;\n  var petData1 = \"8/data/\" + randomInt;\n  var petData2 = \"8/data/\" + randomInt2;\n  var item1 = Firebase.database().ref(currentItem1);\n  var item2 = Firebase.database().ref(currentItem2);\n  item1.on(\"value\", function (snapshot) {\n    snapshot.val();\n    var Name1 = snapshot.val();\n    var count = 0;\n\n    if (Name1 == 0 && data == \"\") {\n      setData(\"No Way!\");\n      count++;\n    }\n\n    if (Name1 == 1 && data == \"\") {\n      setData(\"Yes!\");\n      count++;\n    }\n\n    if (data == \"\" && count == 0) {\n      setData(Name1);\n    }\n  });\n  item2.on(\"value\", function (snapshot) {\n    snapshot.val();\n    var Name1 = snapshot.val();\n\n    if (Name1 == 0) {\n      setData2(\"No Way!\");\n    }\n\n    if (Name1 == 1) {\n      setData2(\"Yes!\");\n    }\n\n    if (data2 == \"\") {\n      setData2(Name1);\n    }\n  });\n  leadsRef.on(\"value\", function (snapshot) {\n    snapshot.forEach(function (childSnapshot) {\n      var childData = childSnapshot.val();\n    });\n  });\n  return React.createElement(Box, {\n    rounded: \"lg\",\n    width: \"60%\",\n    height: \"300px\",\n    shadow: 1,\n    _light: {\n      backgroundColor: \"gray.50\"\n    },\n    _dark: {\n      backgroundColor: \"gray.700\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack, {\n    p: \"4\",\n    space: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, React.createElement(Heading, {\n    size: \"md\",\n    ml: \"-1\",\n    color: \"#545871\",\n    fontFamily: \"PaytoneOne_400Regular\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, \"Question \", currentPos), React.createElement(Text, {\n    style: {\n      color: \"#545871\",\n      fontSize: 15,\n      fontFamily: \"PaytoneOne_400Regular\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, questions[currentPos]), React.createElement(Flex, {\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: data,\n    size: \"sm\",\n    margin: 1,\n    p: 4,\n    onPress: function onPress() {\n      return saveData1(data, petData1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontFamily: \"Roboto_400Regular\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, data)), React.createElement(Button, {\n    size: \"sm\",\n    margin: 1,\n    p: 4,\n    colorScheme: \"secondary\",\n    onPress: function onPress() {\n      return saveData2(data2, petData2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\",\n      fontFamily: \"Roboto_400Regular\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, data2))), React.createElement(Text, {\n    style: {\n      color: \"#545871\",\n      fontSize: 15,\n      fontFamily: \"PaytoneOne_400Regular\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, \"Your Pets\")));\n}\n\nfunction PetComponent() {\n  var count = 0;\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      petArray = _useState8[0],\n      setPetArray = _useState8[1];\n\n  var ref1 = Firebase.database().ref(\"2/data/\" + Firebase.auth().currentUser.uid + \"/petArray\");\n  var childData = [];\n  ref1.on(\"value\", function (snapshot) {\n    snapshot.forEach(function (childSnapshot) {\n      childData.push(JSON.stringify(childSnapshot.val()));\n    });\n  });\n\n  for (var i = 0; i < childData.length; i++) {\n    if (childData[i] != \"\") {\n      var name = childData[i].Name;\n    }\n  }\n\n  return React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 5\n    }\n  }, \" \", React.createElement(Text, {\n    style: {\n      color: \"#545871\",\n      fontSize: 15,\n      fontFamily: \"PaytoneOne_400Regular\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }\n  }, \" \", \"Your Pets\", \" \"), React.createElement(Box, {\n    rounded: \"lg\",\n    width: \"50%\",\n    height: \"150px\",\n    shadow: 1,\n    _light: {\n      backgroundColor: \"red.500\"\n    },\n    _dark: {\n      backgroundColor: \"red.500\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }\n  }, \" \", \" \")));\n}\n\nfunction NoLogin() {\n  return React.createElement(Text, {\n    style: {\n      color: \"red.500\",\n      textAlign: Center,\n      fontSize: 15,\n      fontFamily: \"PaytoneOne_400Regular\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 5\n    }\n  }, \"Please head to the Login Screen!\", \" \");\n}\n\nexport default function StartQuizScreen() {\n  var numberOfUsers = 15;\n  var randomIndex = Math.floor(Math.random() * numberOfUsers);\n\n  var _useState9 = useState(\"Basic\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      mode = _useState10[0],\n      setMode = _useState10[1];\n\n  var navigation = useNavigation();\n  var user = Firebase.auth().currentUser;\n\n  var _useFonts = useFonts({\n    Roboto_400Regular: Roboto_400Regular,\n    PaytoneOne_400Regular: PaytoneOne_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 2),\n      fontsLoaded = _useFonts2[0],\n      error = _useFonts2[1];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (!user) {\n    return React.createElement(NoLogin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(NativeBaseProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: \"25%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }\n  }, React.createElement(CardComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }\n  }), React.createElement(PetComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/finnbeardmore/Documents/GitHub/ITCrowd.github.io/Untitled/js/start_quiz.js"],"names":["React","NativeBaseProvider","extendTheme","Input","Button","Box","Center","Stack","Heading","Flex","useFonts","PaytoneOne_400Regular","useState","AppLoading","Roboto_400Regular","Firebase","background","NavigationContainer","useNavigation","currentPos","petArray","printablePetArray","saveData1","data","petData1","alert","petData","petNameInput","String","refName","database","ref","on","snapshot","val","push","auth","currentUser","uid","update","props","navigation","state","params","refresh","saveData2","petData2","nextQuestion","currentPoint","questions","CardComponent","name","setRefName","setData","data2","setData2","leadsRef","randomInt","Math","floor","random","randomInt2","listOfValues","valueDB","currentItem1","currentItem2","item1","item2","Name1","count","forEach","childSnapshot","childData","backgroundColor","color","fontSize","fontFamily","textAlign","PetComponent","setPetArray","ref1","JSON","stringify","i","length","Name","NoLogin","StartQuizScreen","numberOfUsers","randomIndex","mode","setMode","user","fontsLoaded","error","marginLeft","marginRight","marginTop"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Text,\n  View,\n  Image,\n  ImageBackground,\n  TouchableOpacity,\n  RefreshControl,\n} from \"react-native\";\nimport {\n  NativeBaseProvider,\n  extendTheme,\n  Input,\n  Button,\n  Box,\n  Center,\n  Stack,\n  Heading,\n  Flex,\n} from \"native-base\";\nimport {\n  useFonts,\n  PaytoneOne_400Regular,\n} from \"@expo-google-fonts/paytone-one\";\nimport { useState } from \"react\";\nimport AppLoading from \"expo-app-loading\";\nimport { Roboto_400Regular } from \"@expo-google-fonts/roboto\";\nimport Firebase from \"../config/firebase\";\nimport \"firebase/auth\";\nimport background from \"../assets/login_background.jpg\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nvar currentPos = 0;\nvar petArray = [];\nvar printablePetArray = [];\n/**\n * Save data attached to button 1\n * @param data: value from the onsubmit button\n */\n\nfunction saveData1(data, petData1) {\n  alert(currentPos);\n  alert(data);\n  var petData = \"\";\n  var petNameInput = String(petData1);\n  alert(petData1);\n\n  var refName = Firebase.database().ref(petData1);\n  //var refName = Firebase.database().ref(\"8/data/6/name\");\n  refName.on(\"value\", function (snapshot) {\n    const ref = snapshot.val();\n    alert(\"tHIS ONE:\" + ref);\n    petData = ref;\n  });\n  if (petData == \"\") {\n    alert(\"nah!\");\n  }\n  petArray.push(petData);\n  printablePetArray.push(petData);\n  //petArray.push(Firebase.database().ref(petNameString).val());\n\n  //printablePetArray.push(Firebase.database().ref(petNameString).val());\n  Firebase.database()\n    .ref(\"2/data/\" + Firebase.auth().currentUser.uid)\n    .update({\n      petArray: petArray,\n    });\n  currentPos++;\n  this.props.navigation.state.params.refresh();\n  //navigate(\"Child\", { refresh: refreshFunction });\n\n  /* add data to users pets */\n  //CardComponent();\n}\n/**\n * Save data attached to button 2\n * @param data: value from the onsubmit button\n */\n\nfunction saveData2(data, petData2) {\n  alert(currentPos);\n  alert(petData2);\n  let petData = \"\";\n  var refName = Firebase.database().ref(petData2);\n  //var refName = Firebase.database().ref(\"8/data/6/name\");\n  refName.on(\"value\", function (snapshot) {\n    const ref = snapshot.val();\n    alert(\"tHIS ONE:\" + ref);\n    petData = ref;\n  });\n  if (petData == \"\") {\n    alert(\"nah!\");\n  }\n  petArray.push(petData);\n  printablePetArray.push(petData);\n  /*var pushItem = Firebase.database().ref(petName);\n  pushItem.on(\"value\", function (snapshot) {\n    var pushable = snapshot.val();\n    alert(pushable);\n    printablePetArray.push(pushable);\n  });*/\n  Firebase.database()\n    .ref(\"2/data/\" + Firebase.auth().currentUser.uid)\n    .update({\n      petArray: petArray,\n    });\n  currentPos++;\n  //navigation.navigate(\"start_quiz\");\n  /* add data to users pets */\n  //CardComponent();\n}\nfunction nextQuestion(currentPoint) {\n  return questions[currentPoint];\n}\n//Modified from NativeBase Card Component, with signification style changes\n/**\n * Component to display the UI for the questions asked to the user\n * also generates questions attached to firebase data\n * @returns void\n */\nfunction CardComponent() {\n  const [name, setRefName] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [data2, setData2] = useState(\"\");\n  var leadsRef = Firebase.database().ref(\"8/data/0\");\n  var randomInt = Math.floor(Math.random() * 10);\n  var randomInt2 = Math.floor(Math.random() * 10);\n  var questions = [\n    \"What's better species?\",\n    \"What's a cooler name?\",\n    \"Old soul or young at heart?\",\n    \"Do you like to listen to one song, or mix them together? \",\n    \"What's your favourite colour, (ps. ours is #f72fe3)? \",\n    \"Would you rather a small party or a medium disco? Just asking for a friend? \",\n    \"Men or Women?\",\n    \"Vaxed or Unvaxed, or anti-vaxer? Haha, we're joking. \",\n    \"Pet Living with a disability?\",\n    \"Do you like when the claws come out?\",\n    \"What's a better breed?\",\n    \"Do you want more pets?\",\n    \"At home or away?\",\n  ];\n  var listOfValues = [\n    \"Species\",\n    \"Name\",\n    \"Age\",\n    \"BreedIsMixed\",\n    \"ColourPrimary\",\n    \"Size\",\n    \"Sex\",\n    \"IsShotsCurrent\",\n    \"IsSpecialNeeds\",\n    \"IsDeclawed\",\n    \"BreedPrimary\",\n    \"IsSpayedorNeutered\",\n    \"IsHouseTrained\",\n  ];\n  var valueDB = listOfValues[currentPos];\n  var currentItem1 = \"8/data/\" + randomInt + \"/\" + valueDB;\n  var currentItem2 = \"8/data/\" + randomInt2 + \"/\" + valueDB;\n  var petData1 = \"8/data/\" + randomInt;\n  var petData2 = \"8/data/\" + randomInt2;\n\n  var item1 = Firebase.database().ref(currentItem1);\n  var item2 = Firebase.database().ref(currentItem2);\n  item1.on(\"value\", function (snapshot) {\n    snapshot.val();\n    // alert(snapshot.val());\n    const Name1 = snapshot.val();\n    var count = 0;\n    if (Name1 == 0 && data == \"\") {\n      setData(\"No Way!\");\n      count++;\n    }\n    if (Name1 == 1 && data == \"\") {\n      setData(\"Yes!\");\n      count++;\n    }\n    if (data == \"\" && count == 0) {\n      setData(Name1);\n    }\n    //alert(Name1);\n  });\n  //alert(data);\n\n  item2.on(\"value\", function (snapshot) {\n    snapshot.val();\n    //alert(snapshot.val());\n    const Name1 = snapshot.val();\n    if (Name1 == 0) {\n      setData2(\"No Way!\");\n    }\n    if (Name1 == 1) {\n      setData2(\"Yes!\");\n    }\n    if (data2 == \"\") {\n      setData2(Name1);\n    }\n    //alert(Name1);\n  });\n\n  leadsRef.on(\"value\", function (snapshot) {\n    snapshot.forEach(function (childSnapshot) {\n      var childData = childSnapshot.val();\n      //  alert(childData);\n    });\n  });\n  /* Card Componented taken from nativebase.io with modified style changes \n  REFERENCE: */\n  return (\n    <Box\n      rounded=\"lg\"\n      width=\"60%\"\n      height=\"300px\"\n      shadow={1}\n      _light={{ backgroundColor: \"gray.50\" }}\n      _dark={{ backgroundColor: \"gray.700\" }}\n    >\n      <Stack p=\"4\" space={5}>\n        <Heading\n          size=\"md\"\n          ml=\"-1\"\n          color=\"#545871\"\n          fontFamily=\"PaytoneOne_400Regular\"\n          textAlign=\"center\"\n        >\n          Question {currentPos}\n        </Heading>\n        <Text\n          style={{\n            color: \"#545871\",\n            fontSize: 15,\n            fontFamily: \"PaytoneOne_400Regular\",\n            textAlign: \"center\",\n          }}\n        >\n          {questions[currentPos]}\n        </Text>\n        <Flex direction=\"row\">\n          <Button\n            title={data}\n            size=\"sm\" //  onPress={() => console.log('hello world')}\n            margin={1}\n            p={4}\n            onPress={() => saveData1(data, petData1)}\n          >\n            <Text style={{ color: \"white\", fontFamily: \"Roboto_400Regular\" }}>\n              {data}\n            </Text>\n          </Button>\n          <Button\n            size=\"sm\"\n            margin={1}\n            p={4}\n            colorScheme=\"secondary\"\n            onPress={() => saveData2(data2, petData2)}\n          >\n            <Text style={{ color: \"white\", fontFamily: \"Roboto_400Regular\" }}>\n              {data2}\n            </Text>\n          </Button>\n        </Flex>\n        <Text\n          style={{\n            color: \"#545871\",\n            fontSize: 15,\n            fontFamily: \"PaytoneOne_400Regular\",\n            textAlign: \"center\",\n          }}\n        >\n          Your Pets\n        </Text>\n      </Stack>\n    </Box>\n  );\n}\nfunction PetComponent() {\n  var count = 0;\n  const [petArray, setPetArray] = useState(\"\");\n  var ref1 = Firebase.database().ref(\n    \"2/data/\" + Firebase.auth().currentUser.uid + \"/petArray\"\n  );\n  let childData = [];\n  ref1.on(\"value\", function (snapshot) {\n    snapshot.forEach(function (childSnapshot) {\n      childData.push(JSON.stringify(childSnapshot.val()));\n    });\n  });\n  for (var i = 0; i < childData.length; i++) {\n    if (childData[i] != \"\") {\n      var name = childData[i].Name;\n      // return name;\n    }\n  }\n\n  /* for (var i = 0; i < petArray.length; i++) {\n //  \n    /*add all pet data for each attribute of pet in pet array */\n  // }\n  return (\n    <Box>\n      {\" \"}\n      <Text\n        style={{\n          color: \"#545871\",\n          fontSize: 15,\n          fontFamily: \"PaytoneOne_400Regular\",\n          textAlign: \"center\",\n        }}\n      >\n        {\" \"}\n        Your Pets{\" \"}\n      </Text>\n      <Box\n        rounded=\"lg\"\n        width=\"50%\"\n        height=\"150px\"\n        shadow={1}\n        _light={{ backgroundColor: \"red.500\" }}\n        _dark={{ backgroundColor: \"red.500\" }}\n      >\n        <Text> {} </Text>\n      </Box>\n    </Box>\n  );\n}\n/* Self-authored component */\nfunction NoLogin() {\n  return (\n    <Text\n      style={{\n        color: \"red.500\",\n        textAlign: Center,\n        fontSize: 15,\n        fontFamily: \"PaytoneOne_400Regular\",\n        textAlign: \"center\",\n      }}\n    >\n      Please head to the Login Screen!{\" \"}\n    </Text>\n  );\n}\nexport default function StartQuizScreen() {\n  const numberOfUsers = 15;\n  const randomIndex = Math.floor(Math.random() * numberOfUsers);\n  const [mode, setMode] = useState(\"Basic\");\n  const navigation = useNavigation();\n  var user = Firebase.auth().currentUser;\n\n  let [fontsLoaded, error] = useFonts({\n    Roboto_400Regular,\n    PaytoneOne_400Regular,\n  });\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n  if (!user) {\n    return <NoLogin />;\n  }\n  return (\n    <NativeBaseProvider>\n      <View\n        style={{ marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"25%\" }}\n      >\n        <CardComponent />\n        <PetComponent />\n      </View>\n    </NativeBaseProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}