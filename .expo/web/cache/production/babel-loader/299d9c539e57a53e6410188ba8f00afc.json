{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _native=_interopRequireDefault(require(\"styled-components/native\"));var _styledSystem=require(\"styled-system\");var _customProps=require(\"../../../utils/customProps\");var _hooks=require(\"../../../hooks\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _interactions=require(\"@react-native-aria/interactions\");var _utils=require(\"../../../utils\");var _useResolvedFontFamily=require(\"../../../hooks/useResolvedFontFamily\");var _this=this,_jsxFileName=\"/Users/himanshusatija/projects/nativebase-v3/src/components/primitives/Input/InputBase.tsx\";var StyledInput=(0,_native.default)(_reactNative.TextInput)(_styledSystem.flex,_styledSystem.color,_styledSystem.space,_styledSystem.layout,_styledSystem.flexbox,_styledSystem.border,_styledSystem.typography,_customProps.customBorder,_customProps.customBackground,_customProps.customOutline,_customProps.customShadow,_customProps.customExtra,_customProps.customTypography,_customProps.customLayout);var InputBase=function InputBase(_ref2,ref){var _onKeyPress=_ref2.onKeyPress,_onFocus=_ref2.onFocus,_onBlur=_ref2.onBlur,disableFocusHandling=_ref2.disableFocusHandling,inputProps=_ref2.inputProps,wrapperRef=_ref2.wrapperRef,props=(0,_objectWithoutProperties2.default)(_ref2,[\"onKeyPress\",\"onFocus\",\"onBlur\",\"disableFocusHandling\",\"inputProps\",\"wrapperRef\"]);var _React$useState=_react.default.useState(false),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),isFocused=_React$useState2[0],setIsFocused=_React$useState2[1];var handleFocus=function handleFocus(focusState,callback){!disableFocusHandling&&setIsFocused(focusState);callback();};var inputThemeProps={isDisabled:inputProps.disabled,isInvalid:inputProps.accessibilityInvalid,isReadOnly:inputProps.accessibilityReadOnly,isRequired:inputProps.required};var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Input',(0,_extends2.default)({},inputThemeProps,props)),isFullWidth=_usePropsResolution.isFullWidth,isDisabled=_usePropsResolution.isDisabled,isInvalid=_usePropsResolution.isInvalid,isReadOnly=_usePropsResolution.isReadOnly,ariaLabel=_usePropsResolution.ariaLabel,accessibilityLabel=_usePropsResolution.accessibilityLabel,placeholderTextColor=_usePropsResolution.placeholderTextColor,selectionColor=_usePropsResolution.selectionColor,underlineColorAndroid=_usePropsResolution.underlineColorAndroid,type=_usePropsResolution.type,_hover=_usePropsResolution._hover,_focus=_usePropsResolution._focus,_disabled=_usePropsResolution._disabled,_invalid=_usePropsResolution._invalid,fontFamily=_usePropsResolution.fontFamily,fontWeight=_usePropsResolution.fontWeight,fontStyle=_usePropsResolution.fontStyle,themedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"isFullWidth\",\"isDisabled\",\"isInvalid\",\"isReadOnly\",\"ariaLabel\",\"accessibilityLabel\",\"placeholderTextColor\",\"selectionColor\",\"underlineColorAndroid\",\"type\",\"_hover\",\"_focus\",\"_disabled\",\"_invalid\",\"fontFamily\",\"fontWeight\",\"fontStyle\"]);var _ref=_react.default.useRef(null);var _useHover=(0,_interactions.useHover)({},_ref),isHovered=_useHover.isHovered;var resolvedFontFamily=(0,_useResolvedFontFamily.useResolvedFontFamily)({fontFamily:fontFamily,fontWeight:fontWeight,fontStyle:fontStyle});return _react.default.createElement(StyledInput,(0,_extends2.default)({},inputProps,resolvedFontFamily,{secureTextEntry:type==='password',accessible:true,accessibilityLabel:ariaLabel||accessibilityLabel,editable:isDisabled||isReadOnly?false:true,w:isFullWidth?'100%':undefined},themedProps,isHovered&&_hover,isFocused&&_focus,isDisabled&&_disabled,isInvalid&&_invalid,{placeholderTextColor:(0,_hooks.useToken)('colors',placeholderTextColor),selectionColor:(0,_hooks.useToken)('colors',selectionColor),underlineColorAndroid:(0,_hooks.useToken)('colors',underlineColorAndroid),onKeyPress:function onKeyPress(e){e.persist();_onKeyPress&&_onKeyPress(e);},onFocus:function onFocus(e){handleFocus(true,_onFocus?function(){return _onFocus(e);}:function(){});},onBlur:function onBlur(e){handleFocus(false,_onBlur?function(){return _onBlur(e);}:function(){});}},_reactNative.Platform.OS==='web'?{disabled:isDisabled,cursor:isDisabled?'not-allowed':'auto'}:{},{ref:(0,_utils.mergeRefs)([ref,_ref,wrapperRef]),__self:_this,__source:{fileName:_jsxFileName,lineNumber:108,columnNumber:5}}));};var _default=(0,_react.memo)((0,_react.forwardRef)(InputBase));exports.default=_default;","map":{"version":3,"sources":["InputBase.tsx"],"names":["StyledInput","TextInput","flex","color","space","layout","flexbox","border","typography","customBorder","customBackground","customOutline","customShadow","customExtra","customTypography","customLayout","InputBase","onKeyPress","onFocus","onBlur","disableFocusHandling","inputProps","wrapperRef","props","isFocused","setIsFocused","React","handleFocus","callback","inputThemeProps","isDisabled","isInvalid","isReadOnly","isRequired","isFullWidth","ariaLabel","accessibilityLabel","placeholderTextColor","selectionColor","underlineColorAndroid","type","_hover","_focus","_disabled","_invalid","fontFamily","fontWeight","fontStyle","themedProps","_ref","isHovered","resolvedFontFamily","e","Platform","disabled","cursor"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { TextInput, Platform } from 'react-native';\nimport styled from 'styled-components/native';\nimport {\n  border,\n  flex,\n  space,\n  color,\n  flexbox,\n  layout,\n  typography,\n} from 'styled-system';\nimport {\n  customBorder,\n  customBackground,\n  customOutline,\n  customLayout,\n  customExtra,\n  customShadow,\n  customTypography,\n} from '../../../utils/customProps';\nimport type { IInputProps } from './types';\nimport { useToken } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\n\nconst StyledInput = styled(TextInput)<IInputProps>(\n  flex,\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  typography,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customTypography,\n  customLayout\n);\n\nconst InputBase = (\n  {\n    onKeyPress,\n    onFocus,\n    onBlur,\n    disableFocusHandling,\n    inputProps,\n    wrapperRef,\n    ...props\n  }: IInputProps & {\n    disableFocusHandling?: boolean;\n    inputProps: any;\n  },\n  ref: any\n) => {\n  const [isFocused, setIsFocused] = React.useState(false);\n  const handleFocus = (focusState: boolean, callback: any) => {\n    !disableFocusHandling && setIsFocused(focusState);\n    callback();\n  };\n\n  const inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required,\n  };\n\n  const {\n    isFullWidth,\n    isDisabled,\n    isInvalid,\n    isReadOnly,\n    ariaLabel,\n    accessibilityLabel,\n    placeholderTextColor,\n    selectionColor,\n    underlineColorAndroid,\n    type,\n    _hover,\n    _focus,\n    _disabled,\n    _invalid,\n    fontFamily,\n    fontWeight,\n    fontStyle,\n    ...themedProps\n  } = usePropsResolution('Input', {\n    ...inputThemeProps,\n    ...props,\n  });\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight,\n    fontStyle,\n  });\n\n  return (\n    <StyledInput\n      {...inputProps}\n      {...resolvedFontFamily}\n      secureTextEntry={type === 'password'}\n      accessible\n      accessibilityLabel={ariaLabel || accessibilityLabel}\n      editable={isDisabled || isReadOnly ? false : true}\n      w={isFullWidth ? '100%' : undefined}\n      {...themedProps}\n      {...(isHovered && _hover)}\n      {...(isFocused && _focus)}\n      {...(isDisabled && _disabled)}\n      {...(isInvalid && _invalid)}\n      placeholderTextColor={useToken('colors', placeholderTextColor)}\n      selectionColor={useToken('colors', selectionColor)}\n      underlineColorAndroid={useToken('colors', underlineColorAndroid)}\n      onKeyPress={(e: any) => {\n        e.persist();\n        onKeyPress && onKeyPress(e);\n      }}\n      onFocus={(e) => {\n        handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n      }}\n      onBlur={(e) => {\n        handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n      }}\n      {...(Platform.OS === 'web'\n        ? {\n            disabled: isDisabled,\n            cursor: isDisabled ? 'not-allowed' : 'auto',\n          }\n        : {})}\n      ref={mergeRefs([ref, _ref, wrapperRef])}\n    />\n  );\n};\n\nexport default memo(forwardRef(InputBase));\n"]},"metadata":{},"sourceType":"script"}