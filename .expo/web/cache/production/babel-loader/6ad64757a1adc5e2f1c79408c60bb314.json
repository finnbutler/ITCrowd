{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _utils=require(\"./../../../utils\");var _useThemeProps=require(\"../../../hooks/useThemeProps\");var _Center=require(\"../../composites/Center\");var _FormControl=require(\"../../composites/FormControl\");var _Box=_interopRequireDefault(require(\"../Box\"));var _toggle=require(\"@react-stately/toggle\");var _visuallyHidden=require(\"@react-aria/visually-hidden\");var _CheckboxGroup=require(\"./CheckboxGroup\");var _interactions=require(\"@react-native-aria/interactions\");var _checkbox2=require(\"@react-native-aria/checkbox\");var _focus=require(\"@react-native-aria/focus\");var _Icons=require(\"../Icon/Icons\");var _this=this,_jsxFileName=\"/Users/himanshusatija/projects/nativebase-v3/src/components/primitives/Checkbox/Checkbox.web.tsx\";var Checkbox=function Checkbox(_ref2,ref){var icon=_ref2.icon,wrapperRef=_ref2.wrapperRef,props=(0,_objectWithoutProperties2.default)(_ref2,[\"icon\",\"wrapperRef\"]);var formControlContext=(0,_FormControl.useFormControlContext)();var checkboxGroupContext=_react.default.useContext(_CheckboxGroup.CheckboxGroupContext);var _usePropsResolution=(0,_useThemeProps.usePropsResolution)('Checkbox',(0,_extends2.default)({},checkboxGroupContext,formControlContext,props)),_usePropsResolution$_=_usePropsResolution._interactionBox,_iterationBoxHover=_usePropsResolution$_._hover,_iterationBoxFocus=_usePropsResolution$_._focus,_iterationBoxDisabled=_usePropsResolution$_._disabled,_interactionBox=(0,_objectWithoutProperties2.default)(_usePropsResolution$_,[\"_hover\",\"_focus\",\"_disabled\"]),_usePropsResolution$_2=_usePropsResolution._checkbox,_checkboxChecked=_usePropsResolution$_2._checked,_checkboxDisabled=_usePropsResolution$_2._disabled,_checkboxInvalid=_usePropsResolution$_2._invalid,_checkbox=(0,_objectWithoutProperties2.default)(_usePropsResolution$_2,[\"_checked\",\"_disabled\",\"_invalid\"]),_icon=_usePropsResolution._icon,isInvalid=_usePropsResolution.isInvalid,themedProps=(0,_objectWithoutProperties2.default)(_usePropsResolution,[\"_interactionBox\",\"_checkbox\",\"_icon\",\"isInvalid\"]);var _ref=_react.default.useRef();var mergedRef=(0,_utils.mergeRefs)([ref,_ref]);var state=(0,_toggle.useToggleState)((0,_extends2.default)({},props,{defaultSelected:props.defaultIsChecked,isSelected:props.isChecked}));var groupState=(0,_react.useContext)(_CheckboxGroup.CheckboxGroupContext);var _useHover=(0,_interactions.useHover)({},_ref),isHovered=_useHover.isHovered;var _ref3=groupState?(0,_checkbox2.useCheckboxGroupItem)((0,_extends2.default)({},themedProps,{'aria-label':themedProps.accessibilityLabel,'value':themedProps.value}),groupState.state,mergedRef):(0,_checkbox2.useCheckbox)((0,_extends2.default)({},themedProps,{'aria-label':themedProps.accessibilityLabel}),state,mergedRef),inputProps=_ref3.inputProps;var checked=inputProps.checked,disabled=inputProps.disabled;var sizedIcon=icon?function(){return _react.default.cloneElement(icon,(0,_extends2.default)({},_icon),icon.props.children);}:null;var _useFocusRing=(0,_focus.useFocusRing)(),focusProps=_useFocusRing.focusProps,isFocusVisible=_useFocusRing.isFocusVisible;var component=_react.default.createElement(_Box.default,(0,_extends2.default)({flexDirection:\"row\",alignItems:\"center\"},themedProps,{opacity:disabled?0.4:1,cursor:disabled?'not-allowed':'pointer',__self:_this,__source:{fileName:_jsxFileName,lineNumber:88,columnNumber:5}}),_react.default.createElement(_Center.Center,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:95,columnNumber:7}},_react.default.createElement(_Box.default,(0,_extends2.default)({},_interactionBox,isFocusVisible&&_iterationBoxFocus,isHovered&&_iterationBoxHover,disabled&&_iterationBoxDisabled,disabled&&_iterationBoxDisabled,{style:{transition:'height 200ms, width 200ms'},h:isFocusVisible||isHovered?'200%':'100%',w:isFocusVisible||isHovered?'200%':'100%',zIndex:-1,__self:_this,__source:{fileName:_jsxFileName,lineNumber:97,columnNumber:9}})),_react.default.createElement(_Center.Center,(0,_extends2.default)({},_checkbox,checked&&_checkboxChecked,disabled&&_checkboxDisabled,isInvalid&&_checkboxInvalid,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:112,columnNumber:9}}),icon&&sizedIcon&&checked?sizedIcon():_react.default.createElement(_Icons.CheckIcon,(0,_extends2.default)({name:\"check\"},_icon,{opacity:checked?1:0,__self:_this,__source:{fileName:_jsxFileName,lineNumber:121,columnNumber:13}})))),props.children);return _react.default.createElement(_Box.default,{accessibilityRole:\"label\",ref:(0,_utils.mergeRefs)([wrapperRef,_ref]),__self:_this,__source:{fileName:_jsxFileName,lineNumber:130,columnNumber:5}},_react.default.createElement(_visuallyHidden.VisuallyHidden,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:135,columnNumber:7}},_react.default.createElement(\"input\",(0,_extends2.default)({},inputProps,focusProps,{ref:mergedRef,__self:_this,__source:{fileName:_jsxFileName,lineNumber:136,columnNumber:9}}))),component);};var _default=(0,_react.memo)((0,_react.forwardRef)(Checkbox));exports.default=_default;","map":{"version":3,"sources":["Checkbox.web.tsx"],"names":["Checkbox","icon","wrapperRef","props","formControlContext","checkboxGroupContext","React","CheckboxGroupContext","_iterationBoxHover","_iterationBoxFocus","_iterationBoxDisabled","_interactionBox","_checkboxChecked","_checkboxDisabled","_checkboxInvalid","_checkbox","_icon","isInvalid","themedProps","_ref","mergedRef","state","defaultSelected","isSelected","groupState","isHovered","inputProps","checked","disabled","sizedIcon","focusProps","isFocusVisible","component","transition"],"mappings":"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","sourcesContent":["import React, { useContext, memo, forwardRef } from 'react';\nimport { mergeRefs } from './../../../utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Center } from '../../composites/Center';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport Box from '../Box';\nimport type { ICheckboxProps } from './types';\nimport { useToggleState } from '@react-stately/toggle';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { CheckboxGroupContext } from './CheckboxGroup';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useCheckbox, useCheckboxGroupItem } from '@react-native-aria/checkbox';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { CheckIcon } from '../Icon/Icons';\n\nconst Checkbox = ({ icon, wrapperRef, ...props }: ICheckboxProps, ref: any) => {\n  const formControlContext = useFormControlContext();\n  const checkboxGroupContext = React.useContext(CheckboxGroupContext);\n  const {\n    _interactionBox: {\n      _hover: _iterationBoxHover,\n      _focus: _iterationBoxFocus,\n      _disabled: _iterationBoxDisabled,\n      ..._interactionBox\n    },\n    _checkbox: {\n      _checked: _checkboxChecked,\n      _disabled: _checkboxDisabled,\n      _invalid: _checkboxInvalid,\n      ..._checkbox\n    },\n    _icon,\n    isInvalid,\n    ...themedProps\n  } = usePropsResolution('Checkbox', {\n    ...checkboxGroupContext,\n    ...formControlContext,\n    ...props,\n  });\n  const _ref = React.useRef();\n  const mergedRef = mergeRefs([ref, _ref]);\n  const state = useToggleState({\n    ...props,\n    defaultSelected: props.defaultIsChecked,\n    isSelected: props.isChecked,\n  });\n  const groupState = useContext(CheckboxGroupContext);\n  const { isHovered } = useHover({}, _ref);\n\n  // Swap hooks depending on whether this checkbox is inside a CheckboxGroup.\n  // This is a bit unorthodox. Typically, hooks cannot be called in a conditional,\n  // but since the checkbox won't move in and out of a group, it should be safe.\n  const { inputProps } = groupState\n    ? // eslint-disable-next-line react-hooks/rules-of-hooks\n      useCheckboxGroupItem(\n        {\n          ...themedProps,\n          'aria-label': themedProps.accessibilityLabel,\n          'value': themedProps.value,\n        },\n        groupState.state,\n        //@ts-ignore\n        mergedRef\n      )\n    : // eslint-disable-next-line react-hooks/rules-of-hooks\n      useCheckbox(\n        { ...themedProps, 'aria-label': themedProps.accessibilityLabel },\n        state,\n        //@ts-ignore\n        mergedRef\n      );\n\n  const { checked, disabled } = inputProps;\n\n  const sizedIcon = icon\n    ? () =>\n        React.cloneElement(\n          icon,\n          {\n            ..._icon,\n          },\n          icon.props.children\n        )\n    : null;\n  const { focusProps, isFocusVisible } = useFocusRing();\n\n  const component = (\n    <Box\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      {...themedProps}\n      opacity={disabled ? 0.4 : 1}\n      cursor={disabled ? 'not-allowed' : 'pointer'}\n    >\n      <Center>\n        {/* Interaction Box */}\n        <Box\n          {..._interactionBox}\n          {...(isFocusVisible && _iterationBoxFocus)}\n          {...(isHovered && _iterationBoxHover)}\n          {...(disabled && _iterationBoxDisabled)}\n          {...(disabled && _iterationBoxDisabled)}\n          style={{\n            // @ts-ignore - only for web\"\n            transition: 'height 200ms, width 200ms',\n          }}\n          h={isFocusVisible || isHovered ? '200%' : '100%'}\n          w={isFocusVisible || isHovered ? '200%' : '100%'}\n          zIndex={-1}\n        />\n        {/* Checkbox */}\n        <Center\n          {..._checkbox}\n          {...(checked && _checkboxChecked)}\n          {...(disabled && _checkboxDisabled)}\n          {...(isInvalid && _checkboxInvalid)}\n        >\n          {icon && sizedIcon && checked ? (\n            sizedIcon()\n          ) : (\n            <CheckIcon name=\"check\" {..._icon} opacity={checked ? 1 : 0} />\n          )}\n        </Center>\n      </Center>\n      {props.children}\n    </Box>\n  );\n\n  return (\n    <Box\n      // @ts-ignore - RN web supports accessibilityRole=\"label\"\n      accessibilityRole=\"label\"\n      ref={mergeRefs([wrapperRef, _ref])}\n    >\n      <VisuallyHidden>\n        <input {...inputProps} {...focusProps} ref={mergedRef} />\n      </VisuallyHidden>\n\n      {component}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Checkbox));\n"]},"metadata":{},"sourceType":"script"}